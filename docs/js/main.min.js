/**
 * Modules in this bundle
 * @license
 * 
 * sketch-threejs.js:
 *   version: 2.0.0
 * 
 * gl-matrix:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   maintainers: toji <tojiro@gmail.com>, hughsk <hughskennedy@gmail.com>
 *   contributors: Brandon Jones <tojiro@gmail.com>, Colin MacKenzie IV <sinisterchipmunk@gmail.com>
 *   homepage: http://glmatrix.net
 *   version: 2.3.2
 * 
 * js-util:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   author: yoichi kobayashi
 *   homepage: https://github.com/ykob/js-util#readme
 *   version: 1.0.0
 * 
 * This header is generated by licensify (https://github.com/twada/licensify)
 */
!function n(e,t,o){function a(r,c){if(!t[r]){if(!e[r]){var l="function"==typeof require&&require;if(!c&&l)return l(r,!0);if(i)return i(r,!0);var s=new Error("Cannot find module '"+r+"'");throw s.code="MODULE_NOT_FOUND",s}var u=t[r]={exports:{}};e[r][0].call(u.exports,function(n){var t=e[r][1][n];return a(t?t:n)},u,u.exports,n,e,t,o)}return t[r].exports}for(var i="function"==typeof require&&require,r=0;r<o.length;r++)a(o[r]);return a}({1:[function(n,e,t){t.glMatrix=n("./gl-matrix/common.js"),t.mat2=n("./gl-matrix/mat2.js"),t.mat2d=n("./gl-matrix/mat2d.js"),t.mat3=n("./gl-matrix/mat3.js"),t.mat4=n("./gl-matrix/mat4.js"),t.quat=n("./gl-matrix/quat.js"),t.vec2=n("./gl-matrix/vec2.js"),t.vec3=n("./gl-matrix/vec3.js"),t.vec4=n("./gl-matrix/vec4.js")},{"./gl-matrix/common.js":2,"./gl-matrix/mat2.js":3,"./gl-matrix/mat2d.js":4,"./gl-matrix/mat3.js":5,"./gl-matrix/mat4.js":6,"./gl-matrix/quat.js":7,"./gl-matrix/vec2.js":8,"./gl-matrix/vec3.js":9,"./gl-matrix/vec4.js":10}],2:[function(n,e,t){var o={};o.EPSILON=1e-6,o.ARRAY_TYPE="undefined"!=typeof Float32Array?Float32Array:Array,o.RANDOM=Math.random,o.ENABLE_SIMD=!1,o.SIMD_AVAILABLE=o.ARRAY_TYPE===Float32Array&&"SIMD"in this,o.USE_SIMD=o.ENABLE_SIMD&&o.SIMD_AVAILABLE,o.setMatrixArrayType=function(n){o.ARRAY_TYPE=n};var a=Math.PI/180;o.toRadian=function(n){return n*a},o.equals=function(n,e){return Math.abs(n-e)<=o.EPSILON*Math.max(1,Math.abs(n),Math.abs(e))},e.exports=o},{}],3:[function(n,e,t){var o=n("./common.js"),a={};a.create=function(){var n=new o.ARRAY_TYPE(4);return n[0]=1,n[1]=0,n[2]=0,n[3]=1,n},a.clone=function(n){var e=new o.ARRAY_TYPE(4);return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e},a.copy=function(n,e){return n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=e[3],n},a.identity=function(n){return n[0]=1,n[1]=0,n[2]=0,n[3]=1,n},a.fromValues=function(n,e,t,a){var i=new o.ARRAY_TYPE(4);return i[0]=n,i[1]=e,i[2]=t,i[3]=a,i},a.set=function(n,e,t,o,a){return n[0]=e,n[1]=t,n[2]=o,n[3]=a,n},a.transpose=function(n,e){if(n===e){var t=e[1];n[1]=e[2],n[2]=t}else n[0]=e[0],n[1]=e[2],n[2]=e[1],n[3]=e[3];return n},a.invert=function(n,e){var t=e[0],o=e[1],a=e[2],i=e[3],r=t*i-a*o;return r?(r=1/r,n[0]=i*r,n[1]=-o*r,n[2]=-a*r,n[3]=t*r,n):null},a.adjoint=function(n,e){var t=e[0];return n[0]=e[3],n[1]=-e[1],n[2]=-e[2],n[3]=t,n},a.determinant=function(n){return n[0]*n[3]-n[2]*n[1]},a.multiply=function(n,e,t){var o=e[0],a=e[1],i=e[2],r=e[3],c=t[0],l=t[1],s=t[2],u=t[3];return n[0]=o*c+i*l,n[1]=a*c+r*l,n[2]=o*s+i*u,n[3]=a*s+r*u,n},a.mul=a.multiply,a.rotate=function(n,e,t){var o=e[0],a=e[1],i=e[2],r=e[3],c=Math.sin(t),l=Math.cos(t);return n[0]=o*l+i*c,n[1]=a*l+r*c,n[2]=o*-c+i*l,n[3]=a*-c+r*l,n},a.scale=function(n,e,t){var o=e[0],a=e[1],i=e[2],r=e[3],c=t[0],l=t[1];return n[0]=o*c,n[1]=a*c,n[2]=i*l,n[3]=r*l,n},a.fromRotation=function(n,e){var t=Math.sin(e),o=Math.cos(e);return n[0]=o,n[1]=t,n[2]=-t,n[3]=o,n},a.fromScaling=function(n,e){return n[0]=e[0],n[1]=0,n[2]=0,n[3]=e[1],n},a.str=function(n){return"mat2("+n[0]+", "+n[1]+", "+n[2]+", "+n[3]+")"},a.frob=function(n){return Math.sqrt(Math.pow(n[0],2)+Math.pow(n[1],2)+Math.pow(n[2],2)+Math.pow(n[3],2))},a.LDU=function(n,e,t,o){return n[2]=o[2]/o[0],t[0]=o[0],t[1]=o[1],t[3]=o[3]-n[2]*t[1],[n,e,t]},a.add=function(n,e,t){return n[0]=e[0]+t[0],n[1]=e[1]+t[1],n[2]=e[2]+t[2],n[3]=e[3]+t[3],n},a.subtract=function(n,e,t){return n[0]=e[0]-t[0],n[1]=e[1]-t[1],n[2]=e[2]-t[2],n[3]=e[3]-t[3],n},a.sub=a.subtract,a.exactEquals=function(n,e){return n[0]===e[0]&&n[1]===e[1]&&n[2]===e[2]&&n[3]===e[3]},a.equals=function(n,e){var t=n[0],a=n[1],i=n[2],r=n[3],c=e[0],l=e[1],s=e[2],u=e[3];return Math.abs(t-c)<=o.EPSILON*Math.max(1,Math.abs(t),Math.abs(c))&&Math.abs(a-l)<=o.EPSILON*Math.max(1,Math.abs(a),Math.abs(l))&&Math.abs(i-s)<=o.EPSILON*Math.max(1,Math.abs(i),Math.abs(s))&&Math.abs(r-u)<=o.EPSILON*Math.max(1,Math.abs(r),Math.abs(u))},a.multiplyScalar=function(n,e,t){return n[0]=e[0]*t,n[1]=e[1]*t,n[2]=e[2]*t,n[3]=e[3]*t,n},a.multiplyScalarAndAdd=function(n,e,t,o){return n[0]=e[0]+t[0]*o,n[1]=e[1]+t[1]*o,n[2]=e[2]+t[2]*o,n[3]=e[3]+t[3]*o,n},e.exports=a},{"./common.js":2}],4:[function(n,e,t){var o=n("./common.js"),a={};a.create=function(){var n=new o.ARRAY_TYPE(6);return n[0]=1,n[1]=0,n[2]=0,n[3]=1,n[4]=0,n[5]=0,n},a.clone=function(n){var e=new o.ARRAY_TYPE(6);return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e},a.copy=function(n,e){return n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=e[3],n[4]=e[4],n[5]=e[5],n},a.identity=function(n){return n[0]=1,n[1]=0,n[2]=0,n[3]=1,n[4]=0,n[5]=0,n},a.fromValues=function(n,e,t,a,i,r){var c=new o.ARRAY_TYPE(6);return c[0]=n,c[1]=e,c[2]=t,c[3]=a,c[4]=i,c[5]=r,c},a.set=function(n,e,t,o,a,i,r){return n[0]=e,n[1]=t,n[2]=o,n[3]=a,n[4]=i,n[5]=r,n},a.invert=function(n,e){var t=e[0],o=e[1],a=e[2],i=e[3],r=e[4],c=e[5],l=t*i-o*a;return l?(l=1/l,n[0]=i*l,n[1]=-o*l,n[2]=-a*l,n[3]=t*l,n[4]=(a*c-i*r)*l,n[5]=(o*r-t*c)*l,n):null},a.determinant=function(n){return n[0]*n[3]-n[1]*n[2]},a.multiply=function(n,e,t){var o=e[0],a=e[1],i=e[2],r=e[3],c=e[4],l=e[5],s=t[0],u=t[1],d=t[2],v=t[3],m=t[4],f=t[5];return n[0]=o*s+i*u,n[1]=a*s+r*u,n[2]=o*d+i*v,n[3]=a*d+r*v,n[4]=o*m+i*f+c,n[5]=a*m+r*f+l,n},a.mul=a.multiply,a.rotate=function(n,e,t){var o=e[0],a=e[1],i=e[2],r=e[3],c=e[4],l=e[5],s=Math.sin(t),u=Math.cos(t);return n[0]=o*u+i*s,n[1]=a*u+r*s,n[2]=o*-s+i*u,n[3]=a*-s+r*u,n[4]=c,n[5]=l,n},a.scale=function(n,e,t){var o=e[0],a=e[1],i=e[2],r=e[3],c=e[4],l=e[5],s=t[0],u=t[1];return n[0]=o*s,n[1]=a*s,n[2]=i*u,n[3]=r*u,n[4]=c,n[5]=l,n},a.translate=function(n,e,t){var o=e[0],a=e[1],i=e[2],r=e[3],c=e[4],l=e[5],s=t[0],u=t[1];return n[0]=o,n[1]=a,n[2]=i,n[3]=r,n[4]=o*s+i*u+c,n[5]=a*s+r*u+l,n},a.fromRotation=function(n,e){var t=Math.sin(e),o=Math.cos(e);return n[0]=o,n[1]=t,n[2]=-t,n[3]=o,n[4]=0,n[5]=0,n},a.fromScaling=function(n,e){return n[0]=e[0],n[1]=0,n[2]=0,n[3]=e[1],n[4]=0,n[5]=0,n},a.fromTranslation=function(n,e){return n[0]=1,n[1]=0,n[2]=0,n[3]=1,n[4]=e[0],n[5]=e[1],n},a.str=function(n){return"mat2d("+n[0]+", "+n[1]+", "+n[2]+", "+n[3]+", "+n[4]+", "+n[5]+")"},a.frob=function(n){return Math.sqrt(Math.pow(n[0],2)+Math.pow(n[1],2)+Math.pow(n[2],2)+Math.pow(n[3],2)+Math.pow(n[4],2)+Math.pow(n[5],2)+1)},a.add=function(n,e,t){return n[0]=e[0]+t[0],n[1]=e[1]+t[1],n[2]=e[2]+t[2],n[3]=e[3]+t[3],n[4]=e[4]+t[4],n[5]=e[5]+t[5],n},a.subtract=function(n,e,t){return n[0]=e[0]-t[0],n[1]=e[1]-t[1],n[2]=e[2]-t[2],n[3]=e[3]-t[3],n[4]=e[4]-t[4],n[5]=e[5]-t[5],n},a.sub=a.subtract,a.multiplyScalar=function(n,e,t){return n[0]=e[0]*t,n[1]=e[1]*t,n[2]=e[2]*t,n[3]=e[3]*t,n[4]=e[4]*t,n[5]=e[5]*t,n},a.multiplyScalarAndAdd=function(n,e,t,o){return n[0]=e[0]+t[0]*o,n[1]=e[1]+t[1]*o,n[2]=e[2]+t[2]*o,n[3]=e[3]+t[3]*o,n[4]=e[4]+t[4]*o,n[5]=e[5]+t[5]*o,n},a.exactEquals=function(n,e){return n[0]===e[0]&&n[1]===e[1]&&n[2]===e[2]&&n[3]===e[3]&&n[4]===e[4]&&n[5]===e[5]},a.equals=function(n,e){var t=n[0],a=n[1],i=n[2],r=n[3],c=n[4],l=n[5],s=e[0],u=e[1],d=e[2],v=e[3],m=e[4],f=e[5];return Math.abs(t-s)<=o.EPSILON*Math.max(1,Math.abs(t),Math.abs(s))&&Math.abs(a-u)<=o.EPSILON*Math.max(1,Math.abs(a),Math.abs(u))&&Math.abs(i-d)<=o.EPSILON*Math.max(1,Math.abs(i),Math.abs(d))&&Math.abs(r-v)<=o.EPSILON*Math.max(1,Math.abs(r),Math.abs(v))&&Math.abs(c-m)<=o.EPSILON*Math.max(1,Math.abs(c),Math.abs(m))&&Math.abs(l-f)<=o.EPSILON*Math.max(1,Math.abs(l),Math.abs(f))},e.exports=a},{"./common.js":2}],5:[function(n,e,t){var o=n("./common.js"),a={};a.create=function(){var n=new o.ARRAY_TYPE(9);return n[0]=1,n[1]=0,n[2]=0,n[3]=0,n[4]=1,n[5]=0,n[6]=0,n[7]=0,n[8]=1,n},a.fromMat4=function(n,e){return n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=e[4],n[4]=e[5],n[5]=e[6],n[6]=e[8],n[7]=e[9],n[8]=e[10],n},a.clone=function(n){var e=new o.ARRAY_TYPE(9);return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e},a.copy=function(n,e){return n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=e[3],n[4]=e[4],n[5]=e[5],n[6]=e[6],n[7]=e[7],n[8]=e[8],n},a.fromValues=function(n,e,t,a,i,r,c,l,s){var u=new o.ARRAY_TYPE(9);return u[0]=n,u[1]=e,u[2]=t,u[3]=a,u[4]=i,u[5]=r,u[6]=c,u[7]=l,u[8]=s,u},a.set=function(n,e,t,o,a,i,r,c,l,s){return n[0]=e,n[1]=t,n[2]=o,n[3]=a,n[4]=i,n[5]=r,n[6]=c,n[7]=l,n[8]=s,n},a.identity=function(n){return n[0]=1,n[1]=0,n[2]=0,n[3]=0,n[4]=1,n[5]=0,n[6]=0,n[7]=0,n[8]=1,n},a.transpose=function(n,e){if(n===e){var t=e[1],o=e[2],a=e[5];n[1]=e[3],n[2]=e[6],n[3]=t,n[5]=e[7],n[6]=o,n[7]=a}else n[0]=e[0],n[1]=e[3],n[2]=e[6],n[3]=e[1],n[4]=e[4],n[5]=e[7],n[6]=e[2],n[7]=e[5],n[8]=e[8];return n},a.invert=function(n,e){var t=e[0],o=e[1],a=e[2],i=e[3],r=e[4],c=e[5],l=e[6],s=e[7],u=e[8],d=u*r-c*s,v=-u*i+c*l,m=s*i-r*l,f=t*d+o*v+a*m;return f?(f=1/f,n[0]=d*f,n[1]=(-u*o+a*s)*f,n[2]=(c*o-a*r)*f,n[3]=v*f,n[4]=(u*t-a*l)*f,n[5]=(-c*t+a*i)*f,n[6]=m*f,n[7]=(-s*t+o*l)*f,n[8]=(r*t-o*i)*f,n):null},a.adjoint=function(n,e){var t=e[0],o=e[1],a=e[2],i=e[3],r=e[4],c=e[5],l=e[6],s=e[7],u=e[8];return n[0]=r*u-c*s,n[1]=a*s-o*u,n[2]=o*c-a*r,n[3]=c*l-i*u,n[4]=t*u-a*l,n[5]=a*i-t*c,n[6]=i*s-r*l,n[7]=o*l-t*s,n[8]=t*r-o*i,n},a.determinant=function(n){var e=n[0],t=n[1],o=n[2],a=n[3],i=n[4],r=n[5],c=n[6],l=n[7],s=n[8];return e*(s*i-r*l)+t*(-s*a+r*c)+o*(l*a-i*c)},a.multiply=function(n,e,t){var o=e[0],a=e[1],i=e[2],r=e[3],c=e[4],l=e[5],s=e[6],u=e[7],d=e[8],v=t[0],m=t[1],f=t[2],x=t[3],h=t[4],p=t[5],y=t[6],g=t[7],M=t[8];return n[0]=v*o+m*r+f*s,n[1]=v*a+m*c+f*u,n[2]=v*i+m*l+f*d,n[3]=x*o+h*r+p*s,n[4]=x*a+h*c+p*u,n[5]=x*i+h*l+p*d,n[6]=y*o+g*r+M*s,n[7]=y*a+g*c+M*u,n[8]=y*i+g*l+M*d,n},a.mul=a.multiply,a.translate=function(n,e,t){var o=e[0],a=e[1],i=e[2],r=e[3],c=e[4],l=e[5],s=e[6],u=e[7],d=e[8],v=t[0],m=t[1];return n[0]=o,n[1]=a,n[2]=i,n[3]=r,n[4]=c,n[5]=l,n[6]=v*o+m*r+s,n[7]=v*a+m*c+u,n[8]=v*i+m*l+d,n},a.rotate=function(n,e,t){var o=e[0],a=e[1],i=e[2],r=e[3],c=e[4],l=e[5],s=e[6],u=e[7],d=e[8],v=Math.sin(t),m=Math.cos(t);return n[0]=m*o+v*r,n[1]=m*a+v*c,n[2]=m*i+v*l,n[3]=m*r-v*o,n[4]=m*c-v*a,n[5]=m*l-v*i,n[6]=s,n[7]=u,n[8]=d,n},a.scale=function(n,e,t){var o=t[0],a=t[1];return n[0]=o*e[0],n[1]=o*e[1],n[2]=o*e[2],n[3]=a*e[3],n[4]=a*e[4],n[5]=a*e[5],n[6]=e[6],n[7]=e[7],n[8]=e[8],n},a.fromTranslation=function(n,e){return n[0]=1,n[1]=0,n[2]=0,n[3]=0,n[4]=1,n[5]=0,n[6]=e[0],n[7]=e[1],n[8]=1,n},a.fromRotation=function(n,e){var t=Math.sin(e),o=Math.cos(e);return n[0]=o,n[1]=t,n[2]=0,n[3]=-t,n[4]=o,n[5]=0,n[6]=0,n[7]=0,n[8]=1,n},a.fromScaling=function(n,e){return n[0]=e[0],n[1]=0,n[2]=0,n[3]=0,n[4]=e[1],n[5]=0,n[6]=0,n[7]=0,n[8]=1,n},a.fromMat2d=function(n,e){return n[0]=e[0],n[1]=e[1],n[2]=0,n[3]=e[2],n[4]=e[3],n[5]=0,n[6]=e[4],n[7]=e[5],n[8]=1,n},a.fromQuat=function(n,e){var t=e[0],o=e[1],a=e[2],i=e[3],r=t+t,c=o+o,l=a+a,s=t*r,u=o*r,d=o*c,v=a*r,m=a*c,f=a*l,x=i*r,h=i*c,p=i*l;return n[0]=1-d-f,n[3]=u-p,n[6]=v+h,n[1]=u+p,n[4]=1-s-f,n[7]=m-x,n[2]=v-h,n[5]=m+x,n[8]=1-s-d,n},a.normalFromMat4=function(n,e){var t=e[0],o=e[1],a=e[2],i=e[3],r=e[4],c=e[5],l=e[6],s=e[7],u=e[8],d=e[9],v=e[10],m=e[11],f=e[12],x=e[13],h=e[14],p=e[15],y=t*c-o*r,g=t*l-a*r,M=t*s-i*r,w=o*l-a*c,b=o*s-i*c,E=a*s-i*l,S=u*x-d*f,z=u*h-v*f,D=u*p-m*f,I=d*h-v*x,F=d*p-m*x,R=v*p-m*h,T=y*R-g*F+M*I+w*D-b*z+E*S;return T?(T=1/T,n[0]=(c*R-l*F+s*I)*T,n[1]=(l*D-r*R-s*z)*T,n[2]=(r*F-c*D+s*S)*T,n[3]=(a*F-o*R-i*I)*T,n[4]=(t*R-a*D+i*z)*T,n[5]=(o*D-t*F-i*S)*T,n[6]=(x*E-h*b+p*w)*T,n[7]=(h*M-f*E-p*g)*T,n[8]=(f*b-x*M+p*y)*T,n):null},a.str=function(n){return"mat3("+n[0]+", "+n[1]+", "+n[2]+", "+n[3]+", "+n[4]+", "+n[5]+", "+n[6]+", "+n[7]+", "+n[8]+")"},a.frob=function(n){return Math.sqrt(Math.pow(n[0],2)+Math.pow(n[1],2)+Math.pow(n[2],2)+Math.pow(n[3],2)+Math.pow(n[4],2)+Math.pow(n[5],2)+Math.pow(n[6],2)+Math.pow(n[7],2)+Math.pow(n[8],2))},a.add=function(n,e,t){return n[0]=e[0]+t[0],n[1]=e[1]+t[1],n[2]=e[2]+t[2],n[3]=e[3]+t[3],n[4]=e[4]+t[4],n[5]=e[5]+t[5],n[6]=e[6]+t[6],n[7]=e[7]+t[7],n[8]=e[8]+t[8],n},a.subtract=function(n,e,t){return n[0]=e[0]-t[0],n[1]=e[1]-t[1],n[2]=e[2]-t[2],n[3]=e[3]-t[3],n[4]=e[4]-t[4],n[5]=e[5]-t[5],n[6]=e[6]-t[6],n[7]=e[7]-t[7],n[8]=e[8]-t[8],n},a.sub=a.subtract,a.multiplyScalar=function(n,e,t){return n[0]=e[0]*t,n[1]=e[1]*t,n[2]=e[2]*t,n[3]=e[3]*t,n[4]=e[4]*t,n[5]=e[5]*t,n[6]=e[6]*t,n[7]=e[7]*t,n[8]=e[8]*t,n},a.multiplyScalarAndAdd=function(n,e,t,o){return n[0]=e[0]+t[0]*o,n[1]=e[1]+t[1]*o,n[2]=e[2]+t[2]*o,n[3]=e[3]+t[3]*o,n[4]=e[4]+t[4]*o,n[5]=e[5]+t[5]*o,n[6]=e[6]+t[6]*o,n[7]=e[7]+t[7]*o,n[8]=e[8]+t[8]*o,n},a.exactEquals=function(n,e){return n[0]===e[0]&&n[1]===e[1]&&n[2]===e[2]&&n[3]===e[3]&&n[4]===e[4]&&n[5]===e[5]&&n[6]===e[6]&&n[7]===e[7]&&n[8]===e[8]},a.equals=function(n,e){var t=n[0],a=n[1],i=n[2],r=n[3],c=n[4],l=n[5],s=n[6],u=n[7],d=n[8],v=e[0],m=e[1],f=e[2],x=e[3],h=e[4],p=e[5],y=n[6],g=e[7],M=e[8];return Math.abs(t-v)<=o.EPSILON*Math.max(1,Math.abs(t),Math.abs(v))&&Math.abs(a-m)<=o.EPSILON*Math.max(1,Math.abs(a),Math.abs(m))&&Math.abs(i-f)<=o.EPSILON*Math.max(1,Math.abs(i),Math.abs(f))&&Math.abs(r-x)<=o.EPSILON*Math.max(1,Math.abs(r),Math.abs(x))&&Math.abs(c-h)<=o.EPSILON*Math.max(1,Math.abs(c),Math.abs(h))&&Math.abs(l-p)<=o.EPSILON*Math.max(1,Math.abs(l),Math.abs(p))&&Math.abs(s-y)<=o.EPSILON*Math.max(1,Math.abs(s),Math.abs(y))&&Math.abs(u-g)<=o.EPSILON*Math.max(1,Math.abs(u),Math.abs(g))&&Math.abs(d-M)<=o.EPSILON*Math.max(1,Math.abs(d),Math.abs(M))},e.exports=a},{"./common.js":2}],6:[function(n,e,t){var o=n("./common.js"),a={scalar:{},SIMD:{}};a.create=function(){var n=new o.ARRAY_TYPE(16);return n[0]=1,n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[5]=1,n[6]=0,n[7]=0,n[8]=0,n[9]=0,n[10]=1,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,n},a.clone=function(n){var e=new o.ARRAY_TYPE(16);return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],e},a.copy=function(n,e){return n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=e[3],n[4]=e[4],n[5]=e[5],n[6]=e[6],n[7]=e[7],n[8]=e[8],n[9]=e[9],n[10]=e[10],n[11]=e[11],n[12]=e[12],n[13]=e[13],n[14]=e[14],n[15]=e[15],n},a.fromValues=function(n,e,t,a,i,r,c,l,s,u,d,v,m,f,x,h){var p=new o.ARRAY_TYPE(16);return p[0]=n,p[1]=e,p[2]=t,p[3]=a,p[4]=i,p[5]=r,p[6]=c,p[7]=l,p[8]=s,p[9]=u,p[10]=d,p[11]=v,p[12]=m,p[13]=f,p[14]=x,p[15]=h,p},a.set=function(n,e,t,o,a,i,r,c,l,s,u,d,v,m,f,x,h){return n[0]=e,n[1]=t,n[2]=o,n[3]=a,n[4]=i,n[5]=r,n[6]=c,n[7]=l,n[8]=s,n[9]=u,n[10]=d,n[11]=v,n[12]=m,n[13]=f,n[14]=x,n[15]=h,n},a.identity=function(n){return n[0]=1,n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[5]=1,n[6]=0,n[7]=0,n[8]=0,n[9]=0,n[10]=1,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,n},a.scalar.transpose=function(n,e){if(n===e){var t=e[1],o=e[2],a=e[3],i=e[6],r=e[7],c=e[11];n[1]=e[4],n[2]=e[8],n[3]=e[12],n[4]=t,n[6]=e[9],n[7]=e[13],n[8]=o,n[9]=i,n[11]=e[14],n[12]=a,n[13]=r,n[14]=c}else n[0]=e[0],n[1]=e[4],n[2]=e[8],n[3]=e[12],n[4]=e[1],n[5]=e[5],n[6]=e[9],n[7]=e[13],n[8]=e[2],n[9]=e[6],n[10]=e[10],n[11]=e[14],n[12]=e[3],n[13]=e[7],n[14]=e[11],n[15]=e[15];return n},a.SIMD.transpose=function(n,e){var t,o,a,i,r,c,l,s,u,d;return t=SIMD.Float32x4.load(e,0),o=SIMD.Float32x4.load(e,4),a=SIMD.Float32x4.load(e,8),i=SIMD.Float32x4.load(e,12),r=SIMD.Float32x4.shuffle(t,o,0,1,4,5),c=SIMD.Float32x4.shuffle(a,i,0,1,4,5),l=SIMD.Float32x4.shuffle(r,c,0,2,4,6),s=SIMD.Float32x4.shuffle(r,c,1,3,5,7),SIMD.Float32x4.store(n,0,l),SIMD.Float32x4.store(n,4,s),r=SIMD.Float32x4.shuffle(t,o,2,3,6,7),c=SIMD.Float32x4.shuffle(a,i,2,3,6,7),u=SIMD.Float32x4.shuffle(r,c,0,2,4,6),d=SIMD.Float32x4.shuffle(r,c,1,3,5,7),SIMD.Float32x4.store(n,8,u),SIMD.Float32x4.store(n,12,d),n},a.transpose=o.USE_SIMD?a.SIMD.transpose:a.scalar.transpose,a.scalar.invert=function(n,e){var t=e[0],o=e[1],a=e[2],i=e[3],r=e[4],c=e[5],l=e[6],s=e[7],u=e[8],d=e[9],v=e[10],m=e[11],f=e[12],x=e[13],h=e[14],p=e[15],y=t*c-o*r,g=t*l-a*r,M=t*s-i*r,w=o*l-a*c,b=o*s-i*c,E=a*s-i*l,S=u*x-d*f,z=u*h-v*f,D=u*p-m*f,I=d*h-v*x,F=d*p-m*x,R=v*p-m*h,T=y*R-g*F+M*I+w*D-b*z+E*S;return T?(T=1/T,n[0]=(c*R-l*F+s*I)*T,n[1]=(a*F-o*R-i*I)*T,n[2]=(x*E-h*b+p*w)*T,n[3]=(v*b-d*E-m*w)*T,n[4]=(l*D-r*R-s*z)*T,n[5]=(t*R-a*D+i*z)*T,n[6]=(h*M-f*E-p*g)*T,n[7]=(u*E-v*M+m*g)*T,n[8]=(r*F-c*D+s*S)*T,n[9]=(o*D-t*F-i*S)*T,n[10]=(f*b-x*M+p*y)*T,n[11]=(d*M-u*b-m*y)*T,n[12]=(c*z-r*I-l*S)*T,n[13]=(t*I-o*z+a*S)*T,n[14]=(x*g-f*w-h*y)*T,n[15]=(u*w-d*g+v*y)*T,n):null},a.SIMD.invert=function(n,e){var t,o,a,i,r,c,l,s,u,d,v=SIMD.Float32x4.load(e,0),m=SIMD.Float32x4.load(e,4),f=SIMD.Float32x4.load(e,8),x=SIMD.Float32x4.load(e,12);return r=SIMD.Float32x4.shuffle(v,m,0,1,4,5),o=SIMD.Float32x4.shuffle(f,x,0,1,4,5),t=SIMD.Float32x4.shuffle(r,o,0,2,4,6),o=SIMD.Float32x4.shuffle(o,r,1,3,5,7),r=SIMD.Float32x4.shuffle(v,m,2,3,6,7),i=SIMD.Float32x4.shuffle(f,x,2,3,6,7),a=SIMD.Float32x4.shuffle(r,i,0,2,4,6),i=SIMD.Float32x4.shuffle(i,r,1,3,5,7),r=SIMD.Float32x4.mul(a,i),r=SIMD.Float32x4.swizzle(r,1,0,3,2),c=SIMD.Float32x4.mul(o,r),l=SIMD.Float32x4.mul(t,r),r=SIMD.Float32x4.swizzle(r,2,3,0,1),c=SIMD.Float32x4.sub(SIMD.Float32x4.mul(o,r),c),l=SIMD.Float32x4.sub(SIMD.Float32x4.mul(t,r),l),l=SIMD.Float32x4.swizzle(l,2,3,0,1),r=SIMD.Float32x4.mul(o,a),r=SIMD.Float32x4.swizzle(r,1,0,3,2),c=SIMD.Float32x4.add(SIMD.Float32x4.mul(i,r),c),u=SIMD.Float32x4.mul(t,r),r=SIMD.Float32x4.swizzle(r,2,3,0,1),c=SIMD.Float32x4.sub(c,SIMD.Float32x4.mul(i,r)),u=SIMD.Float32x4.sub(SIMD.Float32x4.mul(t,r),u),u=SIMD.Float32x4.swizzle(u,2,3,0,1),r=SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(o,2,3,0,1),i),r=SIMD.Float32x4.swizzle(r,1,0,3,2),a=SIMD.Float32x4.swizzle(a,2,3,0,1),c=SIMD.Float32x4.add(SIMD.Float32x4.mul(a,r),c),s=SIMD.Float32x4.mul(t,r),r=SIMD.Float32x4.swizzle(r,2,3,0,1),c=SIMD.Float32x4.sub(c,SIMD.Float32x4.mul(a,r)),s=SIMD.Float32x4.sub(SIMD.Float32x4.mul(t,r),s),s=SIMD.Float32x4.swizzle(s,2,3,0,1),r=SIMD.Float32x4.mul(t,o),r=SIMD.Float32x4.swizzle(r,1,0,3,2),s=SIMD.Float32x4.add(SIMD.Float32x4.mul(i,r),s),u=SIMD.Float32x4.sub(SIMD.Float32x4.mul(a,r),u),r=SIMD.Float32x4.swizzle(r,2,3,0,1),s=SIMD.Float32x4.sub(SIMD.Float32x4.mul(i,r),s),u=SIMD.Float32x4.sub(u,SIMD.Float32x4.mul(a,r)),r=SIMD.Float32x4.mul(t,i),r=SIMD.Float32x4.swizzle(r,1,0,3,2),l=SIMD.Float32x4.sub(l,SIMD.Float32x4.mul(a,r)),s=SIMD.Float32x4.add(SIMD.Float32x4.mul(o,r),s),r=SIMD.Float32x4.swizzle(r,2,3,0,1),l=SIMD.Float32x4.add(SIMD.Float32x4.mul(a,r),l),s=SIMD.Float32x4.sub(s,SIMD.Float32x4.mul(o,r)),r=SIMD.Float32x4.mul(t,a),r=SIMD.Float32x4.swizzle(r,1,0,3,2),l=SIMD.Float32x4.add(SIMD.Float32x4.mul(i,r),l),u=SIMD.Float32x4.sub(u,SIMD.Float32x4.mul(o,r)),r=SIMD.Float32x4.swizzle(r,2,3,0,1),l=SIMD.Float32x4.sub(l,SIMD.Float32x4.mul(i,r)),u=SIMD.Float32x4.add(SIMD.Float32x4.mul(o,r),u),d=SIMD.Float32x4.mul(t,c),d=SIMD.Float32x4.add(SIMD.Float32x4.swizzle(d,2,3,0,1),d),d=SIMD.Float32x4.add(SIMD.Float32x4.swizzle(d,1,0,3,2),d),r=SIMD.Float32x4.reciprocalApproximation(d),d=SIMD.Float32x4.sub(SIMD.Float32x4.add(r,r),SIMD.Float32x4.mul(d,SIMD.Float32x4.mul(r,r))),(d=SIMD.Float32x4.swizzle(d,0,0,0,0))?(SIMD.Float32x4.store(n,0,SIMD.Float32x4.mul(d,c)),SIMD.Float32x4.store(n,4,SIMD.Float32x4.mul(d,l)),SIMD.Float32x4.store(n,8,SIMD.Float32x4.mul(d,s)),SIMD.Float32x4.store(n,12,SIMD.Float32x4.mul(d,u)),n):null},a.invert=o.USE_SIMD?a.SIMD.invert:a.scalar.invert,a.scalar.adjoint=function(n,e){var t=e[0],o=e[1],a=e[2],i=e[3],r=e[4],c=e[5],l=e[6],s=e[7],u=e[8],d=e[9],v=e[10],m=e[11],f=e[12],x=e[13],h=e[14],p=e[15];return n[0]=c*(v*p-m*h)-d*(l*p-s*h)+x*(l*m-s*v),n[1]=-(o*(v*p-m*h)-d*(a*p-i*h)+x*(a*m-i*v)),n[2]=o*(l*p-s*h)-c*(a*p-i*h)+x*(a*s-i*l),n[3]=-(o*(l*m-s*v)-c*(a*m-i*v)+d*(a*s-i*l)),n[4]=-(r*(v*p-m*h)-u*(l*p-s*h)+f*(l*m-s*v)),n[5]=t*(v*p-m*h)-u*(a*p-i*h)+f*(a*m-i*v),n[6]=-(t*(l*p-s*h)-r*(a*p-i*h)+f*(a*s-i*l)),n[7]=t*(l*m-s*v)-r*(a*m-i*v)+u*(a*s-i*l),n[8]=r*(d*p-m*x)-u*(c*p-s*x)+f*(c*m-s*d),n[9]=-(t*(d*p-m*x)-u*(o*p-i*x)+f*(o*m-i*d)),n[10]=t*(c*p-s*x)-r*(o*p-i*x)+f*(o*s-i*c),n[11]=-(t*(c*m-s*d)-r*(o*m-i*d)+u*(o*s-i*c)),n[12]=-(r*(d*h-v*x)-u*(c*h-l*x)+f*(c*v-l*d)),n[13]=t*(d*h-v*x)-u*(o*h-a*x)+f*(o*v-a*d),n[14]=-(t*(c*h-l*x)-r*(o*h-a*x)+f*(o*l-a*c)),n[15]=t*(c*v-l*d)-r*(o*v-a*d)+u*(o*l-a*c),n},a.SIMD.adjoint=function(n,e){var t,o,a,i,r,c,l,s,u,d,v,m,f,t=SIMD.Float32x4.load(e,0),o=SIMD.Float32x4.load(e,4),a=SIMD.Float32x4.load(e,8),i=SIMD.Float32x4.load(e,12);return u=SIMD.Float32x4.shuffle(t,o,0,1,4,5),c=SIMD.Float32x4.shuffle(a,i,0,1,4,5),r=SIMD.Float32x4.shuffle(u,c,0,2,4,6),c=SIMD.Float32x4.shuffle(c,u,1,3,5,7),u=SIMD.Float32x4.shuffle(t,o,2,3,6,7),s=SIMD.Float32x4.shuffle(a,i,2,3,6,7),l=SIMD.Float32x4.shuffle(u,s,0,2,4,6),s=SIMD.Float32x4.shuffle(s,u,1,3,5,7),u=SIMD.Float32x4.mul(l,s),u=SIMD.Float32x4.swizzle(u,1,0,3,2),d=SIMD.Float32x4.mul(c,u),v=SIMD.Float32x4.mul(r,u),u=SIMD.Float32x4.swizzle(u,2,3,0,1),d=SIMD.Float32x4.sub(SIMD.Float32x4.mul(c,u),d),v=SIMD.Float32x4.sub(SIMD.Float32x4.mul(r,u),v),v=SIMD.Float32x4.swizzle(v,2,3,0,1),u=SIMD.Float32x4.mul(c,l),u=SIMD.Float32x4.swizzle(u,1,0,3,2),d=SIMD.Float32x4.add(SIMD.Float32x4.mul(s,u),d),f=SIMD.Float32x4.mul(r,u),u=SIMD.Float32x4.swizzle(u,2,3,0,1),d=SIMD.Float32x4.sub(d,SIMD.Float32x4.mul(s,u)),f=SIMD.Float32x4.sub(SIMD.Float32x4.mul(r,u),f),f=SIMD.Float32x4.swizzle(f,2,3,0,1),u=SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(c,2,3,0,1),s),u=SIMD.Float32x4.swizzle(u,1,0,3,2),l=SIMD.Float32x4.swizzle(l,2,3,0,1),d=SIMD.Float32x4.add(SIMD.Float32x4.mul(l,u),d),m=SIMD.Float32x4.mul(r,u),u=SIMD.Float32x4.swizzle(u,2,3,0,1),d=SIMD.Float32x4.sub(d,SIMD.Float32x4.mul(l,u)),m=SIMD.Float32x4.sub(SIMD.Float32x4.mul(r,u),m),m=SIMD.Float32x4.swizzle(m,2,3,0,1),u=SIMD.Float32x4.mul(r,c),u=SIMD.Float32x4.swizzle(u,1,0,3,2),m=SIMD.Float32x4.add(SIMD.Float32x4.mul(s,u),m),f=SIMD.Float32x4.sub(SIMD.Float32x4.mul(l,u),f),u=SIMD.Float32x4.swizzle(u,2,3,0,1),m=SIMD.Float32x4.sub(SIMD.Float32x4.mul(s,u),m),f=SIMD.Float32x4.sub(f,SIMD.Float32x4.mul(l,u)),u=SIMD.Float32x4.mul(r,s),u=SIMD.Float32x4.swizzle(u,1,0,3,2),v=SIMD.Float32x4.sub(v,SIMD.Float32x4.mul(l,u)),m=SIMD.Float32x4.add(SIMD.Float32x4.mul(c,u),m),u=SIMD.Float32x4.swizzle(u,2,3,0,1),v=SIMD.Float32x4.add(SIMD.Float32x4.mul(l,u),v),m=SIMD.Float32x4.sub(m,SIMD.Float32x4.mul(c,u)),u=SIMD.Float32x4.mul(r,l),u=SIMD.Float32x4.swizzle(u,1,0,3,2),v=SIMD.Float32x4.add(SIMD.Float32x4.mul(s,u),v),f=SIMD.Float32x4.sub(f,SIMD.Float32x4.mul(c,u)),u=SIMD.Float32x4.swizzle(u,2,3,0,1),v=SIMD.Float32x4.sub(v,SIMD.Float32x4.mul(s,u)),f=SIMD.Float32x4.add(SIMD.Float32x4.mul(c,u),f),SIMD.Float32x4.store(n,0,d),SIMD.Float32x4.store(n,4,v),SIMD.Float32x4.store(n,8,m),SIMD.Float32x4.store(n,12,f),n},a.adjoint=o.USE_SIMD?a.SIMD.adjoint:a.scalar.adjoint,a.determinant=function(n){var e=n[0],t=n[1],o=n[2],a=n[3],i=n[4],r=n[5],c=n[6],l=n[7],s=n[8],u=n[9],d=n[10],v=n[11],m=n[12],f=n[13],x=n[14],h=n[15],p=e*r-t*i,y=e*c-o*i,g=e*l-a*i,M=t*c-o*r,w=t*l-a*r,b=o*l-a*c,E=s*f-u*m,S=s*x-d*m,z=s*h-v*m,D=u*x-d*f,I=u*h-v*f,F=d*h-v*x;return p*F-y*I+g*D+M*z-w*S+b*E},a.SIMD.multiply=function(n,e,t){var o=SIMD.Float32x4.load(e,0),a=SIMD.Float32x4.load(e,4),i=SIMD.Float32x4.load(e,8),r=SIMD.Float32x4.load(e,12),c=SIMD.Float32x4.load(t,0),l=SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(c,0,0,0,0),o),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(c,1,1,1,1),a),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(c,2,2,2,2),i),SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(c,3,3,3,3),r))));SIMD.Float32x4.store(n,0,l);var s=SIMD.Float32x4.load(t,4),u=SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(s,0,0,0,0),o),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(s,1,1,1,1),a),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(s,2,2,2,2),i),SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(s,3,3,3,3),r))));SIMD.Float32x4.store(n,4,u);var d=SIMD.Float32x4.load(t,8),v=SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(d,0,0,0,0),o),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(d,1,1,1,1),a),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(d,2,2,2,2),i),SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(d,3,3,3,3),r))));SIMD.Float32x4.store(n,8,v);var m=SIMD.Float32x4.load(t,12),f=SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(m,0,0,0,0),o),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(m,1,1,1,1),a),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(m,2,2,2,2),i),SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(m,3,3,3,3),r))));return SIMD.Float32x4.store(n,12,f),n},a.scalar.multiply=function(n,e,t){var o=e[0],a=e[1],i=e[2],r=e[3],c=e[4],l=e[5],s=e[6],u=e[7],d=e[8],v=e[9],m=e[10],f=e[11],x=e[12],h=e[13],p=e[14],y=e[15],g=t[0],M=t[1],w=t[2],b=t[3];return n[0]=g*o+M*c+w*d+b*x,n[1]=g*a+M*l+w*v+b*h,n[2]=g*i+M*s+w*m+b*p,n[3]=g*r+M*u+w*f+b*y,g=t[4],M=t[5],w=t[6],b=t[7],n[4]=g*o+M*c+w*d+b*x,n[5]=g*a+M*l+w*v+b*h,n[6]=g*i+M*s+w*m+b*p,n[7]=g*r+M*u+w*f+b*y,g=t[8],M=t[9],w=t[10],b=t[11],n[8]=g*o+M*c+w*d+b*x,n[9]=g*a+M*l+w*v+b*h,n[10]=g*i+M*s+w*m+b*p,n[11]=g*r+M*u+w*f+b*y,g=t[12],M=t[13],w=t[14],b=t[15],n[12]=g*o+M*c+w*d+b*x,n[13]=g*a+M*l+w*v+b*h,n[14]=g*i+M*s+w*m+b*p,n[15]=g*r+M*u+w*f+b*y,n},a.multiply=o.USE_SIMD?a.SIMD.multiply:a.scalar.multiply,a.mul=a.multiply,a.scalar.translate=function(n,e,t){var o,a,i,r,c,l,s,u,d,v,m,f,x=t[0],h=t[1],p=t[2];return e===n?(n[12]=e[0]*x+e[4]*h+e[8]*p+e[12],n[13]=e[1]*x+e[5]*h+e[9]*p+e[13],n[14]=e[2]*x+e[6]*h+e[10]*p+e[14],n[15]=e[3]*x+e[7]*h+e[11]*p+e[15]):(o=e[0],a=e[1],i=e[2],r=e[3],c=e[4],l=e[5],s=e[6],u=e[7],d=e[8],v=e[9],m=e[10],f=e[11],n[0]=o,n[1]=a,n[2]=i,n[3]=r,n[4]=c,n[5]=l,n[6]=s,n[7]=u,n[8]=d,n[9]=v,n[10]=m,n[11]=f,n[12]=o*x+c*h+d*p+e[12],n[13]=a*x+l*h+v*p+e[13],n[14]=i*x+s*h+m*p+e[14],n[15]=r*x+u*h+f*p+e[15]),n},a.SIMD.translate=function(n,e,t){var o=SIMD.Float32x4.load(e,0),a=SIMD.Float32x4.load(e,4),i=SIMD.Float32x4.load(e,8),r=SIMD.Float32x4.load(e,12),c=SIMD.Float32x4(t[0],t[1],t[2],0);e!==n&&(n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=e[3],n[4]=e[4],n[5]=e[5],n[6]=e[6],n[7]=e[7],n[8]=e[8],n[9]=e[9],n[10]=e[10],n[11]=e[11]),o=SIMD.Float32x4.mul(o,SIMD.Float32x4.swizzle(c,0,0,0,0)),a=SIMD.Float32x4.mul(a,SIMD.Float32x4.swizzle(c,1,1,1,1)),i=SIMD.Float32x4.mul(i,SIMD.Float32x4.swizzle(c,2,2,2,2));var l=SIMD.Float32x4.add(o,SIMD.Float32x4.add(a,SIMD.Float32x4.add(i,r)));return SIMD.Float32x4.store(n,12,l),n},a.translate=o.USE_SIMD?a.SIMD.translate:a.scalar.translate,a.scalar.scale=function(n,e,t){var o=t[0],a=t[1],i=t[2];return n[0]=e[0]*o,n[1]=e[1]*o,n[2]=e[2]*o,n[3]=e[3]*o,n[4]=e[4]*a,n[5]=e[5]*a,n[6]=e[6]*a,n[7]=e[7]*a,n[8]=e[8]*i,n[9]=e[9]*i,n[10]=e[10]*i,n[11]=e[11]*i,n[12]=e[12],n[13]=e[13],n[14]=e[14],n[15]=e[15],n},a.SIMD.scale=function(n,e,t){var o,a,i,r=SIMD.Float32x4(t[0],t[1],t[2],0);return o=SIMD.Float32x4.load(e,0),SIMD.Float32x4.store(n,0,SIMD.Float32x4.mul(o,SIMD.Float32x4.swizzle(r,0,0,0,0))),a=SIMD.Float32x4.load(e,4),SIMD.Float32x4.store(n,4,SIMD.Float32x4.mul(a,SIMD.Float32x4.swizzle(r,1,1,1,1))),i=SIMD.Float32x4.load(e,8),SIMD.Float32x4.store(n,8,SIMD.Float32x4.mul(i,SIMD.Float32x4.swizzle(r,2,2,2,2))),n[12]=e[12],n[13]=e[13],n[14]=e[14],n[15]=e[15],n},a.scale=o.USE_SIMD?a.SIMD.scale:a.scalar.scale,a.rotate=function(n,e,t,a){var i,r,c,l,s,u,d,v,m,f,x,h,p,y,g,M,w,b,E,S,z,D,I,F,R=a[0],T=a[1],P=a[2],H=Math.sqrt(R*R+T*T+P*P);return Math.abs(H)<o.EPSILON?null:(H=1/H,R*=H,T*=H,P*=H,i=Math.sin(t),r=Math.cos(t),c=1-r,l=e[0],s=e[1],u=e[2],d=e[3],v=e[4],m=e[5],f=e[6],x=e[7],h=e[8],p=e[9],y=e[10],g=e[11],M=R*R*c+r,w=T*R*c+P*i,b=P*R*c-T*i,E=R*T*c-P*i,S=T*T*c+r,z=P*T*c+R*i,D=R*P*c+T*i,I=T*P*c-R*i,F=P*P*c+r,n[0]=l*M+v*w+h*b,n[1]=s*M+m*w+p*b,n[2]=u*M+f*w+y*b,n[3]=d*M+x*w+g*b,n[4]=l*E+v*S+h*z,n[5]=s*E+m*S+p*z,n[6]=u*E+f*S+y*z,n[7]=d*E+x*S+g*z,n[8]=l*D+v*I+h*F,n[9]=s*D+m*I+p*F,n[10]=u*D+f*I+y*F,n[11]=d*D+x*I+g*F,e!==n&&(n[12]=e[12],n[13]=e[13],n[14]=e[14],n[15]=e[15]),n)},a.scalar.rotateX=function(n,e,t){var o=Math.sin(t),a=Math.cos(t),i=e[4],r=e[5],c=e[6],l=e[7],s=e[8],u=e[9],d=e[10],v=e[11];return e!==n&&(n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=e[3],n[12]=e[12],n[13]=e[13],n[14]=e[14],n[15]=e[15]),n[4]=i*a+s*o,n[5]=r*a+u*o,n[6]=c*a+d*o,n[7]=l*a+v*o,n[8]=s*a-i*o,n[9]=u*a-r*o,n[10]=d*a-c*o,n[11]=v*a-l*o,n},a.SIMD.rotateX=function(n,e,t){var o=SIMD.Float32x4.splat(Math.sin(t)),a=SIMD.Float32x4.splat(Math.cos(t));e!==n&&(n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=e[3],n[12]=e[12],n[13]=e[13],n[14]=e[14],n[15]=e[15]);var i=SIMD.Float32x4.load(e,4),r=SIMD.Float32x4.load(e,8);return SIMD.Float32x4.store(n,4,SIMD.Float32x4.add(SIMD.Float32x4.mul(i,a),SIMD.Float32x4.mul(r,o))),SIMD.Float32x4.store(n,8,SIMD.Float32x4.sub(SIMD.Float32x4.mul(r,a),SIMD.Float32x4.mul(i,o))),n},a.rotateX=o.USE_SIMD?a.SIMD.rotateX:a.scalar.rotateX,a.scalar.rotateY=function(n,e,t){var o=Math.sin(t),a=Math.cos(t),i=e[0],r=e[1],c=e[2],l=e[3],s=e[8],u=e[9],d=e[10],v=e[11];return e!==n&&(n[4]=e[4],n[5]=e[5],n[6]=e[6],n[7]=e[7],n[12]=e[12],n[13]=e[13],n[14]=e[14],n[15]=e[15]),n[0]=i*a-s*o,n[1]=r*a-u*o,n[2]=c*a-d*o,n[3]=l*a-v*o,n[8]=i*o+s*a,n[9]=r*o+u*a,n[10]=c*o+d*a,n[11]=l*o+v*a,n},a.SIMD.rotateY=function(n,e,t){var o=SIMD.Float32x4.splat(Math.sin(t)),a=SIMD.Float32x4.splat(Math.cos(t));e!==n&&(n[4]=e[4],n[5]=e[5],n[6]=e[6],n[7]=e[7],n[12]=e[12],n[13]=e[13],n[14]=e[14],n[15]=e[15]);var i=SIMD.Float32x4.load(e,0),r=SIMD.Float32x4.load(e,8);return SIMD.Float32x4.store(n,0,SIMD.Float32x4.sub(SIMD.Float32x4.mul(i,a),SIMD.Float32x4.mul(r,o))),SIMD.Float32x4.store(n,8,SIMD.Float32x4.add(SIMD.Float32x4.mul(i,o),SIMD.Float32x4.mul(r,a))),n},a.rotateY=o.USE_SIMD?a.SIMD.rotateY:a.scalar.rotateY,a.scalar.rotateZ=function(n,e,t){var o=Math.sin(t),a=Math.cos(t),i=e[0],r=e[1],c=e[2],l=e[3],s=e[4],u=e[5],d=e[6],v=e[7];return e!==n&&(n[8]=e[8],n[9]=e[9],n[10]=e[10],n[11]=e[11],n[12]=e[12],n[13]=e[13],n[14]=e[14],n[15]=e[15]),n[0]=i*a+s*o,n[1]=r*a+u*o,n[2]=c*a+d*o,n[3]=l*a+v*o,n[4]=s*a-i*o,n[5]=u*a-r*o,n[6]=d*a-c*o,n[7]=v*a-l*o,n},a.SIMD.rotateZ=function(n,e,t){var o=SIMD.Float32x4.splat(Math.sin(t)),a=SIMD.Float32x4.splat(Math.cos(t));e!==n&&(n[8]=e[8],n[9]=e[9],n[10]=e[10],n[11]=e[11],n[12]=e[12],n[13]=e[13],n[14]=e[14],n[15]=e[15]);var i=SIMD.Float32x4.load(e,0),r=SIMD.Float32x4.load(e,4);return SIMD.Float32x4.store(n,0,SIMD.Float32x4.add(SIMD.Float32x4.mul(i,a),SIMD.Float32x4.mul(r,o))),SIMD.Float32x4.store(n,4,SIMD.Float32x4.sub(SIMD.Float32x4.mul(r,a),SIMD.Float32x4.mul(i,o))),n},a.rotateZ=o.USE_SIMD?a.SIMD.rotateZ:a.scalar.rotateZ,a.fromTranslation=function(n,e){return n[0]=1,n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[5]=1,n[6]=0,n[7]=0,n[8]=0,n[9]=0,n[10]=1,n[11]=0,n[12]=e[0],n[13]=e[1],n[14]=e[2],n[15]=1,n},a.fromScaling=function(n,e){return n[0]=e[0],n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[5]=e[1],n[6]=0,n[7]=0,n[8]=0,n[9]=0,n[10]=e[2],n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,n},a.fromRotation=function(n,e,t){var a,i,r,c=t[0],l=t[1],s=t[2],u=Math.sqrt(c*c+l*l+s*s);return Math.abs(u)<o.EPSILON?null:(u=1/u,c*=u,l*=u,s*=u,a=Math.sin(e),i=Math.cos(e),r=1-i,n[0]=c*c*r+i,n[1]=l*c*r+s*a,n[2]=s*c*r-l*a,n[3]=0,n[4]=c*l*r-s*a,n[5]=l*l*r+i,n[6]=s*l*r+c*a,n[7]=0,n[8]=c*s*r+l*a,n[9]=l*s*r-c*a,n[10]=s*s*r+i,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,n)},a.fromXRotation=function(n,e){var t=Math.sin(e),o=Math.cos(e);return n[0]=1,n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[5]=o,n[6]=t,n[7]=0,n[8]=0,n[9]=-t,n[10]=o,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,n},a.fromYRotation=function(n,e){var t=Math.sin(e),o=Math.cos(e);return n[0]=o,n[1]=0,n[2]=-t,n[3]=0,n[4]=0,n[5]=1,n[6]=0,n[7]=0,n[8]=t,n[9]=0,n[10]=o,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,n},a.fromZRotation=function(n,e){var t=Math.sin(e),o=Math.cos(e);return n[0]=o,n[1]=t,n[2]=0,n[3]=0,n[4]=-t,n[5]=o,n[6]=0,n[7]=0,n[8]=0,n[9]=0,n[10]=1,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,n},a.fromRotationTranslation=function(n,e,t){var o=e[0],a=e[1],i=e[2],r=e[3],c=o+o,l=a+a,s=i+i,u=o*c,d=o*l,v=o*s,m=a*l,f=a*s,x=i*s,h=r*c,p=r*l,y=r*s;return n[0]=1-(m+x),n[1]=d+y,n[2]=v-p,n[3]=0,n[4]=d-y,n[5]=1-(u+x),n[6]=f+h,n[7]=0,n[8]=v+p,n[9]=f-h,n[10]=1-(u+m),n[11]=0,n[12]=t[0],n[13]=t[1],n[14]=t[2],n[15]=1,n},a.getTranslation=function(n,e){return n[0]=e[12],n[1]=e[13],n[2]=e[14],n},a.getRotation=function(n,e){var t=e[0]+e[5]+e[10],o=0;return t>0?(o=2*Math.sqrt(t+1),n[3]=.25*o,n[0]=(e[6]-e[9])/o,n[1]=(e[8]-e[2])/o,n[2]=(e[1]-e[4])/o):e[0]>e[5]&e[0]>e[10]?(o=2*Math.sqrt(1+e[0]-e[5]-e[10]),n[3]=(e[6]-e[9])/o,n[0]=.25*o,n[1]=(e[1]+e[4])/o,n[2]=(e[8]+e[2])/o):e[5]>e[10]?(o=2*Math.sqrt(1+e[5]-e[0]-e[10]),n[3]=(e[8]-e[2])/o,n[0]=(e[1]+e[4])/o,n[1]=.25*o,n[2]=(e[6]+e[9])/o):(o=2*Math.sqrt(1+e[10]-e[0]-e[5]),
n[3]=(e[1]-e[4])/o,n[0]=(e[8]+e[2])/o,n[1]=(e[6]+e[9])/o,n[2]=.25*o),n},a.fromRotationTranslationScale=function(n,e,t,o){var a=e[0],i=e[1],r=e[2],c=e[3],l=a+a,s=i+i,u=r+r,d=a*l,v=a*s,m=a*u,f=i*s,x=i*u,h=r*u,p=c*l,y=c*s,g=c*u,M=o[0],w=o[1],b=o[2];return n[0]=(1-(f+h))*M,n[1]=(v+g)*M,n[2]=(m-y)*M,n[3]=0,n[4]=(v-g)*w,n[5]=(1-(d+h))*w,n[6]=(x+p)*w,n[7]=0,n[8]=(m+y)*b,n[9]=(x-p)*b,n[10]=(1-(d+f))*b,n[11]=0,n[12]=t[0],n[13]=t[1],n[14]=t[2],n[15]=1,n},a.fromRotationTranslationScaleOrigin=function(n,e,t,o,a){var i=e[0],r=e[1],c=e[2],l=e[3],s=i+i,u=r+r,d=c+c,v=i*s,m=i*u,f=i*d,x=r*u,h=r*d,p=c*d,y=l*s,g=l*u,M=l*d,w=o[0],b=o[1],E=o[2],S=a[0],z=a[1],D=a[2];return n[0]=(1-(x+p))*w,n[1]=(m+M)*w,n[2]=(f-g)*w,n[3]=0,n[4]=(m-M)*b,n[5]=(1-(v+p))*b,n[6]=(h+y)*b,n[7]=0,n[8]=(f+g)*E,n[9]=(h-y)*E,n[10]=(1-(v+x))*E,n[11]=0,n[12]=t[0]+S-(n[0]*S+n[4]*z+n[8]*D),n[13]=t[1]+z-(n[1]*S+n[5]*z+n[9]*D),n[14]=t[2]+D-(n[2]*S+n[6]*z+n[10]*D),n[15]=1,n},a.fromQuat=function(n,e){var t=e[0],o=e[1],a=e[2],i=e[3],r=t+t,c=o+o,l=a+a,s=t*r,u=o*r,d=o*c,v=a*r,m=a*c,f=a*l,x=i*r,h=i*c,p=i*l;return n[0]=1-d-f,n[1]=u+p,n[2]=v-h,n[3]=0,n[4]=u-p,n[5]=1-s-f,n[6]=m+x,n[7]=0,n[8]=v+h,n[9]=m-x,n[10]=1-s-d,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,n},a.frustum=function(n,e,t,o,a,i,r){var c=1/(t-e),l=1/(a-o),s=1/(i-r);return n[0]=2*i*c,n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[5]=2*i*l,n[6]=0,n[7]=0,n[8]=(t+e)*c,n[9]=(a+o)*l,n[10]=(r+i)*s,n[11]=-1,n[12]=0,n[13]=0,n[14]=r*i*2*s,n[15]=0,n},a.perspective=function(n,e,t,o,a){var i=1/Math.tan(e/2),r=1/(o-a);return n[0]=i/t,n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[5]=i,n[6]=0,n[7]=0,n[8]=0,n[9]=0,n[10]=(a+o)*r,n[11]=-1,n[12]=0,n[13]=0,n[14]=2*a*o*r,n[15]=0,n},a.perspectiveFromFieldOfView=function(n,e,t,o){var a=Math.tan(e.upDegrees*Math.PI/180),i=Math.tan(e.downDegrees*Math.PI/180),r=Math.tan(e.leftDegrees*Math.PI/180),c=Math.tan(e.rightDegrees*Math.PI/180),l=2/(r+c),s=2/(a+i);return n[0]=l,n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[5]=s,n[6]=0,n[7]=0,n[8]=-((r-c)*l*.5),n[9]=(a-i)*s*.5,n[10]=o/(t-o),n[11]=-1,n[12]=0,n[13]=0,n[14]=o*t/(t-o),n[15]=0,n},a.ortho=function(n,e,t,o,a,i,r){var c=1/(e-t),l=1/(o-a),s=1/(i-r);return n[0]=-2*c,n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[5]=-2*l,n[6]=0,n[7]=0,n[8]=0,n[9]=0,n[10]=2*s,n[11]=0,n[12]=(e+t)*c,n[13]=(a+o)*l,n[14]=(r+i)*s,n[15]=1,n},a.lookAt=function(n,e,t,i){var r,c,l,s,u,d,v,m,f,x,h=e[0],p=e[1],y=e[2],g=i[0],M=i[1],w=i[2],b=t[0],E=t[1],S=t[2];return Math.abs(h-b)<o.EPSILON&&Math.abs(p-E)<o.EPSILON&&Math.abs(y-S)<o.EPSILON?a.identity(n):(v=h-b,m=p-E,f=y-S,x=1/Math.sqrt(v*v+m*m+f*f),v*=x,m*=x,f*=x,r=M*f-w*m,c=w*v-g*f,l=g*m-M*v,x=Math.sqrt(r*r+c*c+l*l),x?(x=1/x,r*=x,c*=x,l*=x):(r=0,c=0,l=0),s=m*l-f*c,u=f*r-v*l,d=v*c-m*r,x=Math.sqrt(s*s+u*u+d*d),x?(x=1/x,s*=x,u*=x,d*=x):(s=0,u=0,d=0),n[0]=r,n[1]=s,n[2]=v,n[3]=0,n[4]=c,n[5]=u,n[6]=m,n[7]=0,n[8]=l,n[9]=d,n[10]=f,n[11]=0,n[12]=-(r*h+c*p+l*y),n[13]=-(s*h+u*p+d*y),n[14]=-(v*h+m*p+f*y),n[15]=1,n)},a.str=function(n){return"mat4("+n[0]+", "+n[1]+", "+n[2]+", "+n[3]+", "+n[4]+", "+n[5]+", "+n[6]+", "+n[7]+", "+n[8]+", "+n[9]+", "+n[10]+", "+n[11]+", "+n[12]+", "+n[13]+", "+n[14]+", "+n[15]+")"},a.frob=function(n){return Math.sqrt(Math.pow(n[0],2)+Math.pow(n[1],2)+Math.pow(n[2],2)+Math.pow(n[3],2)+Math.pow(n[4],2)+Math.pow(n[5],2)+Math.pow(n[6],2)+Math.pow(n[7],2)+Math.pow(n[8],2)+Math.pow(n[9],2)+Math.pow(n[10],2)+Math.pow(n[11],2)+Math.pow(n[12],2)+Math.pow(n[13],2)+Math.pow(n[14],2)+Math.pow(n[15],2))},a.add=function(n,e,t){return n[0]=e[0]+t[0],n[1]=e[1]+t[1],n[2]=e[2]+t[2],n[3]=e[3]+t[3],n[4]=e[4]+t[4],n[5]=e[5]+t[5],n[6]=e[6]+t[6],n[7]=e[7]+t[7],n[8]=e[8]+t[8],n[9]=e[9]+t[9],n[10]=e[10]+t[10],n[11]=e[11]+t[11],n[12]=e[12]+t[12],n[13]=e[13]+t[13],n[14]=e[14]+t[14],n[15]=e[15]+t[15],n},a.subtract=function(n,e,t){return n[0]=e[0]-t[0],n[1]=e[1]-t[1],n[2]=e[2]-t[2],n[3]=e[3]-t[3],n[4]=e[4]-t[4],n[5]=e[5]-t[5],n[6]=e[6]-t[6],n[7]=e[7]-t[7],n[8]=e[8]-t[8],n[9]=e[9]-t[9],n[10]=e[10]-t[10],n[11]=e[11]-t[11],n[12]=e[12]-t[12],n[13]=e[13]-t[13],n[14]=e[14]-t[14],n[15]=e[15]-t[15],n},a.sub=a.subtract,a.multiplyScalar=function(n,e,t){return n[0]=e[0]*t,n[1]=e[1]*t,n[2]=e[2]*t,n[3]=e[3]*t,n[4]=e[4]*t,n[5]=e[5]*t,n[6]=e[6]*t,n[7]=e[7]*t,n[8]=e[8]*t,n[9]=e[9]*t,n[10]=e[10]*t,n[11]=e[11]*t,n[12]=e[12]*t,n[13]=e[13]*t,n[14]=e[14]*t,n[15]=e[15]*t,n},a.multiplyScalarAndAdd=function(n,e,t,o){return n[0]=e[0]+t[0]*o,n[1]=e[1]+t[1]*o,n[2]=e[2]+t[2]*o,n[3]=e[3]+t[3]*o,n[4]=e[4]+t[4]*o,n[5]=e[5]+t[5]*o,n[6]=e[6]+t[6]*o,n[7]=e[7]+t[7]*o,n[8]=e[8]+t[8]*o,n[9]=e[9]+t[9]*o,n[10]=e[10]+t[10]*o,n[11]=e[11]+t[11]*o,n[12]=e[12]+t[12]*o,n[13]=e[13]+t[13]*o,n[14]=e[14]+t[14]*o,n[15]=e[15]+t[15]*o,n},a.exactEquals=function(n,e){return n[0]===e[0]&&n[1]===e[1]&&n[2]===e[2]&&n[3]===e[3]&&n[4]===e[4]&&n[5]===e[5]&&n[6]===e[6]&&n[7]===e[7]&&n[8]===e[8]&&n[9]===e[9]&&n[10]===e[10]&&n[11]===e[11]&&n[12]===e[12]&&n[13]===e[13]&&n[14]===e[14]&&n[15]===e[15]},a.equals=function(n,e){var t=n[0],a=n[1],i=n[2],r=n[3],c=n[4],l=n[5],s=n[6],u=n[7],d=n[8],v=n[9],m=n[10],f=n[11],x=n[12],h=n[13],p=n[14],y=n[15],g=e[0],M=e[1],w=e[2],b=e[3],E=e[4],S=e[5],z=e[6],D=e[7],I=e[8],F=e[9],R=e[10],T=e[11],P=e[12],H=e[13],_=e[14],L=e[15];return Math.abs(t-g)<=o.EPSILON*Math.max(1,Math.abs(t),Math.abs(g))&&Math.abs(a-M)<=o.EPSILON*Math.max(1,Math.abs(a),Math.abs(M))&&Math.abs(i-w)<=o.EPSILON*Math.max(1,Math.abs(i),Math.abs(w))&&Math.abs(r-b)<=o.EPSILON*Math.max(1,Math.abs(r),Math.abs(b))&&Math.abs(c-E)<=o.EPSILON*Math.max(1,Math.abs(c),Math.abs(E))&&Math.abs(l-S)<=o.EPSILON*Math.max(1,Math.abs(l),Math.abs(S))&&Math.abs(s-z)<=o.EPSILON*Math.max(1,Math.abs(s),Math.abs(z))&&Math.abs(u-D)<=o.EPSILON*Math.max(1,Math.abs(u),Math.abs(D))&&Math.abs(d-I)<=o.EPSILON*Math.max(1,Math.abs(d),Math.abs(I))&&Math.abs(v-F)<=o.EPSILON*Math.max(1,Math.abs(v),Math.abs(F))&&Math.abs(m-R)<=o.EPSILON*Math.max(1,Math.abs(m),Math.abs(R))&&Math.abs(f-T)<=o.EPSILON*Math.max(1,Math.abs(f),Math.abs(T))&&Math.abs(x-P)<=o.EPSILON*Math.max(1,Math.abs(x),Math.abs(P))&&Math.abs(h-H)<=o.EPSILON*Math.max(1,Math.abs(h),Math.abs(H))&&Math.abs(p-_)<=o.EPSILON*Math.max(1,Math.abs(p),Math.abs(_))&&Math.abs(y-L)<=o.EPSILON*Math.max(1,Math.abs(y),Math.abs(L))},e.exports=a},{"./common.js":2}],7:[function(n,e,t){var o=n("./common.js"),a=n("./mat3.js"),i=n("./vec3.js"),r=n("./vec4.js"),c={};c.create=function(){var n=new o.ARRAY_TYPE(4);return n[0]=0,n[1]=0,n[2]=0,n[3]=1,n},c.rotationTo=function(){var n=i.create(),e=i.fromValues(1,0,0),t=i.fromValues(0,1,0);return function(o,a,r){var l=i.dot(a,r);return l<-.999999?(i.cross(n,e,a),i.length(n)<1e-6&&i.cross(n,t,a),i.normalize(n,n),c.setAxisAngle(o,n,Math.PI),o):l>.999999?(o[0]=0,o[1]=0,o[2]=0,o[3]=1,o):(i.cross(n,a,r),o[0]=n[0],o[1]=n[1],o[2]=n[2],o[3]=1+l,c.normalize(o,o))}}(),c.setAxes=function(){var n=a.create();return function(e,t,o,a){return n[0]=o[0],n[3]=o[1],n[6]=o[2],n[1]=a[0],n[4]=a[1],n[7]=a[2],n[2]=-t[0],n[5]=-t[1],n[8]=-t[2],c.normalize(e,c.fromMat3(e,n))}}(),c.clone=r.clone,c.fromValues=r.fromValues,c.copy=r.copy,c.set=r.set,c.identity=function(n){return n[0]=0,n[1]=0,n[2]=0,n[3]=1,n},c.setAxisAngle=function(n,e,t){t=.5*t;var o=Math.sin(t);return n[0]=o*e[0],n[1]=o*e[1],n[2]=o*e[2],n[3]=Math.cos(t),n},c.getAxisAngle=function(n,e){var t=2*Math.acos(e[3]),o=Math.sin(t/2);return 0!=o?(n[0]=e[0]/o,n[1]=e[1]/o,n[2]=e[2]/o):(n[0]=1,n[1]=0,n[2]=0),t},c.add=r.add,c.multiply=function(n,e,t){var o=e[0],a=e[1],i=e[2],r=e[3],c=t[0],l=t[1],s=t[2],u=t[3];return n[0]=o*u+r*c+a*s-i*l,n[1]=a*u+r*l+i*c-o*s,n[2]=i*u+r*s+o*l-a*c,n[3]=r*u-o*c-a*l-i*s,n},c.mul=c.multiply,c.scale=r.scale,c.rotateX=function(n,e,t){t*=.5;var o=e[0],a=e[1],i=e[2],r=e[3],c=Math.sin(t),l=Math.cos(t);return n[0]=o*l+r*c,n[1]=a*l+i*c,n[2]=i*l-a*c,n[3]=r*l-o*c,n},c.rotateY=function(n,e,t){t*=.5;var o=e[0],a=e[1],i=e[2],r=e[3],c=Math.sin(t),l=Math.cos(t);return n[0]=o*l-i*c,n[1]=a*l+r*c,n[2]=i*l+o*c,n[3]=r*l-a*c,n},c.rotateZ=function(n,e,t){t*=.5;var o=e[0],a=e[1],i=e[2],r=e[3],c=Math.sin(t),l=Math.cos(t);return n[0]=o*l+a*c,n[1]=a*l-o*c,n[2]=i*l+r*c,n[3]=r*l-i*c,n},c.calculateW=function(n,e){var t=e[0],o=e[1],a=e[2];return n[0]=t,n[1]=o,n[2]=a,n[3]=Math.sqrt(Math.abs(1-t*t-o*o-a*a)),n},c.dot=r.dot,c.lerp=r.lerp,c.slerp=function(n,e,t,o){var a,i,r,c,l,s=e[0],u=e[1],d=e[2],v=e[3],m=t[0],f=t[1],x=t[2],h=t[3];return i=s*m+u*f+d*x+v*h,i<0&&(i=-i,m=-m,f=-f,x=-x,h=-h),1-i>1e-6?(a=Math.acos(i),r=Math.sin(a),c=Math.sin((1-o)*a)/r,l=Math.sin(o*a)/r):(c=1-o,l=o),n[0]=c*s+l*m,n[1]=c*u+l*f,n[2]=c*d+l*x,n[3]=c*v+l*h,n},c.sqlerp=function(){var n=c.create(),e=c.create();return function(t,o,a,i,r,l){return c.slerp(n,o,r,l),c.slerp(e,a,i,l),c.slerp(t,n,e,2*l*(1-l)),t}}(),c.invert=function(n,e){var t=e[0],o=e[1],a=e[2],i=e[3],r=t*t+o*o+a*a+i*i,c=r?1/r:0;return n[0]=-t*c,n[1]=-o*c,n[2]=-a*c,n[3]=i*c,n},c.conjugate=function(n,e){return n[0]=-e[0],n[1]=-e[1],n[2]=-e[2],n[3]=e[3],n},c.length=r.length,c.len=c.length,c.squaredLength=r.squaredLength,c.sqrLen=c.squaredLength,c.normalize=r.normalize,c.fromMat3=function(n,e){var t,o=e[0]+e[4]+e[8];if(o>0)t=Math.sqrt(o+1),n[3]=.5*t,t=.5/t,n[0]=(e[5]-e[7])*t,n[1]=(e[6]-e[2])*t,n[2]=(e[1]-e[3])*t;else{var a=0;e[4]>e[0]&&(a=1),e[8]>e[3*a+a]&&(a=2);var i=(a+1)%3,r=(a+2)%3;t=Math.sqrt(e[3*a+a]-e[3*i+i]-e[3*r+r]+1),n[a]=.5*t,t=.5/t,n[3]=(e[3*i+r]-e[3*r+i])*t,n[i]=(e[3*i+a]+e[3*a+i])*t,n[r]=(e[3*r+a]+e[3*a+r])*t}return n},c.str=function(n){return"quat("+n[0]+", "+n[1]+", "+n[2]+", "+n[3]+")"},c.exactEquals=r.exactEquals,c.equals=r.equals,e.exports=c},{"./common.js":2,"./mat3.js":5,"./vec3.js":9,"./vec4.js":10}],8:[function(n,e,t){var o=n("./common.js"),a={};a.create=function(){var n=new o.ARRAY_TYPE(2);return n[0]=0,n[1]=0,n},a.clone=function(n){var e=new o.ARRAY_TYPE(2);return e[0]=n[0],e[1]=n[1],e},a.fromValues=function(n,e){var t=new o.ARRAY_TYPE(2);return t[0]=n,t[1]=e,t},a.copy=function(n,e){return n[0]=e[0],n[1]=e[1],n},a.set=function(n,e,t){return n[0]=e,n[1]=t,n},a.add=function(n,e,t){return n[0]=e[0]+t[0],n[1]=e[1]+t[1],n},a.subtract=function(n,e,t){return n[0]=e[0]-t[0],n[1]=e[1]-t[1],n},a.sub=a.subtract,a.multiply=function(n,e,t){return n[0]=e[0]*t[0],n[1]=e[1]*t[1],n},a.mul=a.multiply,a.divide=function(n,e,t){return n[0]=e[0]/t[0],n[1]=e[1]/t[1],n},a.div=a.divide,a.ceil=function(n,e){return n[0]=Math.ceil(e[0]),n[1]=Math.ceil(e[1]),n},a.floor=function(n,e){return n[0]=Math.floor(e[0]),n[1]=Math.floor(e[1]),n},a.min=function(n,e,t){return n[0]=Math.min(e[0],t[0]),n[1]=Math.min(e[1],t[1]),n},a.max=function(n,e,t){return n[0]=Math.max(e[0],t[0]),n[1]=Math.max(e[1],t[1]),n},a.round=function(n,e){return n[0]=Math.round(e[0]),n[1]=Math.round(e[1]),n},a.scale=function(n,e,t){return n[0]=e[0]*t,n[1]=e[1]*t,n},a.scaleAndAdd=function(n,e,t,o){return n[0]=e[0]+t[0]*o,n[1]=e[1]+t[1]*o,n},a.distance=function(n,e){var t=e[0]-n[0],o=e[1]-n[1];return Math.sqrt(t*t+o*o)},a.dist=a.distance,a.squaredDistance=function(n,e){var t=e[0]-n[0],o=e[1]-n[1];return t*t+o*o},a.sqrDist=a.squaredDistance,a.length=function(n){var e=n[0],t=n[1];return Math.sqrt(e*e+t*t)},a.len=a.length,a.squaredLength=function(n){var e=n[0],t=n[1];return e*e+t*t},a.sqrLen=a.squaredLength,a.negate=function(n,e){return n[0]=-e[0],n[1]=-e[1],n},a.inverse=function(n,e){return n[0]=1/e[0],n[1]=1/e[1],n},a.normalize=function(n,e){var t=e[0],o=e[1],a=t*t+o*o;return a>0&&(a=1/Math.sqrt(a),n[0]=e[0]*a,n[1]=e[1]*a),n},a.dot=function(n,e){return n[0]*e[0]+n[1]*e[1]},a.cross=function(n,e,t){var o=e[0]*t[1]-e[1]*t[0];return n[0]=n[1]=0,n[2]=o,n},a.lerp=function(n,e,t,o){var a=e[0],i=e[1];return n[0]=a+o*(t[0]-a),n[1]=i+o*(t[1]-i),n},a.random=function(n,e){e=e||1;var t=2*o.RANDOM()*Math.PI;return n[0]=Math.cos(t)*e,n[1]=Math.sin(t)*e,n},a.transformMat2=function(n,e,t){var o=e[0],a=e[1];return n[0]=t[0]*o+t[2]*a,n[1]=t[1]*o+t[3]*a,n},a.transformMat2d=function(n,e,t){var o=e[0],a=e[1];return n[0]=t[0]*o+t[2]*a+t[4],n[1]=t[1]*o+t[3]*a+t[5],n},a.transformMat3=function(n,e,t){var o=e[0],a=e[1];return n[0]=t[0]*o+t[3]*a+t[6],n[1]=t[1]*o+t[4]*a+t[7],n},a.transformMat4=function(n,e,t){var o=e[0],a=e[1];return n[0]=t[0]*o+t[4]*a+t[12],n[1]=t[1]*o+t[5]*a+t[13],n},a.forEach=function(){var n=a.create();return function(e,t,o,a,i,r){var c,l;for(t||(t=2),o||(o=0),l=a?Math.min(a*t+o,e.length):e.length,c=o;c<l;c+=t)n[0]=e[c],n[1]=e[c+1],i(n,n,r),e[c]=n[0],e[c+1]=n[1];return e}}(),a.str=function(n){return"vec2("+n[0]+", "+n[1]+")"},a.exactEquals=function(n,e){return n[0]===e[0]&&n[1]===e[1]},a.equals=function(n,e){var t=n[0],a=n[1],i=e[0],r=e[1];return Math.abs(t-i)<=o.EPSILON*Math.max(1,Math.abs(t),Math.abs(i))&&Math.abs(a-r)<=o.EPSILON*Math.max(1,Math.abs(a),Math.abs(r))},e.exports=a},{"./common.js":2}],9:[function(n,e,t){var o=n("./common.js"),a={};a.create=function(){var n=new o.ARRAY_TYPE(3);return n[0]=0,n[1]=0,n[2]=0,n},a.clone=function(n){var e=new o.ARRAY_TYPE(3);return e[0]=n[0],e[1]=n[1],e[2]=n[2],e},a.fromValues=function(n,e,t){var a=new o.ARRAY_TYPE(3);return a[0]=n,a[1]=e,a[2]=t,a},a.copy=function(n,e){return n[0]=e[0],n[1]=e[1],n[2]=e[2],n},a.set=function(n,e,t,o){return n[0]=e,n[1]=t,n[2]=o,n},a.add=function(n,e,t){return n[0]=e[0]+t[0],n[1]=e[1]+t[1],n[2]=e[2]+t[2],n},a.subtract=function(n,e,t){return n[0]=e[0]-t[0],n[1]=e[1]-t[1],n[2]=e[2]-t[2],n},a.sub=a.subtract,a.multiply=function(n,e,t){return n[0]=e[0]*t[0],n[1]=e[1]*t[1],n[2]=e[2]*t[2],n},a.mul=a.multiply,a.divide=function(n,e,t){return n[0]=e[0]/t[0],n[1]=e[1]/t[1],n[2]=e[2]/t[2],n},a.div=a.divide,a.ceil=function(n,e){return n[0]=Math.ceil(e[0]),n[1]=Math.ceil(e[1]),n[2]=Math.ceil(e[2]),n},a.floor=function(n,e){return n[0]=Math.floor(e[0]),n[1]=Math.floor(e[1]),n[2]=Math.floor(e[2]),n},a.min=function(n,e,t){return n[0]=Math.min(e[0],t[0]),n[1]=Math.min(e[1],t[1]),n[2]=Math.min(e[2],t[2]),n},a.max=function(n,e,t){return n[0]=Math.max(e[0],t[0]),n[1]=Math.max(e[1],t[1]),n[2]=Math.max(e[2],t[2]),n},a.round=function(n,e){return n[0]=Math.round(e[0]),n[1]=Math.round(e[1]),n[2]=Math.round(e[2]),n},a.scale=function(n,e,t){return n[0]=e[0]*t,n[1]=e[1]*t,n[2]=e[2]*t,n},a.scaleAndAdd=function(n,e,t,o){return n[0]=e[0]+t[0]*o,n[1]=e[1]+t[1]*o,n[2]=e[2]+t[2]*o,n},a.distance=function(n,e){var t=e[0]-n[0],o=e[1]-n[1],a=e[2]-n[2];return Math.sqrt(t*t+o*o+a*a)},a.dist=a.distance,a.squaredDistance=function(n,e){var t=e[0]-n[0],o=e[1]-n[1],a=e[2]-n[2];return t*t+o*o+a*a},a.sqrDist=a.squaredDistance,a.length=function(n){var e=n[0],t=n[1],o=n[2];return Math.sqrt(e*e+t*t+o*o)},a.len=a.length,a.squaredLength=function(n){var e=n[0],t=n[1],o=n[2];return e*e+t*t+o*o},a.sqrLen=a.squaredLength,a.negate=function(n,e){return n[0]=-e[0],n[1]=-e[1],n[2]=-e[2],n},a.inverse=function(n,e){return n[0]=1/e[0],n[1]=1/e[1],n[2]=1/e[2],n},a.normalize=function(n,e){var t=e[0],o=e[1],a=e[2],i=t*t+o*o+a*a;return i>0&&(i=1/Math.sqrt(i),n[0]=e[0]*i,n[1]=e[1]*i,n[2]=e[2]*i),n},a.dot=function(n,e){return n[0]*e[0]+n[1]*e[1]+n[2]*e[2]},a.cross=function(n,e,t){var o=e[0],a=e[1],i=e[2],r=t[0],c=t[1],l=t[2];return n[0]=a*l-i*c,n[1]=i*r-o*l,n[2]=o*c-a*r,n},a.lerp=function(n,e,t,o){var a=e[0],i=e[1],r=e[2];return n[0]=a+o*(t[0]-a),n[1]=i+o*(t[1]-i),n[2]=r+o*(t[2]-r),n},a.hermite=function(n,e,t,o,a,i){var r=i*i,c=r*(2*i-3)+1,l=r*(i-2)+i,s=r*(i-1),u=r*(3-2*i);return n[0]=e[0]*c+t[0]*l+o[0]*s+a[0]*u,n[1]=e[1]*c+t[1]*l+o[1]*s+a[1]*u,n[2]=e[2]*c+t[2]*l+o[2]*s+a[2]*u,n},a.bezier=function(n,e,t,o,a,i){var r=1-i,c=r*r,l=i*i,s=c*r,u=3*i*c,d=3*l*r,v=l*i;return n[0]=e[0]*s+t[0]*u+o[0]*d+a[0]*v,n[1]=e[1]*s+t[1]*u+o[1]*d+a[1]*v,n[2]=e[2]*s+t[2]*u+o[2]*d+a[2]*v,n},a.random=function(n,e){e=e||1;var t=2*o.RANDOM()*Math.PI,a=2*o.RANDOM()-1,i=Math.sqrt(1-a*a)*e;return n[0]=Math.cos(t)*i,n[1]=Math.sin(t)*i,n[2]=a*e,n},a.transformMat4=function(n,e,t){var o=e[0],a=e[1],i=e[2],r=t[3]*o+t[7]*a+t[11]*i+t[15];return r=r||1,n[0]=(t[0]*o+t[4]*a+t[8]*i+t[12])/r,n[1]=(t[1]*o+t[5]*a+t[9]*i+t[13])/r,n[2]=(t[2]*o+t[6]*a+t[10]*i+t[14])/r,n},a.transformMat3=function(n,e,t){var o=e[0],a=e[1],i=e[2];return n[0]=o*t[0]+a*t[3]+i*t[6],n[1]=o*t[1]+a*t[4]+i*t[7],n[2]=o*t[2]+a*t[5]+i*t[8],n},a.transformQuat=function(n,e,t){var o=e[0],a=e[1],i=e[2],r=t[0],c=t[1],l=t[2],s=t[3],u=s*o+c*i-l*a,d=s*a+l*o-r*i,v=s*i+r*a-c*o,m=-r*o-c*a-l*i;return n[0]=u*s+m*-r+d*-l-v*-c,n[1]=d*s+m*-c+v*-r-u*-l,n[2]=v*s+m*-l+u*-c-d*-r,n},a.rotateX=function(n,e,t,o){var a=[],i=[];return a[0]=e[0]-t[0],a[1]=e[1]-t[1],a[2]=e[2]-t[2],i[0]=a[0],i[1]=a[1]*Math.cos(o)-a[2]*Math.sin(o),i[2]=a[1]*Math.sin(o)+a[2]*Math.cos(o),n[0]=i[0]+t[0],n[1]=i[1]+t[1],n[2]=i[2]+t[2],n},a.rotateY=function(n,e,t,o){var a=[],i=[];return a[0]=e[0]-t[0],a[1]=e[1]-t[1],a[2]=e[2]-t[2],i[0]=a[2]*Math.sin(o)+a[0]*Math.cos(o),i[1]=a[1],i[2]=a[2]*Math.cos(o)-a[0]*Math.sin(o),n[0]=i[0]+t[0],n[1]=i[1]+t[1],n[2]=i[2]+t[2],n},a.rotateZ=function(n,e,t,o){var a=[],i=[];return a[0]=e[0]-t[0],a[1]=e[1]-t[1],a[2]=e[2]-t[2],i[0]=a[0]*Math.cos(o)-a[1]*Math.sin(o),i[1]=a[0]*Math.sin(o)+a[1]*Math.cos(o),i[2]=a[2],n[0]=i[0]+t[0],n[1]=i[1]+t[1],n[2]=i[2]+t[2],n},a.forEach=function(){var n=a.create();return function(e,t,o,a,i,r){var c,l;for(t||(t=3),o||(o=0),l=a?Math.min(a*t+o,e.length):e.length,c=o;c<l;c+=t)n[0]=e[c],n[1]=e[c+1],n[2]=e[c+2],i(n,n,r),e[c]=n[0],e[c+1]=n[1],e[c+2]=n[2];return e}}(),a.angle=function(n,e){var t=a.fromValues(n[0],n[1],n[2]),o=a.fromValues(e[0],e[1],e[2]);a.normalize(t,t),a.normalize(o,o);var i=a.dot(t,o);return i>1?0:Math.acos(i)},a.str=function(n){return"vec3("+n[0]+", "+n[1]+", "+n[2]+")"},a.exactEquals=function(n,e){return n[0]===e[0]&&n[1]===e[1]&&n[2]===e[2]},a.equals=function(n,e){var t=n[0],a=n[1],i=n[2],r=e[0],c=e[1],l=e[2];return Math.abs(t-r)<=o.EPSILON*Math.max(1,Math.abs(t),Math.abs(r))&&Math.abs(a-c)<=o.EPSILON*Math.max(1,Math.abs(a),Math.abs(c))&&Math.abs(i-l)<=o.EPSILON*Math.max(1,Math.abs(i),Math.abs(l))},e.exports=a},{"./common.js":2}],10:[function(n,e,t){var o=n("./common.js"),a={};a.create=function(){var n=new o.ARRAY_TYPE(4);return n[0]=0,n[1]=0,n[2]=0,n[3]=0,n},a.clone=function(n){var e=new o.ARRAY_TYPE(4);return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e},a.fromValues=function(n,e,t,a){var i=new o.ARRAY_TYPE(4);return i[0]=n,i[1]=e,i[2]=t,i[3]=a,i},a.copy=function(n,e){return n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=e[3],n},a.set=function(n,e,t,o,a){return n[0]=e,n[1]=t,n[2]=o,n[3]=a,n},a.add=function(n,e,t){return n[0]=e[0]+t[0],n[1]=e[1]+t[1],n[2]=e[2]+t[2],n[3]=e[3]+t[3],n},a.subtract=function(n,e,t){return n[0]=e[0]-t[0],n[1]=e[1]-t[1],n[2]=e[2]-t[2],n[3]=e[3]-t[3],n},a.sub=a.subtract,a.multiply=function(n,e,t){return n[0]=e[0]*t[0],n[1]=e[1]*t[1],n[2]=e[2]*t[2],n[3]=e[3]*t[3],n},a.mul=a.multiply,a.divide=function(n,e,t){return n[0]=e[0]/t[0],n[1]=e[1]/t[1],n[2]=e[2]/t[2],n[3]=e[3]/t[3],n},a.div=a.divide,a.ceil=function(n,e){return n[0]=Math.ceil(e[0]),n[1]=Math.ceil(e[1]),n[2]=Math.ceil(e[2]),n[3]=Math.ceil(e[3]),n},a.floor=function(n,e){return n[0]=Math.floor(e[0]),n[1]=Math.floor(e[1]),n[2]=Math.floor(e[2]),n[3]=Math.floor(e[3]),n},a.min=function(n,e,t){return n[0]=Math.min(e[0],t[0]),n[1]=Math.min(e[1],t[1]),n[2]=Math.min(e[2],t[2]),n[3]=Math.min(e[3],t[3]),n},a.max=function(n,e,t){return n[0]=Math.max(e[0],t[0]),n[1]=Math.max(e[1],t[1]),n[2]=Math.max(e[2],t[2]),n[3]=Math.max(e[3],t[3]),n},a.round=function(n,e){return n[0]=Math.round(e[0]),n[1]=Math.round(e[1]),n[2]=Math.round(e[2]),n[3]=Math.round(e[3]),n},a.scale=function(n,e,t){return n[0]=e[0]*t,n[1]=e[1]*t,n[2]=e[2]*t,n[3]=e[3]*t,n},a.scaleAndAdd=function(n,e,t,o){return n[0]=e[0]+t[0]*o,n[1]=e[1]+t[1]*o,n[2]=e[2]+t[2]*o,n[3]=e[3]+t[3]*o,n},a.distance=function(n,e){var t=e[0]-n[0],o=e[1]-n[1],a=e[2]-n[2],i=e[3]-n[3];return Math.sqrt(t*t+o*o+a*a+i*i)},a.dist=a.distance,a.squaredDistance=function(n,e){var t=e[0]-n[0],o=e[1]-n[1],a=e[2]-n[2],i=e[3]-n[3];return t*t+o*o+a*a+i*i},a.sqrDist=a.squaredDistance,a.length=function(n){var e=n[0],t=n[1],o=n[2],a=n[3];return Math.sqrt(e*e+t*t+o*o+a*a)},a.len=a.length,a.squaredLength=function(n){var e=n[0],t=n[1],o=n[2],a=n[3];return e*e+t*t+o*o+a*a},a.sqrLen=a.squaredLength,a.negate=function(n,e){return n[0]=-e[0],n[1]=-e[1],n[2]=-e[2],n[3]=-e[3],n},a.inverse=function(n,e){return n[0]=1/e[0],n[1]=1/e[1],n[2]=1/e[2],n[3]=1/e[3],n},a.normalize=function(n,e){var t=e[0],o=e[1],a=e[2],i=e[3],r=t*t+o*o+a*a+i*i;return r>0&&(r=1/Math.sqrt(r),n[0]=t*r,n[1]=o*r,n[2]=a*r,n[3]=i*r),n},a.dot=function(n,e){return n[0]*e[0]+n[1]*e[1]+n[2]*e[2]+n[3]*e[3]},a.lerp=function(n,e,t,o){var a=e[0],i=e[1],r=e[2],c=e[3];return n[0]=a+o*(t[0]-a),n[1]=i+o*(t[1]-i),n[2]=r+o*(t[2]-r),n[3]=c+o*(t[3]-c),n},a.random=function(n,e){return e=e||1,n[0]=o.RANDOM(),n[1]=o.RANDOM(),n[2]=o.RANDOM(),n[3]=o.RANDOM(),a.normalize(n,n),a.scale(n,n,e),n},a.transformMat4=function(n,e,t){var o=e[0],a=e[1],i=e[2],r=e[3];return n[0]=t[0]*o+t[4]*a+t[8]*i+t[12]*r,n[1]=t[1]*o+t[5]*a+t[9]*i+t[13]*r,n[2]=t[2]*o+t[6]*a+t[10]*i+t[14]*r,n[3]=t[3]*o+t[7]*a+t[11]*i+t[15]*r,n},a.transformQuat=function(n,e,t){var o=e[0],a=e[1],i=e[2],r=t[0],c=t[1],l=t[2],s=t[3],u=s*o+c*i-l*a,d=s*a+l*o-r*i,v=s*i+r*a-c*o,m=-r*o-c*a-l*i;return n[0]=u*s+m*-r+d*-l-v*-c,n[1]=d*s+m*-c+v*-r-u*-l,n[2]=v*s+m*-l+u*-c-d*-r,n[3]=e[3],n},a.forEach=function(){var n=a.create();return function(e,t,o,a,i,r){var c,l;for(t||(t=4),o||(o=0),l=a?Math.min(a*t+o,e.length):e.length,c=o;c<l;c+=t)n[0]=e[c],n[1]=e[c+1],n[2]=e[c+2],n[3]=e[c+3],i(n,n,r),e[c]=n[0],e[c+1]=n[1],e[c+2]=n[2],e[c+3]=n[3];return e}}(),a.str=function(n){return"vec4("+n[0]+", "+n[1]+", "+n[2]+", "+n[3]+")"},a.exactEquals=function(n,e){return n[0]===e[0]&&n[1]===e[1]&&n[2]===e[2]&&n[3]===e[3]},a.equals=function(n,e){var t=n[0],a=n[1],i=n[2],r=n[3],c=e[0],l=e[1],s=e[2],u=e[3];return Math.abs(t-c)<=o.EPSILON*Math.max(1,Math.abs(t),Math.abs(c))&&Math.abs(a-l)<=o.EPSILON*Math.max(1,Math.abs(a),Math.abs(l))&&Math.abs(i-s)<=o.EPSILON*Math.max(1,Math.abs(i),Math.abs(s))&&Math.abs(r-u)<=o.EPSILON*Math.max(1,Math.abs(r),Math.abs(u))},e.exports=a},{"./common.js":2}],11:[function(n,e,t){e.exports={degrees:function(n){return n/Math.PI*180},radians:function(n){return n*Math.PI/180},clamp:function(n,e,t){return Math.min(Math.max(n,e),t)},mix:function(n,e,t){return n*(1-t)+e*t},polar:function(n,e,t){return[Math.cos(n)*Math.cos(e)*t,Math.sin(n)*t,Math.cos(n)*Math.sin(e)*t]}}},{}],12:[function(n,e,t){e.exports=function(n,e){var t;return function(o){clearTimeout(t),t=setTimeout(function(){n(o)},e)}}},{}],13:[function(n,e,t){e.exports=function(){const n=navigator.userAgent;return n.indexOf("iPhone")>=0||n.indexOf("iPad")>=0||n.indexOf("Android")>=0}},{}],14:[function(n,e,t){"use strict";function o(n){return n&&n.__esModule?n:{"default":n}}Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=function(){var e=n("../modules/old/util"),t=n("../modules/old/ForceCamera"),o=document.getElementById("canvas-webgl"),a=new THREE.WebGLRenderer({antialias:!0,canvas:o}),r=new THREE.Scene,s=new t(35,window.innerWidth/window.innerHeight,1,1e4),u=(new THREE.Clock,1e3),d=null,v=function(){for(var n=new THREE.BufferGeometry,t=[],o=[],a=[],i=[],r=0;r<Math.pow(u,2);r++)t.push(0,0,0),o.push(r%u*(1/(u-1)),Math.floor(r/u)*(1/(u-1))),a.push(e.getRandomInt(0,120)/360,.8,1),i.push(e.getRandomInt(1,100));var c=new Float32Array(t);n.addAttribute("position",new THREE.BufferAttribute(c,3));var l=new Float32Array(o);n.addAttribute("uv2",new THREE.BufferAttribute(l,2));var s=new Float32Array(a);n.addAttribute("color",new THREE.BufferAttribute(s,3));var d=new Float32Array(i);n.addAttribute("mass",new THREE.BufferAttribute(d,1));var v=new THREE.ShaderMaterial({uniforms:{time:{type:"f",value:0},velocity:{type:"t",value:new THREE.Texture},acceleration:{type:"t",value:new THREE.Texture}},vertexShader:"#define GLSLIFY 1\nattribute vec2 uv2;\nattribute vec3 color;\nattribute float mass;\n\nuniform sampler2D velocity;\nuniform sampler2D acceleration;\n\nvarying float vAcceleration;\nvarying vec3 vColor;\nvarying float vOpacity;\n\nvoid main(void) {\n  vec4 update_position = modelViewMatrix * texture2D(velocity, uv2);\n  vAcceleration = length(texture2D(acceleration, uv2).xyz) * mass;\n  vColor = color;\n  vOpacity = 0.6 * (300.0 / length(update_position.xyz));\n  gl_PointSize = 2.0 * (300.0 / length(update_position.xyz));\n  gl_Position = projectionMatrix * update_position;\n}\n",fragmentShader:"#define GLSLIFY 1\nvarying float vAcceleration;\nvarying vec3 vColor;\nvarying float vOpacity;\n\nuniform float time;\n\nvec3 hsv2rgb(vec3 c){\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid main(void) {\n  vec3 n;\n  n.xy = gl_PointCoord * 2.0 - 1.0;\n  n.z = 1.0 - dot(n.xy, n.xy);\n  if (n.z < 0.0) discard;\n  gl_FragColor = vec4(hsv2rgb(vec3(vColor.x + time / 3600.0, vColor.y, vColor.z)), vOpacity);\n}\n",transparent:!0,depthWrite:!1,blending:THREE.AdditiveBlending});return new THREE.Points(n,v)},m=v(),f=function(){for(var n=[],t=0;t<Math.pow(u,2);t++){var o=e.getPolarCoord(e.getRadian(e.getRandomInt(0,360)),e.getRadian(e.getRandomInt(0,360)),e.getRandomInt(10,1e3));n.push(o.x,o.y/10,o.z)}return new Float32Array(n)},x=function(){d=new c["default"](u),d.init(a,f()),d.accelerationMesh.material.uniforms.anchor={type:"v2",value:new THREE.Vector2},r.add(m),s.force.position.anchor.set(0,15,600),s.force.look.anchor.set(0,0,0)},h=function(){o.width=window.innerWidth,o.height=window.innerHeight,s.aspect=window.innerWidth/window.innerHeight,s.updateProjectionMatrix(),a.setSize(window.innerWidth,window.innerHeight)},p=function(){d.render(a),m.material.uniforms.time.value++,m.material.uniforms.velocity.value=d.getCurrentVelocity(),m.material.uniforms.acceleration.value=d.getCurrentAcceleration(),s.force.position.applyHook(0,.025),s.force.position.applyDrag(.2),s.force.position.updateVelocity(),s.updatePosition(),s.force.look.applyHook(0,.2),s.force.look.applyDrag(.4),s.force.look.updateVelocity(),s.updateLook(),a.render(r,s)},y=function w(){p(),requestAnimationFrame(w)},g=function(){var n=new THREE.Vector2,e=new THREE.Vector2,t=new THREE.Vector2,a=function(e,t,o){n.set(e,t),(0,i["default"])(n)},r=function(n,t,o){e.set(n,t),(0,i["default"])(e),d.accelerationMesh.material.uniforms.anchor.value.copy(e)},c=function(n,e,o){t.set(n,e)},s=function(){t.set(0,0),d.accelerationMesh.material.uniforms.anchor.value.set(0,0,0)};window.addEventListener("resize",l(function(){h()}),1e3),o.addEventListener("mousedown",function(n){n.preventDefault(),a(n.clientX,n.clientY,!1)}),o.addEventListener("mousemove",function(n){n.preventDefault(),r(n.clientX,n.clientY,!1)}),o.addEventListener("mouseup",function(n){n.preventDefault(),c(n.clientX,n.clientY,!1)}),o.addEventListener("touchstart",function(n){n.preventDefault(),a(n.touches[0].clientX,n.touches[0].clientY,!0)}),o.addEventListener("touchmove",function(n){n.preventDefault(),r(n.touches[0].clientX,n.touches[0].clientY,!0)}),o.addEventListener("touchend",function(n){n.preventDefault(),c(n.changedTouches[0].clientX,n.changedTouches[0].clientY,!0)}),window.addEventListener("mouseout",function(){event.preventDefault(),s()})},M=function(){a.setSize(window.innerWidth,window.innerHeight),a.setClearColor(1118481,1),s.position.set(1e3,1e3,1e3),s.lookAt(new THREE.Vector3),g(),x(),h(),y()};M()};var a=n("../modules/common/normalizeVector2"),i=o(a),r=n("../modules/common/PhysicsRenderer"),c=o(r),l=n("js-util/debounce")},{"../modules/common/PhysicsRenderer":29,"../modules/common/normalizeVector2":32,"../modules/old/ForceCamera":41,"../modules/old/util":46,"js-util/debounce":12}],15:[function(n,e,t){"use strict";function o(n){return n&&n.__esModule?n:{"default":n}}Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=function(){var e=n("../modules/old/util"),t=n("../modules/old/Force2"),o=n("../modules/old/Mover"),a=n("../modules/old/Points.js"),c=n("../modules/old/ForceHemisphereLight"),l=n("../modules/old/ForcePointLight"),s=n("../modules/old/ForceCamera"),u=document.getElementById("canvas-webgl"),d=new THREE.WebGLRenderer({antialias:!0,canvas:u}),v=new THREE.Scene,m=new s(35,window.innerWidth/window.innerHeight,1,1e4),f=(new THREE.Clock,1e4),x=[],h=2,p=new a,y=null,g=null,M=null,w=new Float32Array(3*f),b=new Float32Array(3*f),E=new Float32Array(f),S=new Float32Array(f),z=null,D=30,I=new t,F=140,R=45,T=null,P=Date.now(),H=Date.now(),_=Date.now(),L=Date.now(),C=0,A=!1,j=!1,k=!0,O=function(){for(var n=0;n<x.length;n++){var e=x[n];new THREE.Vector3;e.is_active&&(e.time++,e.applyDrag(.1),e.updateVelocity(),e.time>10&&(e.size-=2),e.size<=0&&(e.init(new THREE.Vector3(0,0,0)),e.time=0,e.a=0,e.inactivate())),w[3*n+0]=e.velocity.x-p.velocity.x,w[3*n+1]=e.velocity.y-p.velocity.y,w[3*n+2]=e.velocity.z-p.velocity.z,b[3*n+0]=e.color.r,b[3*n+1]=e.color.g,b[3*n+2]=e.color.b,E[n]=e.a,S[n]=e.size}p.updatePoints()},Y=function(){var n=0,t=Date.now();if(t-P>10){for(var o=0;o<x.length;o++){var a=x[o];if(!a.is_active){var i=e.getRadian(e.getRandomInt(0,360)),r=e.getRadian(e.getRandomInt(0,360)),c=e.getRandomInt(1,30),l=e.getPolarCoord(i,r,c),s=e.getPolarCoord(i,r,c/20),u=e.getRandomInt(F-R,F+R)-C/1.5,d=e.getRandomInt(60,80);if(l.add(p.velocity),a.activate(),a.init(l),a.color.setHSL(u/360,d/100,.7),a.applyForce(s),a.a=1,a.size=25,n++,n>=h)break}}P=Date.now()}},V=function(){return z.rotation.x+=.03+C/1e3,z.rotation.y+=.01+C/1e3,z.rotation.z+=.01+C/1e3,p.rad1_base+=e.getRadian(.6),p.rad1=e.getRadian(45*Math.sin(p.rad1_base)+C/100),p.rad2+=e.getRadian(.8+C/100),p.rad3+=.01,e.getPolarCoord(p.rad1,p.rad2,350)},N=function(){var n=.8*D;g.position.copy(e.getPolarCoord(e.getRadian(0),e.getRadian(0),n).add(p.velocity)),M.position.copy(e.getPolarCoord(e.getRadian(180),e.getRadian(0),n).add(p.velocity))},G=function(){Date.now()-_>1e3-3*C&&(I.applyForce(new THREE.Vector2(.08+C/5e3,0)),_=Date.now(),j=!0,H=Date.now()),h=j&&Date.now()-H<500?6+Math.floor(C/40):1+Math.floor(C/40),I.applyHook(0,.1),I.applyDrag(.12),I.updateVelocity(),z.scale.set(1+I.velocity.x,1+I.velocity.x,1+I.velocity.x)},q=function(){var n=document.createElement("canvas"),e=n.getContext("2d"),t=null,o=null;return n.width=200,n.height=200,t=e.createRadialGradient(100,100,20,100,100,100),t.addColorStop(.9,"rgba(255, 255, 255, 1)"),t.addColorStop(1,"rgba(255, 255, 255, 0)"),e.fillStyle=t,e.arc(100,100,100,0,Math.PI/180,!0),e.fill(),o=new THREE.Texture(n),o.minFilter=THREE.NearestFilter,o.needsUpdate=!0,o},W=function(){for(var n=new THREE.OctahedronGeometry(D,2),e=new THREE.BufferGeometry,t=new THREE.MeshPhongMaterial({color:new THREE.Color("hsl("+F+", 100%, 100%)"),shading:THREE.FlatShading}),o=new Float32Array(3*n.vertices.length),a=0;a<n.vertices.length;a++)o[3*a]=n.vertices[a].x,o[3*a+1]=n.vertices[a].y,o[3*a+2]=n.vertices[a].z;for(var i=new Uint32Array(3*n.faces.length),r=0;r<n.faces.length;r++)i[3*r]=n.faces[r].a,i[3*r+1]=n.faces[r].b,i[3*r+2]=n.faces[r].c;return e.addAttribute("position",new THREE.BufferAttribute(o,3)),e.attributes.position.dynamic=!0,e.setIndex(new THREE.BufferAttribute(i,1)),e.index.dynamic=!0,new THREE.Mesh(e,t)},B=function(){var n=new THREE.OctahedronGeometry(250,4),e=new THREE.MeshPhongMaterial({color:2236962,shading:THREE.FlatShading});return new THREE.Mesh(n,e)},U=function(){A&&C<200?C+=1:C>0&&(C-=1)},X=function(){z=W(),v.add(z),T=B(),v.add(T);for(var n=0;n<f;n++){var t=new o,a=e.getRandomInt(F-R,F+R),i=e.getRandomInt(60,80);t.init(new THREE.Vector3(e.getRandomInt(-100,100),0,0)),t.color=new THREE.Color("hsl("+a+", "+i+"%, 70%)"),x.push(t),w[3*n+0]=t.velocity.x,w[3*n+1]=t.velocity.y,w[3*n+2]=t.velocity.z,b[3*n+0]=t.color.r,b[3*n+1]=t.color.g,b[3*n+2]=t.color.b,E[n]=t.a,S[n]=t.size}p.init({scene:v,vs:"#define GLSLIFY 1\nattribute vec3 customColor;\nattribute float vertexOpacity;\nattribute float size;\n\nvarying vec3 vColor;\nvarying float fOpacity;\n\nvoid main() {\n  vColor = customColor;\n  fOpacity = vertexOpacity;\n  vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n  gl_PointSize = size * (300.0 / length(mvPosition.xyz));\n  gl_Position = projectionMatrix * mvPosition;\n}\n",fs:"#define GLSLIFY 1\nuniform vec3 color;\nuniform sampler2D texture;\n\nvarying vec3 vColor;\nvarying float fOpacity;\n\nvoid main() {\n  gl_FragColor = vec4(color * vColor, fOpacity);\n  gl_FragColor = gl_FragColor * texture2D(texture, gl_PointCoord);\n}\n",positions:w,
colors:b,opacities:E,sizes:S,texture:q(),blending:THREE.NormalBlending}),p.rad1=0,p.rad1_base=0,p.rad2=0,p.rad3=0,y=new c(new THREE.Color("hsl("+(F-R)+", 50%, 60%)").getHex(),new THREE.Color("hsl("+(F+R)+", 50%, 60%)").getHex(),1),v.add(y),g=new l("hsl("+(F-R)+", 60%, 50%)",1,500,1),v.add(g),M=new l("hsl("+(F-R)+", 60%, 50%)",1,500,1),v.add(M),m.anchor=new THREE.Vector3(1500,0,0)},K=function(){u.width=window.innerWidth,u.height=window.innerHeight,m.aspect=window.innerWidth/window.innerHeight,m.updateProjectionMatrix(),d.setSize(window.innerWidth,window.innerHeight)},Z=function(){U(),p.velocity=V(),k===!0&&(m.force.position.anchor.copy(p.velocity.clone().add(p.velocity.clone().sub(p.obj.position).normalize().multiplyScalar(-400))),m.force.position.anchor.y+=2*p.velocity.y,m.force.look.anchor.copy(p.velocity)),p.updatePoints(),z.position.copy(p.velocity),y.color.setHSL((F-R-C/1.5)/360,.5,.6),y.groundColor.setHSL((F+R-C/1.5)/360,.5,.6),g.position.copy(p.velocity),g.color.setHSL((F-R-C/1.5)/360,.5,.6),M.position.copy(p.velocity),M.color.setHSL((F+R-C/1.5)/360,.5,.6),Y(),O(),m.force.position.applyHook(0,.025),m.force.position.applyDrag(.2),m.force.position.updateVelocity(),m.updatePosition(),m.force.look.applyHook(0,.2),m.force.look.applyDrag(.4),m.force.look.updateVelocity(),m.updateLook(),N(),G(),d.render(v,m)},Q=function nn(){Z(),requestAnimationFrame(nn)},J=function(){var n=new THREE.Vector2,e=new THREE.Vector2,t=new THREE.Vector2,o=function(e,t,o){n.set(e,t),(0,i["default"])(n),A=!0,L=Date.now()},a=function(n,t,o){e.set(n,t),(0,i["default"])(e)},c=function(n,e,o){t.set(n,e),A=!1,Date.now()-L<100&&(k===!0?(m.force.position.anchor.set(1200,1200,0),m.force.look.anchor.set(0,0,0),k=!1):k=!0)},l=function(){t.set(0,0),A=!1,Date.now()-L<100&&(k===!0?(m.force.position.anchor.set(1200,1200,0),m.force.look.anchor.set(0,0,0),k=!1):k=!0)};window.addEventListener("resize",r(function(){K()}),1e3),u.addEventListener("mousedown",function(n){n.preventDefault(),o(n.clientX,n.clientY,!1)}),u.addEventListener("mousemove",function(n){n.preventDefault(),a(n.clientX,n.clientY,!1)}),u.addEventListener("mouseup",function(n){n.preventDefault(),c(n.clientX,n.clientY,!1)}),u.addEventListener("touchstart",function(n){n.preventDefault(),o(n.touches[0].clientX,n.touches[0].clientY,!0)}),u.addEventListener("touchmove",function(n){n.preventDefault(),a(n.touches[0].clientX,n.touches[0].clientY,!0)}),u.addEventListener("touchend",function(n){n.preventDefault(),c(n.changedTouches[0].clientX,n.changedTouches[0].clientY,!0)}),window.addEventListener("mouseout",function(){event.preventDefault(),l()})},$=function(){d.setSize(window.innerWidth,window.innerHeight),d.setClearColor(0,1),m.position.set(1e3,1e3,1e3),m.lookAt(new THREE.Vector3),J(),X(),K(),Q()};$()};var a=n("../modules/common/normalizeVector2"),i=o(a),r=n("js-util/debounce")},{"../modules/common/normalizeVector2":32,"../modules/old/Force2":39,"../modules/old/ForceCamera":41,"../modules/old/ForceHemisphereLight":42,"../modules/old/ForcePointLight":43,"../modules/old/Mover":44,"../modules/old/Points.js":45,"../modules/old/util":46,"js-util/debounce":12}],16:[function(n,e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=function(){}},{}],17:[function(n,e,t){"use strict";function o(n){return n&&n.__esModule?n:{"default":n}}Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=function(){var n=(new i["default"],document.getElementById("canvas-webgl")),e=function(){n.addEventListener("contextmenu",function(n){n.preventDefault()}),n.addEventListener("selectstart",function(n){n.preventDefault()})};e()};var a=n("../modules/common/IndexScroller"),i=o(a)},{"../modules/common/IndexScroller":28}],18:[function(n,e,t){"use strict";function o(n){return n&&n.__esModule?n:{"default":n}}Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=function(){var e=(n("../modules/old/util"),n("../modules/old/Force2")),t=n("../modules/old/ForceCamera"),o=document.getElementById("canvas-webgl"),a=new THREE.WebGLRenderer({antialias:!0,canvas:o}),c=new THREE.Scene,l=new t(35,window.innerWidth/window.innerHeight,1,1e4),s=(new THREE.Clock,null),u=null,d=new THREE.HemisphereLight(16777215,6710886,1),v=new THREE.Scene,m=new t(45,window.innerWidth/window.innerHeight,1,1e4),f=new THREE.HemisphereLight(16777215,6710886,1),x=new e,h=1,p=new THREE.WebGLRenderTarget(window.innerWidth,window.innerHeight,{magFilter:THREE.NearestFilter,minFilter:THREE.NearestFilter,wrapS:THREE.ClampToEdgeWrapping,wrapT:THREE.ClampToEdgeWrapping}),y=null,g=function(){var n=new THREE.BufferGeometry;n.fromGeometry(new THREE.OctahedronGeometry(200,5));var e=new THREE.ShaderMaterial({uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.lights,{time:{type:"f",value:0},radius:{type:"f",value:1},distort:{type:"f",value:.4}}]),vertexShader:"#define GLSLIFY 1\nuniform float time;\nuniform float radius;\nuniform float distort;\n\nvarying vec3 vColor;\nvarying vec3 vNormal;\n\n//\n// Description : Array and textureless GLSL 2D/3D/4D simplex\n//               noise functions.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x) {\n     return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nfloat snoise(vec3 v)\n  {\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n// First corner\n  vec3 i  = floor(v + dot(v, C.yyy) );\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n// Other corners\n  vec3 g = step(x0.yzx, x0.xyz);\n  vec3 l = 1.0 - g;\n  vec3 i1 = min( g.xyz, l.zxy );\n  vec3 i2 = max( g.xyz, l.zxy );\n\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\n  vec3 x1 = x0 - i1 + C.xxx;\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\n\n// Permutations\n  i = mod289(i);\n  vec4 p = permute( permute( permute(\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n  float n_ = 0.142857142857; // 1.0/7.0\n  vec3  ns = n_ * D.wyz - D.xzx;\n\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\n\n  vec4 x_ = floor(j * ns.z);\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n  vec4 x = x_ *ns.x + ns.yyyy;\n  vec4 y = y_ *ns.x + ns.yyyy;\n  vec4 h = 1.0 - abs(x) - abs(y);\n\n  vec4 b0 = vec4( x.xy, y.xy );\n  vec4 b1 = vec4( x.zw, y.zw );\n\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n  vec4 s0 = floor(b0)*2.0 + 1.0;\n  vec4 s1 = floor(b1)*2.0 + 1.0;\n  vec4 sh = -step(h, vec4(0.0));\n\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n  vec3 p0 = vec3(a0.xy,h.x);\n  vec3 p1 = vec3(a0.zw,h.y);\n  vec3 p2 = vec3(a1.xy,h.z);\n  vec3 p3 = vec3(a1.zw,h.w);\n\n//Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n\n// Mix final noise value\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n  m = m * m;\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\n                                dot(p2,x2), dot(p3,x3) ) );\n  }\n\nvec3 hsv2rgb(vec3 c){\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid main() {\n  float updateTime = time / 1000.0;\n  float noise = snoise(vec3(position / 400.1 + updateTime * 5.0));\n  vec4 mvPosition = modelViewMatrix * vec4(position * (noise * pow(distort, 2.0) + radius), 1.0);\n\n  vColor = hsv2rgb(vec3(noise * distort * 0.3 + updateTime, 0.2, 1.0));\n  vNormal = normal;\n\n  gl_Position = projectionMatrix * mvPosition;\n}\n",fragmentShader:"#define GLSLIFY 1\nvarying vec3 vColor;\nvarying vec3 vNormal;\n\n//\n// Description : Array and textureless GLSL 2D/3D/4D simplex\n//               noise functions.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x) {\n     return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nfloat snoise(vec3 v)\n  {\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n// First corner\n  vec3 i  = floor(v + dot(v, C.yyy) );\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n// Other corners\n  vec3 g = step(x0.yzx, x0.xyz);\n  vec3 l = 1.0 - g;\n  vec3 i1 = min( g.xyz, l.zxy );\n  vec3 i2 = max( g.xyz, l.zxy );\n\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\n  vec3 x1 = x0 - i1 + C.xxx;\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\n\n// Permutations\n  i = mod289(i);\n  vec4 p = permute( permute( permute(\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n  float n_ = 0.142857142857; // 1.0/7.0\n  vec3  ns = n_ * D.wyz - D.xzx;\n\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\n\n  vec4 x_ = floor(j * ns.z);\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n  vec4 x = x_ *ns.x + ns.yyyy;\n  vec4 y = y_ *ns.x + ns.yyyy;\n  vec4 h = 1.0 - abs(x) - abs(y);\n\n  vec4 b0 = vec4( x.xy, y.xy );\n  vec4 b1 = vec4( x.zw, y.zw );\n\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n  vec4 s0 = floor(b0)*2.0 + 1.0;\n  vec4 s1 = floor(b1)*2.0 + 1.0;\n  vec4 sh = -step(h, vec4(0.0));\n\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n  vec3 p0 = vec3(a0.xy,h.x);\n  vec3 p1 = vec3(a0.zw,h.y);\n  vec3 p2 = vec3(a1.xy,h.z);\n  vec3 p3 = vec3(a1.zw,h.w);\n\n//Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n\n// Mix final noise value\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n  m = m * m;\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\n                                dot(p2,x2), dot(p3,x3) ) );\n  }\n\nvec3 hsv2rgb(vec3 c){\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nstruct HemisphereLight {\n  vec3 direction;\n  vec3 groundColor;\n  vec3 skyColor;\n};\nuniform HemisphereLight hemisphereLights[NUM_HEMI_LIGHTS];\n\nvoid main() {\n  vec3 light = vec3(0.0);\n  light += (dot(hemisphereLights[0].direction, vNormal) + 1.0) * hemisphereLights[0].skyColor * 0.5;\n  light += (-dot(hemisphereLights[0].direction, vNormal) + 1.0) * hemisphereLights[0].groundColor * 0.5;\n  gl_FragColor = vec4(vColor * light, 1.0);\n}\n",lights:!0});return new THREE.Mesh(n,e)},M=function(){var n=new THREE.SphereGeometry(1800),e=new THREE.MeshPhongMaterial({side:THREE.BackSide});return new THREE.Mesh(n,e)},w=function(){var n=new THREE.PlaneGeometry(2,2),e=new THREE.BufferGeometry;e.fromGeometry(n);var t=new THREE.ShaderMaterial({uniforms:{time:{type:"f",value:0},resolution:{type:"v2",value:new THREE.Vector2(window.innerWidth,window.innerHeight)},acceleration:{type:"f",value:0},texture:{type:"t",value:p}},vertexShader:"#define GLSLIFY 1\nvarying vec2 vUv;\n\nvoid main(void) {\n  vUv = uv;\n  gl_Position = vec4(position, 1.0);\n}\n",fragmentShader:"#define GLSLIFY 1\nuniform float time;\nuniform vec2 resolution;\nuniform float acceleration;\nuniform sampler2D texture;\n\nconst float blur = 16.0;\n\nvarying vec2 vUv;\n\nfloat random2(vec2 c){\n    return fract(sin(dot(c.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\n//\n// Description : Array and textureless GLSL 2D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec2 mod289(vec2 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec3 permute(vec3 x) {\n  return mod289(((x*34.0)+1.0)*x);\n}\n\nfloat snoise(vec2 v)\n  {\n  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                     -0.577350269189626,  // -1.0 + 2.0 * C.x\n                      0.024390243902439); // 1.0 / 41.0\n// First corner\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n\n// Other corners\n  vec2 i1;\n  //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\n  //i1.y = 1.0 - i1.x;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  // x0 = x0 - 0.0 + 0.0 * C.xx ;\n  // x1 = x0 - i1 + 1.0 * C.xx ;\n  // x2 = x0 - 1.0 + 2.0 * C.xx ;\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n\n// Permutations\n  i = mod289(i); // Avoid truncation effects in permutation\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n    + i.x + vec3(0.0, i1.x, 1.0 ));\n\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n\n// Gradients: 41 points uniformly over a line, mapped onto a diamond.\n// The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)\n\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n\n// Normalise gradients implicitly by scaling m\n// Approximation of: m *= inversesqrt( a0*a0 + h*h );\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n\n// Compute final noise value at P\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\n\nvec2 diffUv(float v, float diff) {\n  return vUv + (vec2(v + snoise(vec2(gl_FragCoord.y + time) / 100.0), 0.0) * diff + vec2(v * 3.0, 0.0)) / resolution;\n}\n\nfloat randomNoise(vec2 p) {\n  return (random2(p - vec2(sin(time))) * 2.0 - 1.0) * max(length(acceleration), 0.08);\n}\n\nvoid main() {\n  float diff = 300.0 * length(acceleration);\n  vec2 uv_r = diffUv(0.0, diff);\n  vec2 uv_g = diffUv(1.0, diff);\n  vec2 uv_b = diffUv(-1.0, diff);\n  float r = texture2D(texture, uv_r).r + randomNoise(uv_r);\n  float g = texture2D(texture, uv_g).g + randomNoise(uv_g);\n  float b = texture2D(texture, uv_b).b + randomNoise(uv_b);\n  gl_FragColor = vec4(r, g, b, 1.0);\n}\n"});return new THREE.Mesh(e,t)},b=function(){document.body.className="bg-white",s=g(),v.add(s),u=M(),v.add(u),v.add(f),m.force.position.anchor.set(1800,1800,0),m.force.look.anchor.set(0,0,0),y=w(),c.add(y),c.add(d),l.force.position.anchor.set(1800,1800,0),l.force.look.anchor.set(0,0,0),x.anchor.set(1,0),x.anchor.set(1,0),x.velocity.set(1,0),x.k=.045,x.d=.16},E=function(){o.width=window.innerWidth,o.height=window.innerHeight,l.aspect=window.innerWidth/window.innerHeight,l.updateProjectionMatrix(),a.setSize(window.innerWidth,window.innerHeight),p.setSize(window.innerWidth,window.innerHeight),m.resize(window.innerWidth,window.innerHeight),y.material.uniforms.resolution.value.set(window.innerWidth,window.innerHeight)},S=function(){x.applyHook(0,x.k),x.applyDrag(x.d),x.updateVelocity(),s.material.uniforms.time.value+=h,s.material.uniforms.radius.value=x.velocity.x,s.material.uniforms.distort.value=x.velocity.x/2-.1,m.force.position.applyHook(0,.025),m.force.position.applyDrag(.2),m.force.position.updateVelocity(),m.updatePosition(),m.force.look.applyHook(0,.2),m.force.look.applyDrag(.4),m.force.look.updateVelocity(),m.updateLook(),y.material.uniforms.time.value+=h,y.material.uniforms.acceleration.value=x.acceleration.length(),l.force.position.applyHook(0,.025),l.force.position.applyDrag(.2),l.force.position.updateVelocity(),l.updatePosition(),l.force.look.applyHook(0,.2),l.force.look.applyDrag(.4),l.force.look.updateVelocity(),l.lookAt(l.force.look.velocity),a.render(v,m,p),a.render(c,l)},z=function F(){S(),requestAnimationFrame(F)},D=function(){var n=new THREE.Vector2,e=new THREE.Vector2,t=new THREE.Vector2,a=function(e,t,o){n.set(e,t),(0,i["default"])(n),x.anchor.x<3?(x.k+=.005,x.d-=.02,x.anchor.x+=.8,h+=.4):(x.k=.05,x.d=.16,x.anchor.x=1,h=1)},c=function(n,t,o){e.set(n,t),(0,i["default"])(e)},l=function(n,e,o){t.set(n,e)},s=function(){t.set(0,0)};window.addEventListener("resize",r(function(){E()}),1e3),o.addEventListener("mousedown",function(n){n.preventDefault(),a(n.clientX,n.clientY,!1)}),o.addEventListener("mousemove",function(n){n.preventDefault(),c(n.clientX,n.clientY,!1)}),o.addEventListener("mouseup",function(n){n.preventDefault(),l(n.clientX,n.clientY,!1)}),o.addEventListener("touchstart",function(n){n.preventDefault(),a(n.touches[0].clientX,n.touches[0].clientY,!0)}),o.addEventListener("touchmove",function(n){n.preventDefault(),c(n.touches[0].clientX,n.touches[0].clientY,!0)}),o.addEventListener("touchend",function(n){n.preventDefault(),l(n.changedTouches[0].clientX,n.changedTouches[0].clientY,!0)}),window.addEventListener("mouseout",function(){event.preventDefault(),s()})},I=function(){a.setSize(window.innerWidth,window.innerHeight),a.setClearColor(15658734,1),l.position.set(1e3,1e3,1e3),l.lookAt(new THREE.Vector3),D(),b(),E(),z()};I()};var a=n("../modules/common/normalizeVector2"),i=o(a),r=n("js-util/debounce")},{"../modules/common/normalizeVector2":32,"../modules/old/Force2":39,"../modules/old/ForceCamera":41,"../modules/old/util":46,"js-util/debounce":12}],19:[function(n,e,t){"use strict";function o(n){return n&&n.__esModule?n:{"default":n}}Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=function(){var e=n("../modules/old/util"),t=n("../modules/old/Mover"),o=n("../modules/old/Points"),a=n("../modules/old/ForcePointLight"),c=n("../modules/old/ForceCamera"),l=document.getElementById("canvas-webgl"),s=new THREE.WebGLRenderer({antialias:!0,canvas:l}),u=new THREE.Scene,d=new c(35,window.innerWidth/window.innerHeight,1,1e4),v=(new THREE.Clock,1e4),m=[],f=new o,x=new a(16737792,1,1800,1),h=new Float32Array(3*v),p=new Float32Array(3*v),y=new Float32Array(v),g=new Float32Array(v),M=new THREE.Vector3(0,.1,0),w=null,b=Date.now(),E=!1,S=function(){for(var n=0;n<m.length;n++){var e=m[n];e.is_active&&(e.time++,e.applyForce(M),e.applyDrag(.01),e.updateVelocity(),e.time>50&&(e.size-=.7,e.a-=.009),e.a<=0&&(e.init(new THREE.Vector3(0,0,0)),e.time=0,e.a=0,e.inactivate())),h[3*n+0]=e.velocity.x-f.velocity.x,h[3*n+1]=e.velocity.y-f.velocity.y,h[3*n+2]=e.velocity.z-f.velocity.z,y[n]=e.a,g[n]=e.size}f.updatePoints()},z=function(){var n=0,t=Date.now();if(t-b>10){for(var o=0;o<m.length;o++){var a=m[o];if(!a.is_active){var i=e.getRadian(Math.log(e.getRandomInt(0,256))/Math.log(256)*260),r=e.getRadian(e.getRandomInt(0,360)),c=12*(1-Math.log(e.getRandomInt(32,256))/Math.log(256)),l=new THREE.Vector3,s=e.getPolarCoord(i,r,c);if(l.add(f.velocity),a.activate(),a.init(l),a.applyForce(s),a.a=.2,a.size=Math.pow(12-c,2)*e.getRandomInt(1,24)/10,n++,n>=6)break}}b=Date.now()}},D=function(n){var e=n.y*window.innerHeight/3,t=n.x*window.innerWidth/-3;f.anchor.y=e,f.anchor.z=t,x.force.anchor.y=e,x.force.anchor.z=t},I=function(){var n=document.createElement("canvas"),e=n.getContext("2d"),t=null,o=null;return n.width=200,n.height=200,t=e.createRadialGradient(100,100,20,100,100,100),t.addColorStop(.2,"rgba(255, 255, 255, 1)"),t.addColorStop(.5,"rgba(255, 255, 255, 0.3)"),t.addColorStop(1,"rgba(255, 255, 255, 0)"),e.fillStyle=t,e.arc(100,100,100,0,Math.PI/180,!0),e.fill(),o=new THREE.Texture(n),o.minFilter=THREE.NearestFilter,o.needsUpdate=!0,o},F=function(){var n=new THREE.OctahedronGeometry(1500,3),e=new THREE.MeshPhongMaterial({color:16777215,shading:THREE.FlatShading,side:THREE.BackSide});return new THREE.Mesh(n,e)},R=function(){for(var n=0;n<v;n++){var o=new t,a=e.getRandomInt(0,45),i=e.getRandomInt(60,90),r=new THREE.Color("hsl("+a+", "+i+"%, 50%)");o.init(new THREE.Vector3(e.getRandomInt(-100,100),0,0)),m.push(o),h[3*n+0]=o.velocity.x,h[3*n+1]=o.velocity.y,h[3*n+2]=o.velocity.z,r.toArray(p,3*n),y[n]=o.a,g[n]=o.size}f.init({scene:u,vs:"#define GLSLIFY 1\nattribute vec3 customColor;\nattribute float vertexOpacity;\nattribute float size;\n\nvarying vec3 vColor;\nvarying float fOpacity;\n\nvoid main() {\n  vColor = customColor;\n  fOpacity = vertexOpacity;\n  vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n  gl_PointSize = size * (300.0 / length(mvPosition.xyz));\n  gl_Position = projectionMatrix * mvPosition;\n}\n",fs:"#define GLSLIFY 1\nuniform vec3 color;\nuniform sampler2D texture;\n\nvarying vec3 vColor;\nvarying float fOpacity;\n\nvoid main() {\n  gl_FragColor = vec4(color * vColor, fOpacity);\n  gl_FragColor = gl_FragColor * texture2D(texture, gl_PointCoord);\n}\n",positions:h,colors:p,opacities:y,sizes:g,texture:I(),blending:THREE.AdditiveBlending}),u.add(x),w=F(),u.add(w),d.setPolarCoord(e.getRadian(25),0,1e3),x.setPolarCoord(e.getRadian(25),0,200)},T=function(){l.width=window.innerWidth,l.height=window.innerHeight,d.aspect=window.innerWidth/window.innerHeight,d.updateProjectionMatrix(),s.setSize(window.innerWidth,window.innerHeight)},P=function(){f.applyHook(0,.08),f.applyDrag(.2),f.updateVelocity(),x.force.applyHook(0,.08),x.force.applyDrag(.2),x.force.updateVelocity(),x.updatePosition(),z(),S(),d.force.position.applyHook(0,.004),d.force.position.applyDrag(.1),d.force.position.updateVelocity(),d.updatePosition(),d.lookAtCenter(),s.render(u,d)},H=function C(){P(),requestAnimationFrame(C)},_=function(){var n=new THREE.Vector2,e=new THREE.Vector2,t=new THREE.Vector2,o=function(e,t,o){n.set(e,t),(0,i["default"])(n),D(n),E=!0},a=function(n,t,o){e.set(n,t),(0,i["default"])(e),E&&D(e)},c=function(n,e,o){t.set(n,e),E=!1,f.anchor.set(0,0,0),x.force.anchor.set(0,0,0)},s=function(){t.set(0,0),E=!1,f.anchor.set(0,0,0),x.force.anchor.set(0,0,0)};window.addEventListener("resize",r(function(){T()}),1e3),l.addEventListener("mousedown",function(n){n.preventDefault(),o(n.clientX,n.clientY,!1)}),l.addEventListener("mousemove",function(n){n.preventDefault(),a(n.clientX,n.clientY,!1)}),l.addEventListener("mouseup",function(n){n.preventDefault(),c(n.clientX,n.clientY,!1)}),l.addEventListener("touchstart",function(n){n.preventDefault(),o(n.touches[0].clientX,n.touches[0].clientY,!0)}),l.addEventListener("touchmove",function(n){n.preventDefault(),a(n.touches[0].clientX,n.touches[0].clientY,!0)}),l.addEventListener("touchend",function(n){n.preventDefault(),c(n.changedTouches[0].clientX,n.changedTouches[0].clientY,!0)}),window.addEventListener("mouseout",function(){event.preventDefault(),s()})},L=function(){s.setSize(window.innerWidth,window.innerHeight),s.setClearColor(0,1),d.position.set(1e3,1e3,1e3),d.lookAt(new THREE.Vector3),_(),R(),T(),H()};L()};var a=n("../modules/common/normalizeVector2"),i=o(a),r=n("js-util/debounce")},{"../modules/common/normalizeVector2":32,"../modules/old/ForceCamera":41,"../modules/old/ForcePointLight":43,"../modules/old/Mover":44,"../modules/old/Points":45,"../modules/old/util":46,"js-util/debounce":12}],20:[function(n,e,t){"use strict";function o(n){return n&&n.__esModule?n:{"default":n}}Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=function(){var e=n("../modules/old/util"),t=n("../modules/old/Force3"),o=n("../modules/old/ForceHemisphereLight"),a=n("../modules/old/ForceCamera"),c=document.getElementById("canvas-webgl"),l=new THREE.WebGLRenderer({antialias:!0,canvas:c}),s=new THREE.Scene,u=new a(35,window.innerWidth/window.innerHeight,1,1e4),d=(new THREE.Clock,[]),v=300,m=null,f=new THREE.Raycaster,x=-1,h=-1,p=!1,y=!1,g=!1,M=function(){this.rad=0,this.obj=null,this.is_entered=!1,t.call(this)},w=new THREE.PlaneGeometry(100,100);M.prototype=Object.create(t.prototype),M.prototype.constructor=M,M.prototype.init=function(n){var t=new THREE.MeshPhongMaterial({side:THREE.DoubleSide,map:(new THREE.TextureLoader).load("../img/sketch/gallery/image0"+e.getRandomInt(1,9)+".jpg")});this.obj=new THREE.Mesh(w,t),this.velocity=n.clone(),this.anchor=n.clone(),this.acceleration.set(0,0,0)};var b=function(n){for(var t=0;t<v;t++){var o=null,a=e.getRadian(t%45*8+180),i=1e3,r=Math.cos(a)*i,c=5*t-2.5*v,l=Math.sin(a)*i,s=new THREE.Vector3(r,c,l);o=new M,o.init(new THREE.Vector3),o.rad=a,o.obj.position.copy(s),n.add(o.obj),d.push(o)}},E=function(n){if(!g){var e=null;f.setFromCamera(n,u),e=f.intersectObjects(s.children),e.length>0&&0==y?(document.body.classList.add("is-pointed"),x=e[0].object.id):z()}},S=function(n,e){g=!0,n.force.position.anchor.set(780*Math.cos(e.rad),e.obj.position.y,780*Math.sin(e.rad)),n.force.look.anchor.copy(e.obj.position),z()},z=function(){document.body.classList.remove("is-pointed"),x=-1},D=function(){b(s),m=new o(16777215,16777215,1),s.add(m),u.force.position.anchor.set(0,0,0),u.rotate_rad1=e.getRadian(-35),u.rotate_rad1_base=u.rotate_rad1,u.rotate_rad2=e.getRadian(180),u.rotate_rad2_base=u.rotate_rad2},I=function(){c.width=window.innerWidth,c.height=window.innerHeight,u.aspect=window.innerWidth/window.innerHeight,u.updateProjectionMatrix(),l.setSize(window.innerWidth,window.innerHeight)},F=function(){for(var n=0;n<v;n++)d[n].applyHook(0,.14),d[n].applyDrag(.4),d[n].updateVelocity(),d[n].obj.lookAt({x:0,y:d[n].obj.position.y,z:0}),d[n].obj.id==x&&0==y&&0==g?1==p?h=n:d[n].obj.material.color.set(11184810):d[n].obj.material.color.set(16777215);u.force.position.applyHook(0,.08),u.force.position.applyDrag(.4),u.force.position.updateVelocity(),u.updatePosition(),g===!1&&u.force.look.anchor.copy(e.getPolarCoord(u.rotate_rad1,u.rotate_rad2,1e3)),u.force.look.applyHook(0,.08),u.force.look.applyDrag(.4),u.force.look.updateVelocity(),u.updateLook(),l.render(s,u)},R=function H(){F(),requestAnimationFrame(H)},T=function(){var n=new THREE.Vector2,t=new THREE.Vector2,o=new THREE.Vector2,a=function(e,t,o){n.set(e,t),(0,i["default"])(n),E(n),p=!0},l=function(o,a,r){t.set(o,a),(0,i["default"])(t),E(s,u,t),p&&n.clone().sub(t).length()>.01&&(p=!1,y=!0),1==y&&0==g&&(u.rotate_rad1=u.rotate_rad1_base+e.getRadian(50*(n.y-t.y)),u.rotate_rad2=u.rotate_rad2_base+e.getRadian(50*(n.x-t.x)),u.rotate_rad1<e.getRadian(-50)&&(u.rotate_rad1=e.getRadian(-50)),u.rotate_rad1>e.getRadian(50)&&(u.rotate_rad1=e.getRadian(50)))},v=function(n,e,t){o.set(n,e),z(),g?(u.force.position.anchor.set(0,0,0),h=-1,g=!1):p&&h>-1?S(u,d[h]):y&&(u.rotate_rad1_base=u.rotate_rad1,u.rotate_rad2_base=u.rotate_rad2),p=!1,y=!1},m=function(){o.set(0,0),z(),g?(u.force.position.anchor.set(0,0,0),h=-1,g=!1):p&&h>-1?S(u,d[h]):y&&(u.rotate_rad1_base=u.rotate_rad1,u.rotate_rad2_base=u.rotate_rad2),p=!1,y=!1};window.addEventListener("resize",r(function(){I()}),1e3),c.addEventListener("mousedown",function(n){n.preventDefault(),a(n.clientX,n.clientY,!1)}),c.addEventListener("mousemove",function(n){n.preventDefault(),l(n.clientX,n.clientY,!1)}),c.addEventListener("mouseup",function(n){n.preventDefault(),v(n.clientX,n.clientY,!1)}),c.addEventListener("touchstart",function(n){n.preventDefault(),a(n.touches[0].clientX,n.touches[0].clientY,!0)}),c.addEventListener("touchmove",function(n){n.preventDefault(),l(n.touches[0].clientX,n.touches[0].clientY,!0)}),c.addEventListener("touchend",function(n){n.preventDefault(),v(n.changedTouches[0].clientX,n.changedTouches[0].clientY,!0)}),window.addEventListener("mouseout",function(){event.preventDefault(),m()})},P=function(){l.setSize(window.innerWidth,window.innerHeight),l.setClearColor(1118481,1),u.position.set(1e3,1e3,1e3),u.lookAt(new THREE.Vector3),T(),D(),I(),R()};P()};var a=n("../modules/common/normalizeVector2"),i=o(a),r=n("js-util/debounce")},{"../modules/common/normalizeVector2":32,"../modules/old/Force3":40,"../modules/old/ForceCamera":41,"../modules/old/ForceHemisphereLight":42,"../modules/old/util":46,"js-util/debounce":12}],21:[function(n,e,t){"use strict";function o(n){return n&&n.__esModule?n:{"default":n}}Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=function(){var e=n("../modules/old/util"),t=n("../modules/old/Force2"),o=n("../modules/old/ForceCamera"),a=document.getElementById("canvas-webgl"),c=new THREE.WebGLRenderer({antialias:!0,canvas:a}),l=new THREE.Scene,s=new o(35,window.innerWidth/window.innerHeight,1,1e4),u=(new THREE.Clock,null),d=null,v=null,m=null,f=new THREE.DirectionalLight(16777215,1),x=new THREE.Scene,h=new o(45,1,1,1e4),p=new THREE.WebGLRenderTarget(1200,1200),y=null,g=new THREE.Scene,M=new o(45,1,1,1e4),w=new THREE.HemisphereLight(268435455,13421772,1),b=new THREE.WebGLRenderTarget(1200,1200),E=null,S=null,z=new t,D=function(){for(var n=new THREE.BufferGeometry,t=[],o=[],a=0;a<32;a++){var i=0,r=0,c=0;t.push(i,r,c);var l=e.getRadian(e.getRandomInt(0,360)),s=e.getRadian(e.getRandomInt(0,360)),u=e.getRadian(e.getRandomInt(0,360));o.push(l,s,u)}var d=new Float32Array(t);n.addAttribute("position",new THREE.BufferAttribute(d,3));var v=new Float32Array(o);n.addAttribute("radian",new THREE.BufferAttribute(v,3));var m=new THREE.ShaderMaterial({uniforms:{time:{type:"f",value:0},resolution:{type:"v2",value:new THREE.Vector2(window.innerWidth,window.innerHeight)},size:{type:"f",value:28},force:{type:"v2",value:z.velocity}},vertexShader:"#define GLSLIFY 1\nattribute vec3 radian;\n\nuniform float time;\nuniform vec2 resolution;\nuniform float size;\nuniform vec2 force;\n\nvoid main() {\n  float radius = 300.0;\n  float radian_base = radians(time * 2.0);\n  vec3 update_positon = position + vec3(\n    cos(radian_base + radian.x) * cos(radian_base + radian.y) * radius,\n    cos(radian_base + radian.x) * sin(radian_base + radian.y) * radius,\n    sin(radian_base + radian.x) * radius\n  ) * force.x;\n  vec4 mvPosition = modelViewMatrix * vec4(update_positon, 1.0);\n\n  gl_PointSize = (size + force.y) * (abs(sin(radian_base + radian.z))) * (size / length(mvPosition.xyz)) * 480.0;\n  gl_Position = projectionMatrix * mvPosition;\n}\n",fragmentShader:"#define GLSLIFY 1\nuniform float size;\n\nvoid main() {\n  vec3 n;\n  n.xy = gl_PointCoord.xy * 2.0 - 1.0;\n  n.z = 1.0 - dot(n.xy, n.xy);\n  if (n.z < 0.0) discard;\n  gl_FragColor = vec4(1.0);\n}\n",transparent:!0,depthWrite:!1,blending:THREE.AdditiveBlending});return new THREE.Points(n,m)},I=function(){for(var n=new THREE.SphereBufferGeometry(2,4,4),t=n.attributes,o=new THREE.BufferGeometry,a=[],i=[],r=[],c=[],l=[],s=function(o){for(d=e.getRandomInt(300,1e3),v=e.getRadian(e.getRandomInt(0,3600)/10),m=e.getRandomInt(60,120)/100,f=0;f<t.position.array.length;f+=3)a.push(t.position.array[f+0],t.position.array[f+1],t.position.array[f+2]),i.push(d),r.push(v),c.push(m);n.index.array.map(function(n){l.push(n+o*t.position.array.length/3);
})},u=0;u<16;u++){var d,v,m,f;s(u)}var x=new Float32Array(a);o.addAttribute("position",new THREE.BufferAttribute(x,3));var d=new Float32Array(i);o.addAttribute("radius",new THREE.BufferAttribute(d,1));var h=new Float32Array(r);o.addAttribute("radian",new THREE.BufferAttribute(h,1));var p=new Float32Array(c);o.addAttribute("scale",new THREE.BufferAttribute(p,1));var y=new Uint32Array(l);o.setIndex(new THREE.BufferAttribute(y,1));var g=new THREE.ShaderMaterial({uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.lights,{time:{type:"f",value:0}}]),vertexShader:"#define GLSLIFY 1\nattribute float radius;\nattribute float radian;\nattribute float scale;\n\nuniform float time;\n\nvarying vec3 vPosition;\nvarying mat4 vInvertMatrix;\n\nfloat inverse(float m) {\n  return 1.0 / m;\n}\n\nmat2 inverse(mat2 m) {\n  return mat2(m[1][1],-m[0][1],\n             -m[1][0], m[0][0]) / (m[0][0]*m[1][1] - m[0][1]*m[1][0]);\n}\n\nmat3 inverse(mat3 m) {\n  float a00 = m[0][0], a01 = m[0][1], a02 = m[0][2];\n  float a10 = m[1][0], a11 = m[1][1], a12 = m[1][2];\n  float a20 = m[2][0], a21 = m[2][1], a22 = m[2][2];\n\n  float b01 = a22 * a11 - a12 * a21;\n  float b11 = -a22 * a10 + a12 * a20;\n  float b21 = a21 * a10 - a11 * a20;\n\n  float det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  return mat3(b01, (-a22 * a01 + a02 * a21), (a12 * a01 - a02 * a11),\n              b11, (a22 * a00 - a02 * a20), (-a12 * a00 + a02 * a10),\n              b21, (-a21 * a00 + a01 * a20), (a11 * a00 - a01 * a10)) / det;\n}\n\nmat4 inverse(mat4 m) {\n  float\n      a00 = m[0][0], a01 = m[0][1], a02 = m[0][2], a03 = m[0][3],\n      a10 = m[1][0], a11 = m[1][1], a12 = m[1][2], a13 = m[1][3],\n      a20 = m[2][0], a21 = m[2][1], a22 = m[2][2], a23 = m[2][3],\n      a30 = m[3][0], a31 = m[3][1], a32 = m[3][2], a33 = m[3][3],\n\n      b00 = a00 * a11 - a01 * a10,\n      b01 = a00 * a12 - a02 * a10,\n      b02 = a00 * a13 - a03 * a10,\n      b03 = a01 * a12 - a02 * a11,\n      b04 = a01 * a13 - a03 * a11,\n      b05 = a02 * a13 - a03 * a12,\n      b06 = a20 * a31 - a21 * a30,\n      b07 = a20 * a32 - a22 * a30,\n      b08 = a20 * a33 - a23 * a30,\n      b09 = a21 * a32 - a22 * a31,\n      b10 = a21 * a33 - a23 * a31,\n      b11 = a22 * a33 - a23 * a32,\n\n      det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  return mat4(\n      a11 * b11 - a12 * b10 + a13 * b09,\n      a02 * b10 - a01 * b11 - a03 * b09,\n      a31 * b05 - a32 * b04 + a33 * b03,\n      a22 * b04 - a21 * b05 - a23 * b03,\n      a12 * b08 - a10 * b11 - a13 * b07,\n      a00 * b11 - a02 * b08 + a03 * b07,\n      a32 * b02 - a30 * b05 - a33 * b01,\n      a20 * b05 - a22 * b02 + a23 * b01,\n      a10 * b10 - a11 * b08 + a13 * b06,\n      a01 * b08 - a00 * b10 - a03 * b06,\n      a30 * b04 - a31 * b02 + a33 * b00,\n      a21 * b02 - a20 * b04 - a23 * b00,\n      a11 * b07 - a10 * b09 - a12 * b06,\n      a00 * b09 - a01 * b07 + a02 * b06,\n      a31 * b01 - a30 * b03 - a32 * b00,\n      a20 * b03 - a21 * b01 + a22 * b00) / det;\n}\n\n//\n// Description : Array and textureless GLSL 2D/3D/4D simplex\n//               noise functions.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x) {\n     return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nfloat snoise(vec3 v)\n  {\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n// First corner\n  vec3 i  = floor(v + dot(v, C.yyy) );\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n// Other corners\n  vec3 g = step(x0.yzx, x0.xyz);\n  vec3 l = 1.0 - g;\n  vec3 i1 = min( g.xyz, l.zxy );\n  vec3 i2 = max( g.xyz, l.zxy );\n\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\n  vec3 x1 = x0 - i1 + C.xxx;\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\n\n// Permutations\n  i = mod289(i);\n  vec4 p = permute( permute( permute(\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n  float n_ = 0.142857142857; // 1.0/7.0\n  vec3  ns = n_ * D.wyz - D.xzx;\n\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\n\n  vec4 x_ = floor(j * ns.z);\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n  vec4 x = x_ *ns.x + ns.yyyy;\n  vec4 y = y_ *ns.x + ns.yyyy;\n  vec4 h = 1.0 - abs(x) - abs(y);\n\n  vec4 b0 = vec4( x.xy, y.xy );\n  vec4 b1 = vec4( x.zw, y.zw );\n\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n  vec4 s0 = floor(b0)*2.0 + 1.0;\n  vec4 s1 = floor(b1)*2.0 + 1.0;\n  vec4 sh = -step(h, vec4(0.0));\n\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n  vec3 p0 = vec3(a0.xy,h.x);\n  vec3 p1 = vec3(a0.zw,h.y);\n  vec3 p2 = vec3(a1.xy,h.z);\n  vec3 p3 = vec3(a1.zw,h.w);\n\n//Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n\n// Mix final noise value\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n  m = m * m;\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\n                                dot(p2,x2), dot(p3,x3) ) );\n  }\n\nmat4 translateMatrix(vec3 v) {\n  return mat4(\n    1.0, 0.0, 0.0, 0.0,\n    0.0, 1.0, 0.0, 0.0,\n    0.0, 0.0, 1.0, 0.0,\n    v.x, v.y, v.z, 1.0\n  );\n}\n\nmat4 rotationMatrixX(float radian) {\n  return mat4(\n    1.0, 0.0, 0.0, 0.0,\n    0.0, cos(radian), -sin(radian), 0.0,\n    0.0, sin(radian), cos(radian), 0.0,\n    0.0, 0.0, 0.0, 1.0\n  );\n}\n\nmat4 rotationMatrixY(float radian) {\n  return mat4(\n    cos(radian), 0.0, sin(radian), 0.0,\n    0.0, 1.0, 0.0, 0.0,\n    -sin(radian), 0.0, cos(radian), 0.0,\n    0.0, 0.0, 0.0, 1.0\n  );\n}\n\nmat4 rotationMatrixZ(float radian) {\n  return mat4(\n    cos(radian), -sin(radian), 0.0, 0.0,\n    sin(radian), cos(radian), 0.0, 0.0,\n    0.0, 0.0, 1.0, 0.0,\n    0.0, 0.0, 0.0, 1.0\n  );\n}\n\nmat4 rotationMatrix(float radian_x, float radian_y, float radian_z) {\n  return rotationMatrixX(radian_x) * rotationMatrixY(radian_y) * rotationMatrixZ(radian_z);\n}\n\nmat4 scaleMatrix(vec3 scale) {\n  return mat4(\n    scale.x, 0.0, 0.0, 0.0,\n    0.0, scale.y, 0.0, 0.0,\n    0.0, 0.0, scale.z, 0.0,\n    0.0, 0.0, 0.0, 1.0\n  );\n}\n\nvec4 move(vec3 position) {\n  return translateMatrix(\n    vec3(\n      cos(radians(time * 0.5) + radian) * radius,\n      sin(radians(time * 0.5) + radian * 10.0) * radius * 0.3,\n      sin(radians(time * 0.5) + radian) * radius\n    )\n  ) * rotationMatrix(\n    radians(time * radian) + radian, radians(time) + radian, radians(time) + radian\n  ) * scaleMatrix(\n    vec3(20.0 * scale) + vec3(10.0) * snoise((position + sin(radian)))\n  ) * vec4(position, 1.0);\n}\n\nvoid main() {\n  vec4 update_position = move(position);\n  vPosition = position;\n  vInvertMatrix = inverse(rotationMatrix(\n    radians(time * radian) + radian, radians(time) + radian, radians(time) + radian\n  ));\n  gl_Position = projectionMatrix * modelViewMatrix * update_position;\n}\n",fragmentShader:"#define GLSLIFY 1\nstruct DirectionalLight {\n  vec3 color;\n  vec3 direction;\n};\nuniform DirectionalLight directionalLights[1];\n\nvarying vec3 vPosition;\nvarying mat4 vInvertMatrix;\n\nvoid main() {\n  vec3 normal = normalize(cross(dFdx(vPosition), dFdy(vPosition)));\n  vec3 inv_light = normalize(vInvertMatrix * vec4(directionalLights[0].direction, 1.0)).xyz;\n  float diff = (dot(normal, inv_light) + 1.0) / 2.0 * 0.25 + 0.75;\n  gl_FragColor = vec4(vec3(1.0) * diff, 1.0);\n}\n",shading:THREE.FlatShading,lights:!0});return new THREE.Mesh(o,g)},F=function(){var n=new THREE.SphereGeometry(1200,64,64),e=new THREE.ShaderMaterial({uniforms:{time:{type:"f",value:0}},vertexShader:"#define GLSLIFY 1\nuniform float time;\n\nvarying vec3 vColor;\n\nvoid main() {\n  vColor = vec3((position.y / 1000.0 + 1.0) * 0.12 + 0.88);\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n",fragmentShader:"#define GLSLIFY 1\nvarying vec3 vColor;\n\nvoid main() {\n  gl_FragColor = vec4(vColor, 1.0);\n}\n",side:THREE.BackSide});return new THREE.Mesh(n,e)},R=function(){var n=new THREE.SphereGeometry(1100,64,64),e=new THREE.MeshBasicMaterial({color:14540253,wireframe:!0});return new THREE.Mesh(n,e)},T=function(){for(var n=new THREE.BufferGeometry,t=[],o=0;o<2e3;o++)t.push(e.getRadian(e.getRandomInt(0,120)+120),e.getRadian(e.getRandomInt(0,3600)/10),e.getRandomInt(200,1e3));var a=new Float32Array(t);n.addAttribute("position",new THREE.BufferAttribute(a,3));var i=new THREE.ShaderMaterial({uniforms:{time:{type:"f",value:0}},vertexShader:"#define GLSLIFY 1\nuniform float time;\n\nvec3 getPolarCoord(float rad1, float rad2, float r) {\n  return vec3(\n    cos(rad1) * cos(rad2) * r,\n    sin(rad1) * r,\n    cos(rad1) * sin(rad2) * r\n  );\n}\n\nvoid main() {\n  vec3 update_position = getPolarCoord(\n    position.x,\n    position.y + radians(time / 2.0),\n    position.z + sin(radians(time * 2.0) + position.x + position.y) * position.z / 4.0\n  );\n  vec4 mv_position = modelViewMatrix * vec4(update_position, 1.0);\n\n  gl_PointSize = 2.0 * (1000.0 / length(mv_position.xyz));\n  gl_Position = projectionMatrix * mv_position;\n}\n",fragmentShader:"#define GLSLIFY 1\nvoid main() {\n  vec3 n;\n  n.xy = gl_PointCoord.xy * 2.0 - 1.0;\n  n.z = 1.0 - dot(n.xy, n.xy);\n  if (n.z < 0.0) discard;\n  gl_FragColor = vec4(1.0);\n}\n"});return new THREE.Points(n,i)},P=function(){var n=new THREE.SphereGeometry(1e3,128,128),e=new THREE.BufferGeometry;e.fromGeometry(n);var t=new THREE.ShaderMaterial({uniforms:{time:{type:"f",value:0}},vertexShader:"#define GLSLIFY 1\nuniform float time;\n\nvarying vec3 vColor;\n\nvec3 hsv2rgb(vec3 c){\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n//\n// Description : Array and textureless GLSL 2D/3D/4D simplex\n//               noise functions.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x) {\n     return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nfloat snoise(vec3 v)\n  {\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n// First corner\n  vec3 i  = floor(v + dot(v, C.yyy) );\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n// Other corners\n  vec3 g = step(x0.yzx, x0.xyz);\n  vec3 l = 1.0 - g;\n  vec3 i1 = min( g.xyz, l.zxy );\n  vec3 i2 = max( g.xyz, l.zxy );\n\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\n  vec3 x1 = x0 - i1 + C.xxx;\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\n\n// Permutations\n  i = mod289(i);\n  vec4 p = permute( permute( permute(\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n  float n_ = 0.142857142857; // 1.0/7.0\n  vec3  ns = n_ * D.wyz - D.xzx;\n\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\n\n  vec4 x_ = floor(j * ns.z);\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n  vec4 x = x_ *ns.x + ns.yyyy;\n  vec4 y = y_ *ns.x + ns.yyyy;\n  vec4 h = 1.0 - abs(x) - abs(y);\n\n  vec4 b0 = vec4( x.xy, y.xy );\n  vec4 b1 = vec4( x.zw, y.zw );\n\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n  vec4 s0 = floor(b0)*2.0 + 1.0;\n  vec4 s1 = floor(b1)*2.0 + 1.0;\n  vec4 sh = -step(h, vec4(0.0));\n\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n  vec3 p0 = vec3(a0.xy,h.x);\n  vec3 p1 = vec3(a0.zw,h.y);\n  vec3 p2 = vec3(a1.xy,h.z);\n  vec3 p3 = vec3(a1.zw,h.w);\n\n//Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n\n// Mix final noise value\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n  m = m * m;\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\n                                dot(p2,x2), dot(p3,x3) ) );\n  }\n\nvoid main() {\n  float noise = snoise(\n    vec3(position.x + time * 10.0, position.y + cos(time / 20.0) * 100.0, position.z + time * 10.0) / 800.0\n  );\n  vColor = hsv2rgb(vec3(noise * 0.2 + 0.75, 0.4, noise * 0.3 + 0.5));\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n",fragmentShader:"#define GLSLIFY 1\nvarying vec3 vColor;\n\nvoid main() {\n  gl_FragColor = vec4(vColor, 1.0);\n}\n",side:THREE.BackSide});return new THREE.Mesh(e,t)},H=function(){var n=new THREE.PlaneGeometry(1e3,1e3),e=new THREE.BufferGeometry;e.fromGeometry(n);var t=new THREE.ShaderMaterial({uniforms:{time:{type:"f",value:0},resolution:{type:"v2",value:new THREE.Vector2(window.innerWidth,window.innerHeight)},texture:{type:"t",value:p.texture},texture2:{type:"t",value:b.texture}},vertexShader:"#define GLSLIFY 1\nvarying vec2 vUv;\n\nvoid main(void) {\n  vUv = uv;\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n",fragmentShader:"#define GLSLIFY 1\nuniform float time;\nuniform vec2 resolution;\nuniform sampler2D texture;\nuniform sampler2D texture2;\n\nconst float blur = 20.0;\n\nvarying vec2 vUv;\n\nvoid main() {\n  vec4 color = vec4(0.0);\n  for (float x = 0.0; x < blur; x++){\n    for (float y = 0.0; y < blur; y++){\n      color += texture2D(texture, vUv - (vec2(x, y) - vec2(blur / 2.0)) / resolution);\n    }\n  }\n  vec4 color2 = color / pow(blur, 2.0);\n  vec4 color3 = texture2D(texture2, vUv);\n  gl_FragColor = vec4(color3.rgb, floor(length(color2.rgb)));\n}\n",transparent:!0});return new THREE.Mesh(e,t)},_=function(){z.anchor.set(1,0),M.force.position.anchor.set(1e3,300,0),M.force.look.anchor.set(0,0,0),E=P(),S=T(),g.add(E),g.add(S),g.add(w),u=D(),x.add(u),h.position.set(0,0,3e3),h.lookAt(0,0,0),y=H(),l.add(y),d=F(),l.add(d),v=R(),l.add(v),m=I(),l.add(m),f.position.set(0,1,0),l.add(f),s.force.position.anchor.set(1e3,300,0),s.force.look.anchor.set(0,0,0)},L=function(){a.width=window.innerWidth,a.height=window.innerHeight,s.aspect=window.innerWidth/window.innerHeight,s.updateProjectionMatrix(),c.setSize(window.innerWidth,window.innerHeight),u.material.uniforms.resolution.value.set(window.innerWidth,window.innerHeight),y.material.uniforms.resolution.value.set(window.innerWidth,window.innerHeight)},C=function(){u.material.uniforms.time.value++,y.lookAt(s.position),y.material.uniforms.time.value++,E.material.uniforms.time.value++,S.material.uniforms.time.value++,v.rotation.y=u.material.uniforms.time.value/1e3,m.material.uniforms.time.value++,z.applyHook(0,.12),z.applyDrag(.18),z.updateVelocity(),s.force.position.applyHook(0,.025),s.force.position.applyDrag(.2),s.force.position.updateVelocity(),s.updatePosition(),s.force.look.anchor.y=100*Math.sin(u.material.uniforms.time.value/100),s.force.look.applyHook(0,.2),s.force.look.applyDrag(.4),s.updateLook(),M.force.position.applyHook(0,.1),M.force.position.applyDrag(.2),M.force.position.updateVelocity(),M.updatePosition(),M.force.look.applyHook(0,.2),M.force.look.applyDrag(.4),M.force.look.updateVelocity(),M.updateLook(),c.render(g,M,b),c.render(x,h,p),c.render(l,s)},A=function O(){C(),requestAnimationFrame(O)},j=function(){var n=new THREE.Vector2,e=new THREE.Vector2,t=new THREE.Vector2,o=function(e,t,o){n.set(e,t),(0,i["default"])(n),z.anchor.set(2,30)},c=function(n,t,o){e.set(n,t),(0,i["default"])(e)},l=function(n,e,o){t.set(n,e),z.anchor.set(1,0)},s=function(){t.set(0,0),z.anchor.set(1,0)};window.addEventListener("resize",r(function(){L()}),1e3),a.addEventListener("mousedown",function(n){n.preventDefault(),o(n.clientX,n.clientY,!1)}),a.addEventListener("mousemove",function(n){n.preventDefault(),c(n.clientX,n.clientY,!1)}),a.addEventListener("mouseup",function(n){n.preventDefault(),l(n.clientX,n.clientY,!1)}),a.addEventListener("touchstart",function(n){n.preventDefault(),o(n.touches[0].clientX,n.touches[0].clientY,!0)}),a.addEventListener("touchmove",function(n){n.preventDefault(),c(n.touches[0].clientX,n.touches[0].clientY,!0)}),a.addEventListener("touchend",function(n){n.preventDefault(),l(n.changedTouches[0].clientX,n.changedTouches[0].clientY,!0)}),window.addEventListener("mouseout",function(){event.preventDefault(),s()})},k=function(){c.setSize(window.innerWidth,window.innerHeight),c.setClearColor(15658734,0),s.position.set(1e3,1e3,1e3),s.lookAt(new THREE.Vector3),j(),_(),L(),A()};k()};var a=n("../modules/common/normalizeVector2"),i=o(a),r=n("js-util/debounce")},{"../modules/common/normalizeVector2":32,"../modules/old/Force2":39,"../modules/old/ForceCamera":41,"../modules/old/util":46,"js-util/debounce":12}],22:[function(n,e,t){"use strict";function o(n){return n&&n.__esModule?n:{"default":n}}Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=function(){var e=n("../modules/old/util"),t=n("../modules/old/Mover"),o=n("../modules/old/Points.js"),a=n("../modules/old/ForceCamera"),c=document.getElementById("canvas-webgl"),l=new THREE.WebGLRenderer({antialias:!0,canvas:c}),s=new THREE.Scene,u=new a(35,window.innerWidth/window.innerHeight,1,1e4),d=(new THREE.Clock,2e4),v=[],m=new o,f=new Float32Array(3*d),x=new Float32Array(3*d),h=new Float32Array(d),p=new Float32Array(d),y=new THREE.Vector3(1.5,0,0),g=Date.now(),M=!1,w=function(){for(var n=0;n<v.length;n++){var e=v[n];e.is_active&&(e.time++,e.applyForce(y),e.applyDrag(.1),e.updateVelocity(),e.a<.8&&(e.a+=.02),e.velocity.x>1e3&&(e.init(new THREE.Vector3(0,0,0)),e.time=0,e.a=0,e.inactivate())),f[3*n+0]=e.velocity.x,f[3*n+1]=e.velocity.y,f[3*n+2]=e.velocity.z,h[n]=e.a,p[n]=e.size}m.updatePoints()},b=function(){var n=0,t=Date.now();if(t-g>16*y.x){for(var o=0;o<v.length;o++){var a=v[o];if(!a.is_active){var i=e.getRadian(3*e.getRandomInt(0,120)),r=Math.log(e.getRandomInt(2,128))/Math.log(128)*160+60,c=Math.sin(i)*r,l=Math.cos(i)*r,s=new THREE.Vector3((-1e3),c,l);if(s.add(m.velocity),a.activate(),a.init(s),a.a=0,a.size=e.getRandomInt(5,60),n++,n>=Math.pow(3*y.x,.4*y.x))break}}g=Date.now()}},E=function(){var n=document.createElement("canvas"),e=n.getContext("2d"),t=null,o=null;return n.width=256,n.height=256,t=e.createRadialGradient(128,128,20,128,128,128),t.addColorStop(.2,"rgba(255, 255, 255, 1)"),t.addColorStop(.5,"rgba(255, 255, 255, 0.3)"),t.addColorStop(1,"rgba(255, 255, 255, 0)"),e.fillStyle=t,e.arc(128,128,128,0,Math.PI/180,!0),e.fill(),o=new THREE.Texture(n),o.needsUpdate=!0,o},S=function(){M?y.x<6&&(y.x+=.02):y.x>1.5&&(y.x-=.1)},z=function(){for(var n=0;n<d;n++){var o=new t,a=e.getRandomInt(60,210),i=e.getRandomInt(30,90),r=new THREE.Color("hsl("+a+", "+i+"%, 50%)");o.init(new THREE.Vector3(e.getRandomInt(-100,100),0,0)),v.push(o),f[3*n+0]=o.velocity.x,f[3*n+1]=o.velocity.y,f[3*n+2]=o.velocity.z,r.toArray(x,3*n),h[n]=o.a,p[n]=o.size}m.init({scene:s,vs:"#define GLSLIFY 1\nattribute vec3 customColor;\nattribute float vertexOpacity;\nattribute float size;\n\nvarying vec3 vColor;\nvarying float fOpacity;\n\nvoid main() {\n  vColor = customColor;\n  fOpacity = vertexOpacity;\n  vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n  gl_PointSize = size * (300.0 / length(mvPosition.xyz));\n  gl_Position = projectionMatrix * mvPosition;\n}\n",fs:"#define GLSLIFY 1\nuniform vec3 color;\nuniform sampler2D texture;\n\nvarying vec3 vColor;\nvarying float fOpacity;\n\nvoid main() {\n  gl_FragColor = vec4(color * vColor, fOpacity);\n  gl_FragColor = gl_FragColor * texture2D(texture, gl_PointCoord);\n}\n",positions:f,colors:x,opacities:h,sizes:p,texture:E(),blending:THREE.AdditiveBlending}),u.force.position.anchor.set(800,0,0)},D=function(){c.width=window.innerWidth,c.height=window.innerHeight,u.aspect=window.innerWidth/window.innerHeight,u.updateProjectionMatrix(),l.setSize(window.innerWidth,window.innerHeight)},I=function(){S(),b(),w(),u.force.position.applyHook(0,.008),u.force.position.applyDrag(.1),u.force.position.updateVelocity(),u.updatePosition(),u.lookAtCenter(),l.render(s,u)},F=function P(){I(),requestAnimationFrame(P)},R=function(){var n=new THREE.Vector2,e=new THREE.Vector2,t=new THREE.Vector2,o=function(e,t,o){n.set(e,t),(0,i["default"])(n),M=!0},a=function(n,t,o){e.set(n,t),(0,i["default"])(e),u.force.position.anchor.z=120*e.x,u.force.position.anchor.y=e.y*-120},l=function(n,e,o){t.set(n,e),u.force.position.anchor.z=0,u.force.position.anchor.y=0,M=!1},s=function(){t.set(0,0),u.force.position.anchor.z=0,u.force.position.anchor.y=0};window.addEventListener("resize",r(function(){D()}),1e3),c.addEventListener("mousedown",function(n){n.preventDefault(),o(n.clientX,n.clientY,!1)}),c.addEventListener("mousemove",function(n){n.preventDefault(),a(n.clientX,n.clientY,!1)}),c.addEventListener("mouseup",function(n){n.preventDefault(),l(n.clientX,n.clientY,!1)}),c.addEventListener("touchstart",function(n){n.preventDefault(),o(n.touches[0].clientX,n.touches[0].clientY,!0)}),c.addEventListener("touchmove",function(n){n.preventDefault(),a(n.touches[0].clientX,n.touches[0].clientY,!0)}),c.addEventListener("touchend",function(n){n.preventDefault(),l(n.changedTouches[0].clientX,n.changedTouches[0].clientY,!0)}),window.addEventListener("mouseout",function(){event.preventDefault(),s()})},T=function(){l.setSize(window.innerWidth,window.innerHeight),l.setClearColor(0,1),u.position.set(1e3,1e3,1e3),u.lookAt(new THREE.Vector3),R(),z(),D(),F()};T()};var a=n("../modules/common/normalizeVector2"),i=o(a),r=n("js-util/debounce")},{"../modules/common/normalizeVector2":32,"../modules/old/ForceCamera":41,"../modules/old/Mover":44,"../modules/old/Points.js":45,"../modules/old/util":46,"js-util/debounce":12}],23:[function(n,e,t){"use strict";function o(n){return n&&n.__esModule?n:{"default":n}}Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=function(){var e=n("../modules/old/util"),t=n("../modules/old/Mover"),o=n("../modules/old/Points.js"),a=n("../modules/old/ForceCamera"),c=document.getElementById("canvas-webgl"),l=new THREE.WebGLRenderer({antialias:!0,canvas:c}),s=new THREE.Scene,u=new a(35,window.innerWidth/window.innerHeight,1,1e4),d=(new THREE.Clock,new Image),v=[],m=[],f=null,x=null,h=null,p=null,y=400,g=new o,M=!1,w=function(n){d.src="../img/sketch/image_data/elephant.png",d.onload=function(){n()}},b=function(){var n=document.createElement("canvas"),e=n.getContext("2d");n.width=y,n.height=y,e.drawImage(d,0,0);for(var t=e.getImageData(0,0,y,y),o=0;o<y;o++)if(!(o%3>0))for(var a=0;a<y;a++)a%3>0||t.data[4*(a+o*y)]>0&&v.push(0,(o-y/2)*-1,(a-y/2)*-1)},E=function(n){f=new Float32Array(v),x=new Float32Array(v.length),h=new Float32Array(v.length/3),p=new Float32Array(v.length/3);for(var e=0;e<v.length/3;e++){var o=new t,a=new THREE.Color("hsl("+(v[3*e+2]+v[3*e+1]+y)/5+", 60%, 80%)");o.init(new THREE.Vector3(v[3*e],v[3*e+1],v[3*e+2])),o.is_activate=!0,m.push(o),a.toArray(x,3*e),h[e]=1,p[e]=12}g.init({scene:n,vs:"#define GLSLIFY 1\nattribute vec3 customColor;\nattribute float vertexOpacity;\nattribute float size;\n\nvarying vec3 vColor;\nvarying float fOpacity;\n\nvoid main() {\n  vColor = customColor;\n  fOpacity = vertexOpacity;\n  vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n  gl_PointSize = size * (300.0 / length(mvPosition.xyz));\n  gl_Position = projectionMatrix * mvPosition;\n}\n",fs:"#define GLSLIFY 1\nuniform vec3 color;\nuniform sampler2D texture;\n\nvarying vec3 vColor;\nvarying float fOpacity;\n\nvoid main() {\n  gl_FragColor = vec4(color * vColor, fOpacity);\n  gl_FragColor = gl_FragColor * texture2D(texture, gl_PointCoord);\n}\n",positions:f,colors:x,opacities:h,sizes:p,texture:D(),blending:THREE.NormalBlending}),M=!0},S=function(){for(var n=0;n<m.length;n++){var t=m[n],o=e.getRadian(e.getRandomInt(0,360)),a=e.getRadian(e.getRandomInt(0,360)),i=e.getRandomInt(40,80);t.is_activate=!1,t.applyForce(e.getPolarCoord(o,a,i))}},z=function(){for(var n=0;n<m.length;n++){var t=m[n];t.time++,t.acceleration.length()<1&&(t.is_activate=!0),t.is_activate?(t.applyHook(0,.18),t.applyDrag(.26)):t.applyDrag(.035),t.updateVelocity(),t.velocity.sub(g.velocity),f[3*n+0]=t.velocity.x-g.velocity.x,f[3*n+1]=t.velocity.y-g.velocity.x,f[3*n+2]=t.velocity.z-g.velocity.x,t.size=Math.log(e.getRandomInt(1,128))/Math.log(128)*Math.sqrt(document.body.clientWidth),p[n]=t.size}g.updatePoints()},D=function(){var n=document.createElement("canvas"),e=n.getContext("2d"),t=null,o=null;return n.width=200,n.height=200,t=e.createRadialGradient(100,100,20,100,100,100),t.addColorStop(.2,"rgba(255, 255, 255, 1)"),t.addColorStop(.5,"rgba(255, 255, 255, 0.3)"),t.addColorStop(1,"rgba(255, 255, 255, 0)"),e.fillStyle=t,e.arc(100,100,100,0,Math.PI/180,!0),e.fill(),o=new THREE.Texture(n),o.minFilter=THREE.NearestFilter,o.needsUpdate=!0,o},I=function(){w(function(){b(),E(s)}),u.setPolarCoord(0,0,1400)},F=function(){c.width=window.innerWidth,c.height=window.innerHeight,u.aspect=window.innerWidth/window.innerHeight,u.updateProjectionMatrix(),l.setSize(window.innerWidth,window.innerHeight)},R=function(){M&&(z(),g.updatePoints()),u.force.position.applyHook(0,.025),u.force.position.applyDrag(.2),u.force.position.updateVelocity(),u.updatePosition(),u.lookAtCenter(),l.render(s,u)},T=function _(){R(),requestAnimationFrame(_)},P=function(){var n=new THREE.Vector2,e=new THREE.Vector2,t=new THREE.Vector2,o=function(e,t,o){n.set(e,t),(0,i["default"])(n),S()},a=function(n,t,o){e.set(n,t),(0,i["default"])(e),u.force.position.anchor.z=1e3*e.x,u.force.position.anchor.y=e.y*-1e3},l=function(n,e,o){t.set(n,e),u.force.position.anchor.z=0,u.force.position.anchor.y=0},s=function(){t.set(0,0),u.force.position.anchor.z=0,u.force.position.anchor.y=0};window.addEventListener("resize",r(function(){F()}),1e3),c.addEventListener("mousedown",function(n){n.preventDefault(),o(n.clientX,n.clientY,!1)}),c.addEventListener("mousemove",function(n){n.preventDefault(),a(n.clientX,n.clientY,!1)}),c.addEventListener("mouseup",function(n){n.preventDefault(),l(n.clientX,n.clientY,!1)}),c.addEventListener("touchstart",function(n){n.preventDefault(),o(n.touches[0].clientX,n.touches[0].clientY,!0)}),c.addEventListener("touchmove",function(n){n.preventDefault(),a(n.touches[0].clientX,n.touches[0].clientY,!0)}),c.addEventListener("touchend",function(n){n.preventDefault(),l(n.changedTouches[0].clientX,n.changedTouches[0].clientY,!0)}),window.addEventListener("mouseout",function(){event.preventDefault(),s()})},H=function(){l.setSize(window.innerWidth,window.innerHeight),l.setClearColor(1118481,1),u.position.set(1e3,1e3,1e3),u.lookAt(new THREE.Vector3),P(),I(),F(),T()};H()};var a=n("../modules/common/normalizeVector2"),i=o(a),r=n("js-util/debounce")},{"../modules/common/normalizeVector2":32,"../modules/old/ForceCamera":41,"../modules/old/Mover":44,"../modules/old/Points.js":45,"../modules/old/util":46,"js-util/debounce":12}],24:[function(n,e,t){"use strict";function o(n){return n&&n.__esModule?n:{"default":n}}Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=function(){var n=(new r["default"],document.getElementById("canvas-webgl")),e=new THREE.WebGLRenderer({antialias:!1,canvas:n}),t=new THREE.Scene,o=new THREE.PerspectiveCamera(45,document.body.clientWidth/window.innerHeight,1,1e4),a=new THREE.Clock,i=new l["default"],c=(new u["default"],new v["default"]),s=new f["default"],d=new h["default"],m=function(){n.width=document.body.clientWidth,n.height=window.innerHeight,o.aspect=document.body.clientWidth/window.innerHeight,o.updateProjectionMatrix(),e.setSize(document.body.clientWidth,window.innerHeight)},x=function(){var n=a.getDelta();i.render(n),c.render(n),s.render(n),d.render(n),e.render(t,o)},y=function w(){x(),requestAnimationFrame(w)},g=function(){window.addEventListener("resize",p(function(){m()}),1e3)},M=function(){e.setSize(document.body.clientWidth,window.innerHeight),e.setClearColor(1118481,1),o.position.set(0,0,800),o.lookAt(new THREE.Vector3),i.loadTexture(function(){t.add(i.obj),t.add(c.obj),t.add(s.obj),t.add(d.obj)}),g(),m(),y()};M()};var a=n("../modules/common/normalizeVector2"),i=(o(a),n("../modules/common/IndexScroller")),r=o(i),c=n("../modules/index/TitleObject"),l=o(c),s=n("../modules/index/FrameObject"),u=o(s),d=n("../modules/index/SkyOctahedron"),v=o(d),m=n("../modules/index/SkyOctahedronShell"),f=o(m),x=n("../modules/index/Ground"),h=o(x),p=n("js-util/debounce")},{"../modules/common/IndexScroller":28,"../modules/common/normalizeVector2":32,"../modules/index/FrameObject":34,"../modules/index/Ground":35,"../modules/index/SkyOctahedron":36,"../modules/index/SkyOctahedronShell":37,"../modules/index/TitleObject":38,"js-util/debounce":12}],25:[function(n,e,t){"use strict";function o(n){return n&&n.__esModule?n:{"default":n}}Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=function(){var e=n("../modules/old/util"),t=n("../modules/old/Force3"),o=n("../modules/old/ForceCamera"),a=document.getElementById("canvas-webgl"),c=new THREE.WebGLRenderer({antialias:!0,canvas:a}),l=new THREE.Scene,s=new o(35,window.innerWidth/window.innerHeight,1,1e4),u=(new THREE.Clock,new THREE.Raycaster),d=null,v=new t,m=new t,f=null;v.mass=1.4;var x=function(){var n=new THREE.PlaneBufferGeometry(6,6),e=new THREE.ShaderMaterial({uniforms:{time:{type:"f",value:0},time2:{type:"f",value:0},acceleration:{type:"f",value:0},resolution:{type:"v2",value:new THREE.Vector2(window.innerWidth,window.innerHeight)}},vertexShader:"#define GLSLIFY 1\nvarying mat4 m_matrix;\n\nfloat inverse(float m) {\n  return 1.0 / m;\n}\n\nmat2 inverse(mat2 m) {\n  return mat2(m[1][1],-m[0][1],\n             -m[1][0], m[0][0]) / (m[0][0]*m[1][1] - m[0][1]*m[1][0]);\n}\n\nmat3 inverse(mat3 m) {\n  float a00 = m[0][0], a01 = m[0][1], a02 = m[0][2];\n  float a10 = m[1][0], a11 = m[1][1], a12 = m[1][2];\n  float a20 = m[2][0], a21 = m[2][1], a22 = m[2][2];\n\n  float b01 = a22 * a11 - a12 * a21;\n  float b11 = -a22 * a10 + a12 * a20;\n  float b21 = a21 * a10 - a11 * a20;\n\n  float det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  return mat3(b01, (-a22 * a01 + a02 * a21), (a12 * a01 - a02 * a11),\n              b11, (a22 * a00 - a02 * a20), (-a12 * a00 + a02 * a10),\n              b21, (-a21 * a00 + a01 * a20), (a11 * a00 - a01 * a10)) / det;\n}\n\nmat4 inverse(mat4 m) {\n  float\n      a00 = m[0][0], a01 = m[0][1], a02 = m[0][2], a03 = m[0][3],\n      a10 = m[1][0], a11 = m[1][1], a12 = m[1][2], a13 = m[1][3],\n      a20 = m[2][0], a21 = m[2][1], a22 = m[2][2], a23 = m[2][3],\n      a30 = m[3][0], a31 = m[3][1], a32 = m[3][2], a33 = m[3][3],\n\n      b00 = a00 * a11 - a01 * a10,\n      b01 = a00 * a12 - a02 * a10,\n      b02 = a00 * a13 - a03 * a10,\n      b03 = a01 * a12 - a02 * a11,\n      b04 = a01 * a13 - a03 * a11,\n      b05 = a02 * a13 - a03 * a12,\n      b06 = a20 * a31 - a21 * a30,\n      b07 = a20 * a32 - a22 * a30,\n      b08 = a20 * a33 - a23 * a30,\n      b09 = a21 * a32 - a22 * a31,\n      b10 = a21 * a33 - a23 * a31,\n      b11 = a22 * a33 - a23 * a32,\n\n      det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  return mat4(\n      a11 * b11 - a12 * b10 + a13 * b09,\n      a02 * b10 - a01 * b11 - a03 * b09,\n      a31 * b05 - a32 * b04 + a33 * b03,\n      a22 * b04 - a21 * b05 - a23 * b03,\n      a12 * b08 - a10 * b11 - a13 * b07,\n      a00 * b11 - a02 * b08 + a03 * b07,\n      a32 * b02 - a30 * b05 - a33 * b01,\n      a20 * b05 - a22 * b02 + a23 * b01,\n      a10 * b10 - a11 * b08 + a13 * b06,\n      a01 * b08 - a00 * b10 - a03 * b06,\n      a30 * b04 - a31 * b02 + a33 * b00,\n      a21 * b02 - a20 * b04 - a23 * b00,\n      a11 * b07 - a10 * b09 - a12 * b06,\n      a00 * b09 - a01 * b07 + a02 * b06,\n      a31 * b01 - a30 * b03 - a32 * b00,\n      a20 * b03 - a21 * b01 + a22 * b00) / det;\n}\n\nvoid main(void) {\n  m_matrix = inverse(modelMatrix);\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n",
fragmentShader:"#define GLSLIFY 1\nuniform float time;\nuniform float time2;\nuniform float acceleration;\nuniform vec2 resolution;\n\nvarying mat4 m_matrix;\n\n// const vec3 cPos = vec3(0.0, 0.0, 10.0);\nconst float targetDepth = 3.5;\nconst vec3 lightDir = vec3(0.577, -0.577, 0.577);\n\nvec3 hsv2rgb(vec3 c){\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n//\n// Description : Array and textureless GLSL 2D/3D/4D simplex\n//               noise functions.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x) {\n     return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nfloat snoise(vec3 v)\n  {\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n// First corner\n  vec3 i  = floor(v + dot(v, C.yyy) );\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n// Other corners\n  vec3 g = step(x0.yzx, x0.xyz);\n  vec3 l = 1.0 - g;\n  vec3 i1 = min( g.xyz, l.zxy );\n  vec3 i2 = max( g.xyz, l.zxy );\n\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\n  vec3 x1 = x0 - i1 + C.xxx;\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\n\n// Permutations\n  i = mod289(i);\n  vec4 p = permute( permute( permute(\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n  float n_ = 0.142857142857; // 1.0/7.0\n  vec3  ns = n_ * D.wyz - D.xzx;\n\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\n\n  vec4 x_ = floor(j * ns.z);\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n  vec4 x = x_ *ns.x + ns.yyyy;\n  vec4 y = y_ *ns.x + ns.yyyy;\n  vec4 h = 1.0 - abs(x) - abs(y);\n\n  vec4 b0 = vec4( x.xy, y.xy );\n  vec4 b1 = vec4( x.zw, y.zw );\n\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n  vec4 s0 = floor(b0)*2.0 + 1.0;\n  vec4 s1 = floor(b1)*2.0 + 1.0;\n  vec4 sh = -step(h, vec4(0.0));\n\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n  vec3 p0 = vec3(a0.xy,h.x);\n  vec3 p1 = vec3(a0.zw,h.y);\n  vec3 p2 = vec3(a1.xy,h.z);\n  vec3 p3 = vec3(a1.zw,h.w);\n\n//Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n\n// Mix final noise value\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n  m = m * m;\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\n                                dot(p2,x2), dot(p3,x3) ) );\n  }\n\nvec3 rotate(vec3 p, float radian_x, float radian_y, float radian_z) {\n  mat3 mx = mat3(\n    1.0, 0.0, 0.0,\n    0.0, cos(radian_x), -sin(radian_x),\n    0.0, sin(radian_x), cos(radian_x)\n  );\n  mat3 my = mat3(\n    cos(radian_y), 0.0, sin(radian_y),\n    0.0, 1.0, 0.0,\n    -sin(radian_y), 0.0, cos(radian_y)\n  );\n  mat3 mz = mat3(\n    cos(radian_z), -sin(radian_z), 0.0,\n    sin(radian_z), cos(radian_z), 0.0,\n    0.0, 0.0, 1.0\n  );\n  return mx * my * mz * p;\n}\n\nfloat dBox(vec3 p, vec3 size) {\n  return length(max(abs(p) - size, 0.0));\n}\n\nfloat getNoise(vec3 p) {\n  return snoise(p * (0.4 + acceleration * 0.1) + time / 100.0);\n}\n\nvec3 getRotate(vec3 p) {\n  return rotate(p, radians(time2), radians(time2 * 2.0), radians(time2));\n}\n\nfloat distanceFunc(vec3 p) {\n  vec4 p1 = m_matrix * vec4(p, 1.0);\n  float n1 = getNoise(p1.xyz);\n  vec3 p2 = getRotate(p1.xyz);\n  float d1 = dBox(p2, vec3(0.8 - min(acceleration, 0.8))) - 0.2;\n  float d2 = dBox(p2, vec3(1.0)) - n1;\n  float d3 = dBox(p2, vec3(0.5 + acceleration * 0.4)) - n1;\n  return min(max(d1, -d2), d3);\n}\n\nfloat distanceFuncForFill(vec3 p) {\n  vec4 p1 = m_matrix * vec4(p, 1.0);\n  float n = getNoise(p1.xyz);\n  vec3 p2 = getRotate(p1.xyz);\n  return dBox(p2, vec3(0.5 + acceleration * 0.4)) - n;\n}\n\nvec3 getNormal(vec3 p) {\n  const float d = 0.1;\n  return normalize(vec3(\n    distanceFunc(p + vec3(d, 0.0, 0.0)) - distanceFunc(p + vec3(-d, 0.0, 0.0)),\n    distanceFunc(p + vec3(0.0, d, 0.0)) - distanceFunc(p + vec3(0.0, -d, 0.0)),\n    distanceFunc(p + vec3(0.0, 0.0, d)) - distanceFunc(p + vec3(0.0, 0.0, -d))\n  ));\n}\n\nvoid main() {\n  vec2 p = (gl_FragCoord.xy * 2.0 - resolution) / min(resolution.x, resolution.y);\n\n  vec3 cDir = normalize(cameraPosition * -1.0);\n  vec3 cUp  = vec3(0.0, 1.0, 0.0);\n  vec3 cSide = cross(cDir, cUp);\n\n  vec3 ray = normalize(cSide * p.x + cUp * p.y + cDir * targetDepth);\n\n  float distance = 0.0;\n  float rLen = 0.0;\n  vec3 rPos = cameraPosition;\n  for(int i = 0; i < 64; i++){\n    distance = distanceFunc(rPos);\n    rLen += distance;\n    rPos = cameraPosition + ray * rLen * 0.2;\n  }\n\n  vec3 normal = getNormal(rPos);\n  if(abs(distance) < 0.5){\n    if (distanceFuncForFill(rPos) > 0.5) {\n      gl_FragColor = vec4(hsv2rgb(vec3(dot(normal, cUp) * 0.8 + time / 400.0, 0.2, dot(normal, cUp) * 0.8 + 0.1)), 1.0);\n    } else {\n      gl_FragColor = vec4(hsv2rgb(vec3(dot(normal, cUp) * 0.1 + time / 400.0, 0.8, dot(normal, cUp) * 0.2 + 0.8)), 1.0);\n    }\n  } else {\n    gl_FragColor = vec4(0.0);\n  }\n}\n",transparent:!0}),t=new THREE.Mesh(n,e);return t.name="MetalCube",t},h=function(){var n=new THREE.OctahedronGeometry(30,4),e=new THREE.BufferGeometry;e.fromGeometry(n);var t=new THREE.ShaderMaterial({uniforms:{time:{type:"f",value:0},acceleration:{type:"f",value:0}},vertexShader:"#define GLSLIFY 1\nuniform float time;\nuniform float acceleration;\n\nvarying vec3 vPosition;\nvarying vec3 vColor;\nvarying mat4 invertMatrix;\n\n//\n// Description : Array and textureless GLSL 2D/3D/4D simplex\n//               noise functions.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x) {\n     return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nfloat snoise(vec3 v)\n  {\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n// First corner\n  vec3 i  = floor(v + dot(v, C.yyy) );\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n// Other corners\n  vec3 g = step(x0.yzx, x0.xyz);\n  vec3 l = 1.0 - g;\n  vec3 i1 = min( g.xyz, l.zxy );\n  vec3 i2 = max( g.xyz, l.zxy );\n\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\n  vec3 x1 = x0 - i1 + C.xxx;\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\n\n// Permutations\n  i = mod289(i);\n  vec4 p = permute( permute( permute(\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n  float n_ = 0.142857142857; // 1.0/7.0\n  vec3  ns = n_ * D.wyz - D.xzx;\n\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\n\n  vec4 x_ = floor(j * ns.z);\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n  vec4 x = x_ *ns.x + ns.yyyy;\n  vec4 y = y_ *ns.x + ns.yyyy;\n  vec4 h = 1.0 - abs(x) - abs(y);\n\n  vec4 b0 = vec4( x.xy, y.xy );\n  vec4 b1 = vec4( x.zw, y.zw );\n\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n  vec4 s0 = floor(b0)*2.0 + 1.0;\n  vec4 s1 = floor(b1)*2.0 + 1.0;\n  vec4 sh = -step(h, vec4(0.0));\n\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n  vec3 p0 = vec3(a0.xy,h.x);\n  vec3 p1 = vec3(a0.zw,h.y);\n  vec3 p2 = vec3(a1.xy,h.z);\n  vec3 p3 = vec3(a1.zw,h.w);\n\n//Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n\n// Mix final noise value\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n  m = m * m;\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\n                                dot(p2,x2), dot(p3,x3) ) );\n  }\n\nvec3 hsv2rgb(vec3 c){\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat inverse(float m) {\n  return 1.0 / m;\n}\n\nmat2 inverse(mat2 m) {\n  return mat2(m[1][1],-m[0][1],\n             -m[1][0], m[0][0]) / (m[0][0]*m[1][1] - m[0][1]*m[1][0]);\n}\n\nmat3 inverse(mat3 m) {\n  float a00 = m[0][0], a01 = m[0][1], a02 = m[0][2];\n  float a10 = m[1][0], a11 = m[1][1], a12 = m[1][2];\n  float a20 = m[2][0], a21 = m[2][1], a22 = m[2][2];\n\n  float b01 = a22 * a11 - a12 * a21;\n  float b11 = -a22 * a10 + a12 * a20;\n  float b21 = a21 * a10 - a11 * a20;\n\n  float det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  return mat3(b01, (-a22 * a01 + a02 * a21), (a12 * a01 - a02 * a11),\n              b11, (a22 * a00 - a02 * a20), (-a12 * a00 + a02 * a10),\n              b21, (-a21 * a00 + a01 * a20), (a11 * a00 - a01 * a10)) / det;\n}\n\nmat4 inverse(mat4 m) {\n  float\n      a00 = m[0][0], a01 = m[0][1], a02 = m[0][2], a03 = m[0][3],\n      a10 = m[1][0], a11 = m[1][1], a12 = m[1][2], a13 = m[1][3],\n      a20 = m[2][0], a21 = m[2][1], a22 = m[2][2], a23 = m[2][3],\n      a30 = m[3][0], a31 = m[3][1], a32 = m[3][2], a33 = m[3][3],\n\n      b00 = a00 * a11 - a01 * a10,\n      b01 = a00 * a12 - a02 * a10,\n      b02 = a00 * a13 - a03 * a10,\n      b03 = a01 * a12 - a02 * a11,\n      b04 = a01 * a13 - a03 * a11,\n      b05 = a02 * a13 - a03 * a12,\n      b06 = a20 * a31 - a21 * a30,\n      b07 = a20 * a32 - a22 * a30,\n      b08 = a20 * a33 - a23 * a30,\n      b09 = a21 * a32 - a22 * a31,\n      b10 = a21 * a33 - a23 * a31,\n      b11 = a22 * a33 - a23 * a32,\n\n      det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  return mat4(\n      a11 * b11 - a12 * b10 + a13 * b09,\n      a02 * b10 - a01 * b11 - a03 * b09,\n      a31 * b05 - a32 * b04 + a33 * b03,\n      a22 * b04 - a21 * b05 - a23 * b03,\n      a12 * b08 - a10 * b11 - a13 * b07,\n      a00 * b11 - a02 * b08 + a03 * b07,\n      a32 * b02 - a30 * b05 - a33 * b01,\n      a20 * b05 - a22 * b02 + a23 * b01,\n      a10 * b10 - a11 * b08 + a13 * b06,\n      a01 * b08 - a00 * b10 - a03 * b06,\n      a30 * b04 - a31 * b02 + a33 * b00,\n      a21 * b02 - a20 * b04 - a23 * b00,\n      a11 * b07 - a10 * b09 - a12 * b06,\n      a00 * b09 - a01 * b07 + a02 * b06,\n      a31 * b01 - a30 * b03 - a32 * b00,\n      a20 * b03 - a21 * b01 + a22 * b00) / det;\n}\n\nvec3 rotate(vec3 p, float radian_x, float radian_y, float radian_z) {\n  mat3 mx = mat3(\n    1.0, 0.0, 0.0,\n    0.0, cos(radian_x), -sin(radian_x),\n    0.0, sin(radian_x), cos(radian_x)\n  );\n  mat3 my = mat3(\n    cos(radian_y), 0.0, sin(radian_y),\n    0.0, 1.0, 0.0,\n    -sin(radian_y), 0.0, cos(radian_y)\n  );\n  mat3 mz = mat3(\n    cos(radian_z), -sin(radian_z), 0.0,\n    sin(radian_z), cos(radian_z), 0.0,\n    0.0, 0.0, 1.0\n  );\n  return mx * my * mz * p;\n}\n\nvec3 getRotate(vec3 p) {\n  return rotate(p, radians(time / 6.0), radians(time / 7.0), radians(time / 8.0));\n}\n\nvoid main() {\n  float updateTime = time / 400.0;\n  vec3 p_rotate = getRotate(position);\n  float noise = snoise(vec3(p_rotate / 12.1 + updateTime * 0.5));\n  vec3 p_noise = p_rotate + p_rotate * noise / 20.0 * (min(acceleration, 6.0) + 1.0);\n\n  vPosition = p_noise;\n  vColor = hsv2rgb(vec3(updateTime + position.y / 400.0, 0.05 + min(acceleration / 10.0, 0.25), 1.0));\n  invertMatrix = inverse(modelMatrix);\n\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(p_noise, 1.0);\n}\n",fragmentShader:"#define GLSLIFY 1\nuniform float time;\nuniform float acceleration;\n\nvarying vec3 vPosition;\nvarying vec3 vColor;\nvarying mat4 invertMatrix;\n\nvoid main() {\n  vec3 normal = normalize(cross(dFdx(vPosition), dFdy(vPosition)));\n  vec3 inv_light = normalize(invertMatrix * vec4(0.7, -0.7, 0.7, 1.0)).xyz;\n  float diff = (dot(normal, inv_light) + 1.0) / 4.0 + 0.4;\n  gl_FragColor = vec4(vColor * diff, 1.0);\n}\n",shading:THREE.FlatShading,side:THREE.BackSide}),o=new THREE.Mesh(e,t);return o.name="Background",o},p=function(n,t,o){v.acceleration.length()>.1||!o||(u.setFromCamera(o,t),d=u.intersectObjects(n.children)[0],d&&"MetalCube"==d.object.name&&(v.anchor.copy(e.getPolarCoord(e.getRadian(e.getRandomInt(-20,20)),e.getRadian(e.getRandomInt(0,360)),e.getRandomInt(30,90)/10)),m.applyForce(new THREE.Vector3(1,0,0))))},y=x(),g=h(),M=function(){l.add(y),l.add(g),s.setPolarCoord(0,e.getRadian(90),24)},w=function(){a.width=window.innerWidth,a.height=window.innerHeight,s.aspect=window.innerWidth/window.innerHeight,s.updateProjectionMatrix(),c.setSize(window.innerWidth,window.innerHeight),y.material.uniforms.resolution.value.set(window.innerWidth,window.innerHeight)},b=function(){p(l,s,f),v.applyHook(0,.12),v.applyDrag(.01),v.updateVelocity(),m.applyHook(0,.005),m.applyDrag(.2),m.updateVelocity(),y.position.copy(v.velocity),y.material.uniforms.time.value++,y.material.uniforms.time2.value+=1+Math.floor(4*v.acceleration.length()),y.material.uniforms.acceleration.value=v.acceleration.length(),g.material.uniforms.time.value++,g.material.uniforms.acceleration.value=m.velocity.length(),s.force.position.applyHook(0,.025),s.force.position.applyDrag(.2),s.force.position.updateVelocity(),s.updatePosition(),s.lookAtCenter(),c.render(l,s)},E=function D(){b(),requestAnimationFrame(D)},S=function(){var n=new THREE.Vector2,e=new THREE.Vector2,t=new THREE.Vector2,o=function(e,t,o){n.set(e,t),(0,i["default"])(n)},c=function(n,t,o){e.set(n,t),(0,i["default"])(e),f=e},l=function(n,e,o){t.set(n,e)},s=function(){t.set(0,0)};window.addEventListener("resize",r(function(){w()}),1e3),a.addEventListener("mousedown",function(n){n.preventDefault(),o(n.clientX,n.clientY,!1)}),a.addEventListener("mousemove",function(n){n.preventDefault(),c(n.clientX,n.clientY,!1)}),a.addEventListener("mouseup",function(n){n.preventDefault(),l(n.clientX,n.clientY,!1)}),a.addEventListener("touchstart",function(n){n.preventDefault(),o(n.touches[0].clientX,n.touches[0].clientY,!0)}),a.addEventListener("touchmove",function(n){n.preventDefault(),c(n.touches[0].clientX,n.touches[0].clientY,!0)}),a.addEventListener("touchend",function(n){n.preventDefault(),l(n.changedTouches[0].clientX,n.changedTouches[0].clientY,!0)}),window.addEventListener("mouseout",function(){event.preventDefault(),s()})},z=function(){c.setSize(window.innerWidth,window.innerHeight),c.setClearColor(15658734,1),s.position.set(1e3,1e3,1e3),s.lookAt(new THREE.Vector3),S(),M(),w(),E()};z()};var a=n("../modules/common/normalizeVector2"),i=o(a),r=n("js-util/debounce")},{"../modules/common/normalizeVector2":32,"../modules/old/Force3":40,"../modules/old/ForceCamera":41,"../modules/old/util":46,"js-util/debounce":12}],26:[function(n,e,t){"use strict";function o(n){return n&&n.__esModule?n:{"default":n}}var a=n("./init/common.js"),i=o(a),r=n("./init/commonSketch.js"),c=o(r),l=n("./init/index.js"),s=o(l),u=n("./init/attract.js"),d=o(u),v=n("./init/hole.js"),m=o(v),f=n("./init/metalCube.js"),x=o(f),h=n("./init/distort.js"),p=o(h),y=n("./init/imageData.js"),g=o(y),M=n("./init/gallery.js"),w=o(M),b=n("./init/comet.js"),E=o(b),S=n("./init/hyperSpace.js"),z=o(S),D=n("./init/fireBall.js"),I=o(D),F=n("./modules/common/ConsoleSignature.js"),R=o(F),T=n("./modules/common/redirectOldSketches.js"),P=o(T),H=function(){(0,P["default"])();var n=(new R["default"],location.pathname.replace("/sketch-threejs",""));switch((0,i["default"])(),"/"!==n&&(0,c["default"])(),n){case"/":(0,s["default"])();break;case"/sketch/attract.html":(0,d["default"])();break;case"/sketch/hole.html":(0,m["default"])();break;case"/sketch/metal_cube.html":(0,x["default"])();break;case"/sketch/distort.html":(0,p["default"])();break;case"/sketch/image_data.html":(0,g["default"])();break;case"/sketch/gallery.html":(0,w["default"])();break;case"/sketch/comet.html":(0,E["default"])();break;case"/sketch/hyper_space.html":(0,z["default"])();break;case"/sketch/fire_ball.html":(0,I["default"])()}};H()},{"./init/attract.js":14,"./init/comet.js":15,"./init/common.js":16,"./init/commonSketch.js":17,"./init/distort.js":18,"./init/fireBall.js":19,"./init/gallery.js":20,"./init/hole.js":21,"./init/hyperSpace.js":22,"./init/imageData.js":23,"./init/index.js":24,"./init/metalCube.js":25,"./modules/common/ConsoleSignature.js":27,"./modules/common/redirectOldSketches.js":33}],27:[function(n,e,t){"use strict";function o(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function n(n,e){for(var t=0;t<e.length;t++){var o=e[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(n,o.key,o)}}return function(e,t,o){return t&&n(e.prototype,t),o&&n(e,o),e}}(),i=function(){function n(){o(this,n),this.message="created by yoichi kobayashi",this.url="http://www.tplh.net",this.show()}return a(n,[{key:"show",value:function(){if(navigator.userAgent.toLowerCase().indexOf("chrome")>-1){var n=["\n%c "+this.message+" %c%c "+this.url+" \n\n","color: #fff; background: #222; padding:3px 0;","padding:3px 1px;","color: #fff; background: #47c; padding:3px 0;"];console.log.apply(console,n)}else window.console&&console.log(this.message+" "+this.url)}}]),n}();t["default"]=i},{}],28:[function(n,e,t){"use strict";function o(n){return n&&n.__esModule?n:{"default":n}}function a(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function n(n,e){for(var t=0;t<e.length;t++){var o=e[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(n,o.key,o)}}return function(e,t,o){return t&&n(e.prototype,t),o&&n(e,o),e}}(),r=n("./buildVueIndex"),c=o(r),l=n("./force3"),s=o(l),u=n("gl-matrix"),d=n("js-util/debounce"),v=n("js-util/isSmartphone"),m=function(){function n(){a(this,n),this.vm=(0,c["default"])(this),this.elm={wrap:document.getElementById("index"),contents:document.getElementById("index-contents"),scroll:document.getElementById("index-scroll"),items:document.getElementsByClassName("js-index-scroll-item")},this.items=[],this.offsetTop=window.pageYOffset*-1,this.isAnimate=!1,this.on()}return i(n,[{key:"init",value:function(){var n=this;this.elm.scroll.style.height=this.elm.contents.clientHeight+"px";for(var e=0;e<this.elm.items.length;e++)this.items[e]={offset:this.elm.items[e].offsetTop,velocity:[0,0,0],acceleration:[0,0,0],anchor:[0,0,0],mass:.05*e+1.2},this.elm.items[e].style.transform="translate3D(0, "+this.items[e].velocity[1]+"px, 0)";setTimeout(function(){n.elm.scroll.clientHeight!=n.elm.contents.clientHeight&&(n.elm.scroll.style.height=n.elm.contents.clientHeight+"px")},500)}},{key:"scroll",value:function(){if(this.vm.isOpened){this.offsetTop=window.pageYOffset*-1;for(var n=0;n<this.elm.items.length;n++)this.items[n].anchor[1]=this.offsetTop}}},{key:"resize",value:function(){this.vm.isOpened&&this.init()}},{key:"open",value:function(){this.init(),this.isAnimate=!0,document.body.classList.add("is-opened-index"),this.renderLoop()}},{key:"close",value:function(){this.elm.scroll.style.height=0,this.isAnimate=!1,document.body.classList.remove("is-opened-index")}},{key:"render",value:function(){for(var n=0;n<this.elm.items.length;n++){var e=this.items[n];u.vec3.length(e.acceleration)<.01&&Math.abs(e.velocity[1]-e.anchor[1])<.01||(s["default"].applyHook(e.velocity,e.acceleration,e.anchor,0,.3),s["default"].applyDrag(e.acceleration,.7),s["default"].updateVelocity(e.velocity,e.acceleration,e.mass),this.elm.items[n].style.transform="translate3D(0, "+e.velocity[1]+"px, 0)")}}},{key:"renderLoop",value:function(){var n=this;this.render(),this.isAnimate&&requestAnimationFrame(function(){n.renderLoop()})}},{key:"on",value:function(){var n=this;window.addEventListener("scroll",d(function(e){n.scroll()},10)),v()?window.addEventListener("orientationchange",function(e){n.resize()}):window.addEventListener("resize",d(function(e){n.resize()},100))}}]),n}();t["default"]=m},{"./buildVueIndex":30,"./force3":31,"gl-matrix":1,"js-util/debounce":12,"js-util/isSmartphone":13}],29:[function(n,e,t){"use strict";function o(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function n(n,e){for(var t=0;t<e.length;t++){var o=e[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(n,o.key,o)}}return function(e,t,o){return t&&n(e.prototype,t),o&&n(e,o),e}}(),i=function(){function n(e){o(this,n),this.length=e,this.accelerationScene=new THREE.Scene,this.velocityScene=new THREE.Scene,this.camera=new THREE.PerspectiveCamera(45,1,1,1e3),this.option={type:THREE.FloatType},this.acceleration=[new THREE.WebGLRenderTarget(e,e,this.option),new THREE.WebGLRenderTarget(e,e,this.option)],this.velocity=[new THREE.WebGLRenderTarget(e,e,this.option),new THREE.WebGLRenderTarget(e,e,this.option)],this.accelerationMesh=this.createMesh("#define GLSLIFY 1\nvarying vec2 vUv;\n\nvoid main(void) {\n  vUv = uv;\n  gl_Position = vec4(position, 1.0);\n}\n","#define GLSLIFY 1\nuniform vec2 resolution;\nuniform sampler2D velocity;\nuniform sampler2D acceleration;\nuniform vec2 anchor;\n\nvarying vec2 vUv;\n\n#define PRECISION 0.000001\n\nvec3 drag(vec3 a, float value) {\n  return normalize(a * -1.0 + PRECISION) * length(a) * value;\n}\n\nvec3 hook(vec3 v, vec3 anchor, float rest_length, float k) {\n  return normalize(v - anchor + PRECISION) * (-1.0 * k * (length(v - anchor) - rest_length));\n}\n\nvec3 attract(vec3 v1, vec3 v2, float m1, float m2, float g) {\n  return g * m1 * m2 / pow(clamp(length(v2 - v1), 5.0, 30.0), 2.0) * normalize(v2 - v1 + PRECISION);\n}\n\nvoid main(void) {\n  vec3 v = texture2D(velocity, vUv).xyz;\n  vec3 a = texture2D(acceleration, vUv).xyz;\n  vec3 a2 = a + normalize(vec3(\n    anchor.x * resolution.x / 6.0 + PRECISION,\n    0.0,\n    anchor.y * resolution.y / -2.0 + PRECISION\n  ) - v) / 2.0;\n  vec3 a3 = a2 + drag(a2, 0.003);\n  gl_FragColor = vec4(a3, 1.0);\n}\n"),this.velocityMesh=this.createMesh("#define GLSLIFY 1\nvarying vec2 vUv;\n\nvoid main(void) {\n  vUv = uv;\n  gl_Position = vec4(position, 1.0);\n}\n","#define GLSLIFY 1\nuniform float time;\nuniform sampler2D velocity;\nuniform sampler2D acceleration;\n\nvarying vec2 vUv;\n\nvoid main(void) {\n  gl_FragColor = vec4(texture2D(acceleration, vUv).xyz + texture2D(velocity, vUv).xyz, 1.0);\n}\n"),this.targetIndex=0}return a(n,[{key:"init",value:function(n,e){var t=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),new THREE.ShaderMaterial({vertexShader:"void main(void) {gl_Position = vec4(position, 1.0);}",fragmentShader:"void main(void) {gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);}"})),o=new THREE.DataTexture(e,this.length,this.length,THREE.RGBFormat,THREE.FloatType);o.needsUpdate=!0;var a=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),new THREE.ShaderMaterial({uniforms:{velocity:{type:"t",value:o}},vertexShader:"#define GLSLIFY 1\nvarying vec2 vUv;\n\nvoid main(void) {\n  vUv = uv;\n  gl_Position = vec4(position, 1.0);\n}\n",fragmentShader:"#define GLSLIFY 1\nuniform sampler2D velocity;\n\nvarying vec2 vUv;\n\nvoid main(void) {\n  gl_FragColor = texture2D(velocity, vUv);\n}\n"}));this.accelerationScene.add(this.camera),this.accelerationScene.add(t),n.render(this.accelerationScene,this.camera,this.acceleration[0]),n.render(this.accelerationScene,this.camera,this.acceleration[1]),this.accelerationScene.remove(t),this.accelerationScene.add(this.accelerationMesh),this.velocityScene.add(this.camera),this.velocityScene.add(a),n.render(this.velocityScene,this.camera,this.velocity[0]),n.render(this.velocityScene,this.camera,this.velocity[1]),this.velocityScene.remove(a),this.velocityScene.add(this.velocityMesh)}},{key:"createMesh",value:function(n,e){return new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),new THREE.ShaderMaterial({uniforms:{resolution:{type:"v2",value:new THREE.Vector2(window.innerWidth,window.innerHeight)},velocity:{type:"t",value:null},acceleration:{type:"t",value:null}},vertexShader:n,fragmentShader:e}))}},{key:"render",value:function(n){this.accelerationMesh.material.uniforms.acceleration.value=this.acceleration[Math.abs(this.targetIndex-1)],this.accelerationMesh.material.uniforms.velocity.value=this.velocity[this.targetIndex],n.render(this.accelerationScene,this.camera,this.acceleration[this.targetIndex]),this.velocityMesh.material.uniforms.acceleration.value=this.acceleration[this.targetIndex],this.velocityMesh.material.uniforms.velocity.value=this.velocity[this.targetIndex],n.render(this.velocityScene,this.camera,this.velocity[Math.abs(this.targetIndex-1)]),this.targetIndex=Math.abs(this.targetIndex-1)}},{key:"getCurrentVelocity",value:function(){return this.velocity[Math.abs(this.targetIndex-1)]}},{key:"getCurrentAcceleration",value:function(){return this.acceleration[Math.abs(this.targetIndex-1)]}},{key:"resize",value:function(n){this.length=n,this.velocity[0].setSize(n,n),this.velocity[1].setSize(n,n),this.acceleration[0].setSize(n,n),this.acceleration[1].setSize(n,n)}}]),n}();t["default"]=i},{}],30:[function(n,e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=function(n){return new Vue({el:"#index",data:{isOpened:-1},methods:{toggle:function(){1==this.isOpened?(this.isOpened=0,n.close()):(this.isOpened=1,n.open())}}})}},{}],31:[function(n,e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n("gl-matrix");t["default"]={updateVelocity:function(n,e,t){o.vec3.scale(e,e,1/t),o.vec3.add(n,n,e)},applyFriction:function(n,e,t){var a=[0,0,0];o.vec3.scale(a,n,-1);o.vec3.normalize(a,a),o.vec3.scale(a,a,e),o.vec3.add(n,n,a)},applyDrag:function(n,e){var t=[0,0,0];o.vec3.scale(t,n,-1),o.vec3.normalize(t,t),o.vec3.scale(t,t,o.vec3.length(n)*e),o.vec3.add(n,n,t)},applyHook:function(n,e,t,a,i){var r=[0,0,0];o.vec3.sub(r,n,t);var c=o.vec3.length(r)-a;o.vec3.normalize(r,r),o.vec3.scale(r,r,-1*i*c),o.vec3.add(e,e,r)}}},{"gl-matrix":1}],32:[function(n,e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=function(n){n.x=n.x/document.body.clientWidth*2-1,n.y=2*-(n.y/window.innerHeight)+1}},{}],33:[function(n,e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=function(){for(var n=decodeURIComponent(location.search.substring(1)),e=n.split("&"),t=0;t<e.length;t++)if(!(e[t].indexOf("sketch_id")<0)){var o=e[t].replace("sketch_id=","");switch(o=parseInt(o,10)){case 9:location.href="/sketch/attract.html";break;case 8:location.href="/sketch/hole.html";break;case 7:location.href="/sketch/metal_cube.html";break;case 6:location.href="/sketch/distort.html";break;case 5:location.href="/sketch/image_data.html";break;case 4:location.href="/sketch/gallery.html";break;case 3:location.href="/sketch/comet.html";break;case 2:location.href="/sketch/hyper_space.html";break;case 1:location.href="/sketch/fire_ball.html"}}}},{}],34:[function(n,e,t){"use strict";function o(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function n(n,e){for(var t=0;t<e.length;t++){var o=e[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(n,o.key,o)}}return function(e,t,o){return t&&n(e.prototype,t),o&&n(e,o),e}}(),i=function(){function n(){o(this,n),this.uniforms={time:{type:"f",value:0},resolution:{type:"v2",value:new THREE.Vector2}},this.obj=this.createObj()}return a(n,[{key:"createObj",value:function(){var n=new THREE.BufferGeometry,e=new Float32Array([0,Math.sqrt(3)/2,0,-1,Math.sqrt(3)/2*-1,0,1,Math.sqrt(3)/2*-1,0]),t=new Uint16Array([0,1,2,0]);return n.addAttribute("position",new THREE.BufferAttribute(e,3)),n.setIndex(new THREE.BufferAttribute(t,1)),new THREE.Line(n,new THREE.RawShaderMaterial({uniforms:this.uniforms,vertexShader:"#define GLSLIFY 1\nattribute vec3 position;\nattribute float index;\n\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\n\nvoid main() {\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n",fragmentShader:"#define GLSLIFY 1\nvoid main() {\n  gl_FragColor = vec4(1.0);\n}\n"}))}}]),n}();t["default"]=i},{}],35:[function(n,e,t){"use strict";function o(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function n(n,e){for(var t=0;t<e.length;t++){var o=e[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(n,o.key,o)}}return function(e,t,o){return t&&n(e.prototype,t),o&&n(e,o),e}}(),i=n("js-util/MathEx"),r=function(){function n(){o(this,n),this.uniforms={time:{type:"f",value:0}},this.obj=this.createObj(),this.obj.position.set(0,-200,0),this.obj.rotation.set(i.radians(-90),0,0)}return a(n,[{key:"createObj",value:function(){return new THREE.Mesh(new THREE.PlaneBufferGeometry(1024,1024,32,32),new THREE.RawShaderMaterial({uniforms:this.uniforms,vertexShader:"#define GLSLIFY 1\nattribute vec3 position;\n\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float time;\n\nvarying vec3 vPosition;\n\nvoid main() {\n  float sin1 = sin((position.x + position.y) * 0.2 + time * 0.5);\n  float sin2 = sin((position.x - position.y) * 0.4 + time * 2.0);\n  float sin3 = sin((position.x + position.y) * -0.6 + time);\n  vec3 updatePosition = vec3(position.x, position.y, position.z + sin1 * 50.0 + sin2 * 10.0 + sin3 * 8.0);\n  vPosition = position;\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(updatePosition, 1.0);\n}\n",fragmentShader:"precision highp float;\n#define GLSLIFY 1\n\nuniform float time;\n\nvarying vec3 vPosition;\n\nconst float duration = 8.0;\nconst float delay = 4.0;\n\nvec3 convertHsvToRgb(vec3 c) {\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid main() {\n  float now = clamp((time - delay) / duration, 0.0, 1.0);\n  float opacity = (1.0 - length(vPosition.xy / vec2(512.0))) * 0.6 * now;\n  vec3 v = normalize(vPosition);\n  vec3 rgb = convertHsvToRgb(vec3(0.5 + (v.x + v.y + v.x) / 40.0 + time * 0.1, 0.4, 1.0));\n  gl_FragColor = vec4(rgb, opacity);\n}\n",transparent:!0,wireframe:!0}))}},{key:"render",value:function(n){this.uniforms.time.value+=n}}]),n}();t["default"]=r},{"js-util/MathEx":11}],36:[function(n,e,t){"use strict";function o(n,e){
if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function n(n,e){for(var t=0;t<e.length;t++){var o=e[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(n,o.key,o)}}return function(e,t,o){return t&&n(e.prototype,t),o&&n(e,o),e}}(),i=(n("js-util/MathEx"),function(n,e,t){var o=[],a=[e[0]-n[0],e[1]-n[1],e[2]-n[2]],i=[t[0]-n[0],t[1]-n[1],t[2]-n[2]];o[0]=a[1]*i[2]-a[2]*i[1],o[1]=a[2]*i[0]-a[0]*i[2],o[2]=a[0]*i[1]-a[1]*i[0];for(var r=Math.sqrt(o[0]*o[0]+o[1]*o[1]+o[2]*o[2],2),c=0;c<o.length;c++)o[c]=o[c]/r;return o}),r=function(){function n(){o(this,n),this.uniforms={time:{type:"f",value:0}},this.obj=this.createObj(),this.obj.position.set(0,210,0)}return a(n,[{key:"createObj",value:function(){for(var n=new THREE.OctahedronBufferGeometry(90,4),e=n.attributes.position.array,t=[],o=[],a=[],r=0;r<e.length;r+=9){var c=i([e[r+0],e[r+1],e[r+2]],[e[r+3],e[r+4],e[r+5]],[e[r+6],e[r+7],e[r+8]]);t.push(c[0],c[1],c[2],c[0],c[1],c[2],c[0],c[1],c[2]);var l=[(e[r+0]+e[r+3]+e[r+6])/3,(e[r+1]+e[r+4]+e[r+7])/3,(e[r+2]+e[r+5]+e[r+8])/3],s=.5*Math.random();o.push(l[0],l[1],l[2],l[0],l[1],l[2],l[0],l[1],l[2]),a.push(s,s,s)}var u=new Float32Array(t),d=new Float32Array(o),v=new Float32Array(a);return n.addAttribute("faceNormal",new THREE.BufferAttribute(u,3)),n.addAttribute("center",new THREE.BufferAttribute(d,3)),n.addAttribute("delay",new THREE.BufferAttribute(v,1)),new THREE.Mesh(n,new THREE.RawShaderMaterial({uniforms:this.uniforms,vertexShader:'#define GLSLIFY 1\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec3 faceNormal;\nattribute vec3 center;\nattribute float delay;\n\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float time;\n\nvarying vec3 vPosition;\nvarying float vNoise;\nvarying float vNow;\n\nconst float duration = 2.0;\nconst float delayAll = 1.0;\n\nfloat exponentialOut(float t) {\n  return t == 1.0 ? t : 1.0 - pow(2.0, -10.0 * t);\n}\n\nmat4 computeTranslateMat(vec3 v) {\n  return mat4(\n    1.0, 0.0, 0.0, 0.0,\n    0.0, 1.0, 0.0, 0.0,\n    0.0, 0.0, 1.0, 0.0,\n    v.x, v.y, v.z, 1.0\n  );\n}\n\nmat4 rotateMatrixX(float radian) {\n  return mat4(\n    1.0, 0.0, 0.0, 0.0,\n    0.0, cos(radian), -sin(radian), 0.0,\n    0.0, sin(radian), cos(radian), 0.0,\n    0.0, 0.0, 0.0, 1.0\n  );\n}\n\nmat4 rotateMatrixY(float radian) {\n  return mat4(\n    cos(radian), 0.0, sin(radian), 0.0,\n    0.0, 1.0, 0.0, 0.0,\n    -sin(radian), 0.0, cos(radian), 0.0,\n    0.0, 0.0, 0.0, 1.0\n  );\n}\n\nmat4 rotateMatrixZ(float radian) {\n  return mat4(\n    cos(radian), -sin(radian), 0.0, 0.0,\n    sin(radian), cos(radian), 0.0, 0.0,\n    0.0, 0.0, 1.0, 0.0,\n    0.0, 0.0, 0.0, 1.0\n  );\n}\n\nmat4 computeRotateMat(float radX, float radY, float radZ) {\n  return rotateMatrixX(radX) * rotateMatrixY(radY) * rotateMatrixZ(radZ);\n}\n\n//\n// GLSL textureless classic 3D noise "cnoise",\n// with an RSL-style periodic variant "pnoise".\n// Author:  Stefan Gustavson (stefan.gustavson@liu.se)\n// Version: 2011-10-11\n//\n// Many thanks to Ian McEwan of Ashima Arts for the\n// ideas for permutation and gradient selection.\n//\n// Copyright (c) 2011 Stefan Gustavson. All rights reserved.\n// Distributed under the MIT license. See LICENSE file.\n// https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289(vec3 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x)\n{\n  return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nvec3 fade(vec3 t) {\n  return t*t*t*(t*(t*6.0-15.0)+10.0);\n}\n\n// Classic Perlin noise\nfloat cnoise(vec3 P)\n{\n  vec3 Pi0 = floor(P); // Integer part for indexing\n  vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n  Pi0 = mod289(Pi0);\n  Pi1 = mod289(Pi1);\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 * (1.0 / 7.0);\n  vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 * (1.0 / 7.0);\n  vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\n  return 2.2 * n_xyz;\n}\n\nvoid main() {\n  float now = exponentialOut(max((time - delayAll - delay - (faceNormal.x + 1.0) / 2.0 - (faceNormal.y + 1.0) / 2.0) / duration, 0.0));\n  mat4 translateMat = computeTranslateMat(vec3(faceNormal) * 1200.0 * (1.0 - now) + vec3(0.0, sin(time) * 10.0, 0.0));\n  mat4 rotateMat = computeRotateMat(0.0, radians((1.0 - now) * faceNormal.y * 4320.0), 0.0);\n  float rotateRadian = radians((time + faceNormal.x + faceNormal.y) * 1440.0);\n  mat4 rotateMatSelf = computeRotateMat(rotateRadian, rotateRadian, 0.0);\n  float noise = smoothstep(-0.4, 0.4,\n    cnoise(vec3(position.x * 0.035 - time, position.y * 0.035 - time, position.z * 0.035 + time))\n  ) * 2.0 - 1.0;\n  vec3 updatePositionSelf = (rotateMatSelf * vec4(position - center, 1.0)).xyz * (1.0 - now) + position\n    + normalize(position) * noise ;\n  vec4 updatePosition = rotateMat * translateMat * vec4(updatePositionSelf, 1.0);\n  vPosition = updatePosition.xyz;\n  vNoise = noise;\n  vNow = now;\n  gl_Position = projectionMatrix * modelViewMatrix * updatePosition;\n}\n',fragmentShader:"precision highp float;\n#define GLSLIFY 1\n\nuniform mat3 normalMatrix;\nuniform float time;\n\nvarying vec3 vPosition;\nvarying float vNoise;\nvarying float vNow;\n\nconst vec3 lightDirection = vec3(1.0, -1.0, -1.0);\nconst float duration = 2.0;\nconst float delayAll = 1.0;\n\nvec3 convertHsvToRgb(vec3 c) {\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid main() {\n  float now = clamp((time - delayAll - 1.5) / duration, 0.0, 1.0);\n  vec3 normal = normalize(cross(dFdx(vPosition), dFdy(vPosition)));\n  vec3 light = normalize(normalMatrix * lightDirection);\n  float diff = (dot(normal, light) + 1.0) / 2.0 * 0.2;\n  float opacity = smoothstep(0.1, 0.2, vNow);\n  vec3 v = normalize(vPosition);\n  vec3 rgb = (1.0 - now) * vec3(1.0) + convertHsvToRgb(vec3(0.5 + (v.x + v.y + v.x) / 40.0 + time * 0.1, 0.8, 0.4 + sin(time) * 0.05 + vNoise * 0.02));\n  gl_FragColor = vec4(rgb + diff, opacity);\n}\n",shading:THREE.FlatShading,transparent:!0,side:THREE.DoubleSide}))}},{key:"render",value:function(n){this.uniforms.time.value+=n}}]),n}();t["default"]=r},{"js-util/MathEx":11}],37:[function(n,e,t){"use strict";function o(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function n(n,e){for(var t=0;t<e.length;t++){var o=e[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(n,o.key,o)}}return function(e,t,o){return t&&n(e.prototype,t),o&&n(e,o),e}}(),i=(n("js-util/MathEx"),function(){function n(){o(this,n),this.uniforms={time:{type:"f",value:0}},this.obj=this.createObj(),this.obj.position.set(0,210,0)}return a(n,[{key:"createObj",value:function(){var n=new THREE.OctahedronBufferGeometry(150,4);return new THREE.Mesh(n,new THREE.RawShaderMaterial({uniforms:this.uniforms,vertexShader:"#define GLSLIFY 1\nattribute vec3 position;\n\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float time;\n\nvarying vec3 vPosition;\nvarying float vOpacity;\n\nconst float duration = 4.0;\nconst float delay = 3.0;\n\nfloat exponentialOut(float t) {\n  return t == 1.0 ? t : 1.0 - pow(2.0, -10.0 * t);\n}\n\nmat4 computeTranslateMat(vec3 v) {\n  return mat4(\n    1.0, 0.0, 0.0, 0.0,\n    0.0, 1.0, 0.0, 0.0,\n    0.0, 0.0, 1.0, 0.0,\n    v.x, v.y, v.z, 1.0\n  );\n}\n\nmat4 computeScaleMat(vec3 scale) {\n  return mat4(\n    scale.x, 0.0, 0.0, 0.0,\n    0.0, scale.y, 0.0, 0.0,\n    0.0, 0.0, scale.z, 0.0,\n    0.0, 0.0, 0.0, 1.0\n  );\n}\n\nmat4 rotateMatrixX(float radian) {\n  return mat4(\n    1.0, 0.0, 0.0, 0.0,\n    0.0, cos(radian), -sin(radian), 0.0,\n    0.0, sin(radian), cos(radian), 0.0,\n    0.0, 0.0, 0.0, 1.0\n  );\n}\n\nmat4 rotateMatrixY(float radian) {\n  return mat4(\n    cos(radian), 0.0, sin(radian), 0.0,\n    0.0, 1.0, 0.0, 0.0,\n    -sin(radian), 0.0, cos(radian), 0.0,\n    0.0, 0.0, 0.0, 1.0\n  );\n}\n\nmat4 rotateMatrixZ(float radian) {\n  return mat4(\n    cos(radian), -sin(radian), 0.0, 0.0,\n    sin(radian), cos(radian), 0.0, 0.0,\n    0.0, 0.0, 1.0, 0.0,\n    0.0, 0.0, 0.0, 1.0\n  );\n}\n\nmat4 computeRotateMat(float radX, float radY, float radZ) {\n  return rotateMatrixX(radX) * rotateMatrixY(radY) * rotateMatrixZ(radZ);\n}\n\nvoid main() {\n  float now = clamp((time - delay) / duration, 0.0, 1.0);\n  mat4 translateMat = computeTranslateMat(vec3(0.0, sin(time) * 10.0, 0.0));\n  mat4 scaleMat = computeScaleMat(vec3(exponentialOut(now) * 0.6 + 0.4 + sin(time * 2.0) * 0.04));\n  mat4 rotateMat = computeRotateMat(radians(45.0), radians(time * 2.0), radians(-time * 2.0));\n  vec4 updatePosition = translateMat * rotateMat * scaleMat * vec4(position, 1.0);\n  vPosition = normalize(position);\n  vOpacity = normalize(updatePosition).z;\n  gl_Position = projectionMatrix * modelViewMatrix * updatePosition;\n}\n",fragmentShader:'precision highp float;\n#define GLSLIFY 1\n\nuniform float time;\n\nvarying vec3 vPosition;\nvarying float vOpacity;\n\nconst float duration = 4.0;\nconst float delay = 3.0;\n\nvec3 convertHsvToRgb(vec3 c) {\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n//\n// GLSL textureless classic 3D noise "cnoise",\n// with an RSL-style periodic variant "pnoise".\n// Author:  Stefan Gustavson (stefan.gustavson@liu.se)\n// Version: 2011-10-11\n//\n// Many thanks to Ian McEwan of Ashima Arts for the\n// ideas for permutation and gradient selection.\n//\n// Copyright (c) 2011 Stefan Gustavson. All rights reserved.\n// Distributed under the MIT license. See LICENSE file.\n// https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289(vec3 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x)\n{\n  return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nvec3 fade(vec3 t) {\n  return t*t*t*(t*(t*6.0-15.0)+10.0);\n}\n\n// Classic Perlin noise\nfloat cnoise(vec3 P)\n{\n  vec3 Pi0 = floor(P); // Integer part for indexing\n  vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n  Pi0 = mod289(Pi0);\n  Pi1 = mod289(Pi1);\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 * (1.0 / 7.0);\n  vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 * (1.0 / 7.0);\n  vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\n  return 2.2 * n_xyz;\n}\n\nfloat random(vec2 co){\n  return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid main() {\n  float now = clamp((time - delay) / duration, 0.0, 1.0);\n  float noise1 = cnoise(vec3((vPosition * vec3(0.4, 2.0, -0.6) * 2.0 + time))) * 7.0 - (1.0 + (1.0 - now) * 7.0);\n  float noise2 = cnoise(vec3((vPosition * 42.0 + time)));\n  float noise3 = cnoise(vec3((vPosition * 7.0 + time))) * 2.0;\n  float bright = smoothstep(-0.2, 1.0, (noise1 + noise2 + noise3) * now);\n  vec3 v = normalize(vPosition);\n  vec3 rgb = (1.0 - now) * vec3(1.0) + convertHsvToRgb(vec3(0.5 + (v.x + v.y + v.x) / 40.0 + time * 0.1, 0.4, 1.0));\n  float whiteNoise = random(vPosition.xy);\n  if (bright < 0.4) discard;\n  gl_FragColor = vec4(rgb * vec3(1.0 - bright + 0.6) + whiteNoise * 0.2, 0.4 + vOpacity * 0.5 + sin(time * 2.0) * 0.1);\n}\n',transparent:!0,side:THREE.DoubleSide,depthWrite:!1}))}},{key:"render",value:function(n){this.uniforms.time.value+=n}}]),n}());t["default"]=i},{"js-util/MathEx":11}],38:[function(n,e,t){"use strict";function o(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function n(n,e){for(var t=0;t<e.length;t++){var o=e[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(n,o.key,o)}}return function(e,t,o){return t&&n(e.prototype,t),o&&n(e,o),e}}(),i=function(){function n(){o(this,n),this.uniforms={time:{type:"f",value:0},resolution:{type:"v2",value:new THREE.Vector2},texture:{type:"t",value:null}},this.obj=null,this.isLoaded=!1}return a(n,[{key:"loadTexture",value:function(n){var e=this,t=new THREE.TextureLoader;t.load("/sketch-threejs/img/index/tex_title.png",function(t){t.magFilter=THREE.NearestFilter,t.minFilter=THREE.NearestFilter,e.uniforms.texture.value=t,e.obj=e.createObj(),e.isLoaded=!0,n()})}},{key:"createObj",value:function(){return new THREE.Mesh(new THREE.PlaneBufferGeometry(256,64,40,10),new THREE.RawShaderMaterial({uniforms:this.uniforms,vertexShader:"#define GLSLIFY 1\nattribute vec3 position;\nattribute vec2 uv;\n\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float time;\n\nvarying vec2 vUv;\n\nconst float interval = 3.0;\n\nfloat cubicOut(float t) {\n  float f = t - 1.0;\n  return f * f * f + 1.0;\n}\n\nvoid main() {\n  float now = cubicOut(min(time / interval, 1.0));\n  vec3 updatePosition = vec3(\n    position.x * (1.2 - now * 0.2),\n    position.y * (1.2 - now * 0.2),\n    position.z\n  );\n  vUv = uv;\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(updatePosition, 1.0);\n}\n",fragmentShader:"precision highp float;\n#define GLSLIFY 1\n\nuniform float time;\nuniform sampler2D texture;\n\nvarying vec2 vUv;\n\nconst float interval = 3.0;\n\n//\n// Description : Array and textureless GLSL 2D/3D/4D simplex\n//               noise functions.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x) {\n     return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nfloat snoise(vec3 v)\n  {\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n// First corner\n  vec3 i  = floor(v + dot(v, C.yyy) );\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n// Other corners\n  vec3 g = step(x0.yzx, x0.xyz);\n  vec3 l = 1.0 - g;\n  vec3 i1 = min( g.xyz, l.zxy );\n  vec3 i2 = max( g.xyz, l.zxy );\n\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\n  vec3 x1 = x0 - i1 + C.xxx;\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\n\n// Permutations\n  i = mod289(i);\n  vec4 p = permute( permute( permute(\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n  float n_ = 0.142857142857; // 1.0/7.0\n  vec3  ns = n_ * D.wyz - D.xzx;\n\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\n\n  vec4 x_ = floor(j * ns.z);\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n  vec4 x = x_ *ns.x + ns.yyyy;\n  vec4 y = y_ *ns.x + ns.yyyy;\n  vec4 h = 1.0 - abs(x) - abs(y);\n\n  vec4 b0 = vec4( x.xy, y.xy );\n  vec4 b1 = vec4( x.zw, y.zw );\n\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n  vec4 s0 = floor(b0)*2.0 + 1.0;\n  vec4 s1 = floor(b1)*2.0 + 1.0;\n  vec4 sh = -step(h, vec4(0.0));\n\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n  vec3 p0 = vec3(a0.xy,h.x);\n  vec3 p1 = vec3(a0.zw,h.y);\n  vec3 p2 = vec3(a1.xy,h.z);\n  vec3 p3 = vec3(a1.zw,h.w);\n\n//Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n\n// Mix final noise value\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n  m = m * m;\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\n                                dot(p2,x2), dot(p3,x3) ) );\n  }\n\nfloat cubicOut(float t) {\n  float f = t - 1.0;\n  return f * f * f + 1.0;\n}\n\nvoid main() {\n  float now = cubicOut(min(time / interval, 1.0));\n  float noise = (snoise(vec3(vUv.x * 4.0, vUv.y * 4.0, 1.0)) + 1.0) / 2.0;\n  float opacity = smoothstep(0.4, 0.6, ((noise - 1.0) + now * interval) - vUv.x);\n  gl_FragColor = texture2D(texture, vUv) * vec4(vec3(1.0), opacity);\n}\n",transparent:!0}))}},{key:"render",value:function(n){this.isLoaded&&(this.uniforms.time.value+=n)}}]),n}();t["default"]=i},{}],39:[function(n,e,t){"use strict";var o=(n("./util"),function(){var n=function(){this.velocity=new THREE.Vector2,this.acceleration=new THREE.Vector2,this.anchor=new THREE.Vector2,this.mass=1};return n.prototype.updateVelocity=function(){this.acceleration.divideScalar(this.mass),this.velocity.add(this.acceleration)},n.prototype.applyForce=function(n){this.acceleration.add(n)},n.prototype.applyFriction=function(n,e){var t=this.acceleration.clone();e||(e=1),t.multiplyScalar(-1),t.normalize(),t.multiplyScalar(n),this.applyForce(t)},n.prototype.applyDrag=function(n){var e=this.acceleration.clone();e.multiplyScalar(-1),e.normalize(),e.multiplyScalar(this.acceleration.length()*n),this.applyForce(e)},n.prototype.applyHook=function(n,e){var t=this.velocity.clone().sub(this.anchor),o=t.length()-n;t.normalize(),t.multiplyScalar(-1*e*o),this.applyForce(t)},n});e.exports=o()},{"./util":46}],40:[function(n,e,t){"use strict";var o=(n("./util"),function(){var n=function(){this.velocity=new THREE.Vector3,this.acceleration=new THREE.Vector3,this.anchor=new THREE.Vector3,this.mass=1};return n.prototype.updateVelocity=function(){this.acceleration.divideScalar(this.mass),this.velocity.add(this.acceleration)},n.prototype.applyForce=function(n){this.acceleration.add(n)},n.prototype.applyFriction=function(n,e){var t=this.acceleration.clone();e||(e=1),t.multiplyScalar(-1),t.normalize(),t.multiplyScalar(n),this.applyForce(t)},n.prototype.applyDrag=function(n){var e=this.acceleration.clone();e.multiplyScalar(-1),e.normalize(),e.multiplyScalar(this.acceleration.length()*n),this.applyForce(e)},n.prototype.applyHook=function(n,e){var t=this.velocity.clone().sub(this.anchor),o=t.length()-n;t.normalize(),t.multiplyScalar(-1*e*o),this.applyForce(t)},n});e.exports=o()},{"./util":46}],41:[function(n,e,t){"use strict";var o=n("./util"),a=n("./Force3"),i=function(){var n=function(n,e,t,o){THREE.PerspectiveCamera.call(this,n,e,t,o),this.force={position:new a,look:new a},this.up.set(0,1,0)};return n.prototype=Object.create(THREE.PerspectiveCamera.prototype),n.prototype.constructor=n,n.prototype.updatePosition=function(){this.position.copy(this.force.position.velocity)},n.prototype.updateLook=function(){this.lookAt({x:this.force.look.velocity.x,y:this.force.look.velocity.y,z:this.force.look.velocity.z})},n.prototype.reset=function(){this.setPolarCoord(),this.lookAtCenter()},n.prototype.resize=function(n,e){this.aspect=n/e,this.updateProjectionMatrix()},n.prototype.setPolarCoord=function(n,e,t){this.force.position.anchor.copy(o.getPolarCoord(n,e,t))},n.prototype.lookAtCenter=function(){this.lookAt({x:0,y:0,z:0})},n};e.exports=i()},{"./Force3":40,"./util":46}],42:[function(n,e,t){"use strict";var o=n("./util"),a=n("./Force3"),i=function(){var n=function(n,e,t){THREE.HemisphereLight.call(this,n,e,t),this.force=new a};return n.prototype=Object.create(THREE.HemisphereLight.prototype),n.prototype.constructor=n,n.prototype.updatePosition=function(){this.position.copy(this.force.velocity)},n.prototype.setPositionSpherical=function(n,e,t){this.position.copy(o.getPolarCoord(n,e,t))},n};e.exports=i()},{"./Force3":40,"./util":46}],43:[function(n,e,t){"use strict";var o=n("./util"),a=n("./Force3"),i=function(){var n=function(n,e,t,o){THREE.PointLight.call(this,n,e,t,o),this.force=new a};return n.prototype=Object.create(THREE.PointLight.prototype),n.prototype.constructor=n,n.prototype.updatePosition=function(){this.position.copy(this.force.velocity)},n.prototype.setPolarCoord=function(n,e,t){this.position.copy(o.getPolarCoord(n,e,t))},n};e.exports=i()},{"./Force3":40,"./util":46}],44:[function(n,e,t){"use strict";var o=(n("./util"),n("./Force3")),a=function(){var n=function(){this.size=0,this.time=0,this.is_active=!1,o.call(this)};return n.prototype=Object.create(o.prototype),n.prototype.constructor=n,n.prototype.init=function(n){this.velocity=n.clone(),this.anchor=n.clone(),this.acceleration.set(0,0,0),this.time=0},n.prototype.activate=function(){this.is_active=!0},n.prototype.inactivate=function(){this.is_active=!1},n};e.exports=a()},{"./Force3":40,"./util":46}],45:[function(n,e,t){"use strict";var o=(n("./util"),n("./Force3")),a=function(){var n=function(){this.geometry=new THREE.BufferGeometry,this.material=null,this.obj=null,o.call(this)};return n.prototype=Object.create(o.prototype),n.prototype.constructor=n,n.prototype.init=function(n){this.material=new THREE.ShaderMaterial({uniforms:{color:{type:"c",value:new THREE.Color(16777215)},texture:{type:"t",value:n.texture}},vertexShader:n.vs,fragmentShader:n.fs,transparent:!0,depthWrite:!1,blending:n.blending}),this.geometry.addAttribute("position",new THREE.BufferAttribute(n.positions,3)),this.geometry.addAttribute("customColor",new THREE.BufferAttribute(n.colors,3)),this.geometry.addAttribute("vertexOpacity",new THREE.BufferAttribute(n.opacities,1)),this.geometry.addAttribute("size",new THREE.BufferAttribute(n.sizes,1)),this.obj=new THREE.Points(this.geometry,this.material),n.scene.add(this.obj)},n.prototype.updatePoints=function(){this.obj.position.copy(this.velocity),this.obj.geometry.attributes.position.needsUpdate=!0,this.obj.geometry.attributes.vertexOpacity.needsUpdate=!0,this.obj.geometry.attributes.size.needsUpdate=!0,this.obj.geometry.attributes.customColor.needsUpdate=!0},n};e.exports=a()},{"./Force3":40,"./util":46}],46:[function(n,e,t){"use strict";e.exports={getRandomInt:function(n,e){return Math.floor(Math.random()*(e-n))+n},getDegree:function(n){return n/Math.PI*180},getRadian:function(n){return n*Math.PI/180},getPolarCoord:function(n,e,t){var o=Math.cos(n)*Math.cos(e)*t,a=Math.cos(n)*Math.sin(e)*t,i=Math.sin(n)*t;return new THREE.Vector3(o,i,a)}}},{}]},{},[26]);